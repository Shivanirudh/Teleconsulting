{"ast":null,"code":"var _jsxFileName = \"/home/somya/Desktop/Teleconsulting/Frontend/src/components/CustomRoute.jsx\";\n// CustomRoute.js\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomRoute = ({\n  element,\n  ...rest\n}) => {\n  // Check if the user is authenticated by verifying if the token is present in local storage\n  const isAuthenticated = !!localStorage.getItem('token');\n  return isAuthenticated ?\n  /*#__PURE__*/\n  // If the user is authenticated, render the provided element\n  _jsxDEV(Route, {\n    ...rest,\n    element: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this) :\n  /*#__PURE__*/\n  // If the user is not authenticated, redirect them to the login page\n  _jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomRoute;\nexport default CustomRoute;\nvar _c;\n$RefreshReg$(_c, \"CustomRoute\");","map":{"version":3,"names":["React","Route","Navigate","jsxDEV","_jsxDEV","CustomRoute","element","rest","isAuthenticated","localStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/home/somya/Desktop/Teleconsulting/Frontend/src/components/CustomRoute.jsx"],"sourcesContent":["// CustomRoute.js\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\n\nconst CustomRoute = ({ element, ...rest }) => {\n  // Check if the user is authenticated by verifying if the token is present in local storage\n  const isAuthenticated = !!localStorage.getItem('token');\n\n  return isAuthenticated ? (\n    // If the user is authenticated, render the provided element\n    <Route {...rest} element={element} />\n  ) : (\n    // If the user is not authenticated, redirect them to the login page\n    <Navigate to=\"/login\" replace />\n  );\n};\n\nexport default CustomRoute;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,KAAK;EAC5C;EACA,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAEvD,OAAOF,eAAe;EAAA;EACpB;EACAJ,OAAA,CAACH,KAAK;IAAA,GAAKM,IAAI;IAAED,OAAO,EAAEA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAAA;EAErC;EACAV,OAAA,CAACF,QAAQ;IAACa,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAChC;AACH,CAAC;AAACG,EAAA,GAXIZ,WAAW;AAajB,eAAeA,WAAW;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}