{"ast":null,"code":"var _jsxFileName = \"/home/somya/Desktop/Teleconsulting/Frontend/src/pages/Admin/AdminPatient.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Admin/Navbar';\nimport SideNavbar from '../../components/Admin/sidenavbar';\n\n// Dummy data for testing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyData = [{\n  id: 1,\n  firstName: 'John',\n  lastName: 'Doe',\n  phoneNo: 1234567890,\n  email: 'john@example.com',\n  role: 'ROLE_PATIENT',\n  createdAt: '2024-02-23T10:00:00',\n  createdBy: 'admin',\n  otp: '123456',\n  otpExpiry: '2024-02-23T12:00:00'\n}, {\n  id: 2,\n  firstName: 'Jane',\n  lastName: 'Doe',\n  phoneNo: 9876543210,\n  email: 'jane@example.com',\n  role: 'ROLE_PATIENT',\n  createdAt: '2024-02-23T11:00:00',\n  createdBy: 'admin',\n  otp: '654321',\n  otpExpiry: '2024-02-23T13:00:00'\n}];\nconst PatientTable = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Created At\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Created By\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"OTP Expiry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.phoneNo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.createdBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.otp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: patient.otpExpiry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, patient.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = PatientTable;\nconst AdminPatient = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n\n  // Simulate fetching data from API\n  useEffect(() => {\n    // You can fetch data from your backend API here\n    // For now, we're using the dummy data\n    setPatients(dummyData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(PatientTable, {\n          data: patients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPatient, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n_c2 = AdminPatient;\nexport default AdminPatient;\nvar _c, _c2;\n$RefreshReg$(_c, \"PatientTable\");\n$RefreshReg$(_c2, \"AdminPatient\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","SideNavbar","jsxDEV","_jsxDEV","dummyData","id","firstName","lastName","phoneNo","email","role","createdAt","createdBy","otp","otpExpiry","PatientTable","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","patient","_c","AdminPatient","_s","patients","setPatients","className","_c2","$RefreshReg$"],"sources":["/home/somya/Desktop/Teleconsulting/Frontend/src/pages/Admin/AdminPatient.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Admin/Navbar';\nimport SideNavbar from '../../components/Admin/sidenavbar';\n\n// Dummy data for testing\nconst dummyData = [\n  { id: 1, firstName: 'John', lastName: 'Doe', phoneNo: 1234567890, email: 'john@example.com', role: 'ROLE_PATIENT', createdAt: '2024-02-23T10:00:00', createdBy: 'admin', otp: '123456', otpExpiry: '2024-02-23T12:00:00' },\n  { id: 2, firstName: 'Jane', lastName: 'Doe', phoneNo: 9876543210, email: 'jane@example.com', role: 'ROLE_PATIENT', createdAt: '2024-02-23T11:00:00', createdBy: 'admin', otp: '654321', otpExpiry: '2024-02-23T13:00:00' }\n];\n\nconst PatientTable = ({ data }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Phone Number</th>\n          <th>Email</th>\n          <th>Role</th>\n          <th>Created At</th>\n          <th>Created By</th>\n          <th>OTP</th>\n          <th>OTP Expiry</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map(patient => (\n          <tr key={patient.id}>\n            <td>{patient.id}</td>\n            <td>{patient.firstName}</td>\n            <td>{patient.lastName}</td>\n            <td>{patient.phoneNo}</td>\n            <td>{patient.email}</td>\n            <td>{patient.role}</td>\n            <td>{patient.createdAt}</td>\n            <td>{patient.createdBy}</td>\n            <td>{patient.otp}</td>\n            <td>{patient.otpExpiry}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst AdminPatient = () => {\n  const [patients, setPatients] = useState([]);\n\n  // Simulate fetching data from API\n  useEffect(() => {\n    // You can fetch data from your backend API here\n    // For now, we're using the dummy data\n    setPatients(dummyData);\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"content\">\n        <SideNavbar />\n        <div className=\"main-content\">\n          <PatientTable data={patients} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPatient;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}