{"ast":null,"code":"var _jsxFileName = \"/home/somya/Desktop/Teleconsulting/Frontend/src/pages/PatientLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './../css/PatientLogin.css';\nimport logo from './../images/patient-login.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientLogin = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n  const handleLogin = () => {\n    // Hardcoded username and password for testing\n    if (username === 'patient@example.com' && password === 'password') {\n      // Assume OTP generation and sending logic here\n      // For demonstration, let's generate a random OTP\n      const generatedOtp = Math.floor(1000 + Math.random() * 9000);\n      setOtp(generatedOtp);\n      setIsOtpSent(true);\n    }\n  };\n  const handleOtpVerification = () => {\n    // Perform OTP verification logic here\n    // For demonstration purposes, let's assume it's verified if OTP is correct\n    alert('OTP verified successfully!');\n    // Here you can perform additional actions after OTP verification, if needed\n  };\n  const handleSignUp = () => {\n    // Redirect to SignUp page\n    window.location.href = '/signup';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Patient Logo\",\n        className: \"patient-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signup-btn\",\n        onClick: handleSignUp,\n        children: \"Don't have an account? Register.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), isOtpSent && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: e => setOtp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOtpVerification,\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientLogin, \"Y62ciWWhLhAVCffnx0Yfn2eJHfI=\");\n_c = PatientLogin;\nexport default PatientLogin;\nvar _c;\n$RefreshReg$(_c, \"PatientLogin\");","map":{"version":3,"names":["React","useState","logo","jsxDEV","_jsxDEV","PatientLogin","_s","username","setUsername","password","setPassword","isOtpSent","setIsOtpSent","otp","setOtp","handleLogin","generatedOtp","Math","floor","random","handleOtpVerification","alert","handleSignUp","window","location","href","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/somya/Desktop/Teleconsulting/Frontend/src/pages/PatientLogin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './../css/PatientLogin.css';\nimport logo from './../images/patient-login.png';\n\nconst PatientLogin = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n\n  const handleLogin = () => {\n    // Hardcoded username and password for testing\n    if (username === 'patient@example.com' && password === 'password') {\n      // Assume OTP generation and sending logic here\n      // For demonstration, let's generate a random OTP\n      const generatedOtp = Math.floor(1000 + Math.random() * 9000);\n      setOtp(generatedOtp);\n      setIsOtpSent(true);\n    }\n  };\n\n  const handleOtpVerification = () => {\n    // Perform OTP verification logic here\n    // For demonstration purposes, let's assume it's verified if OTP is correct\n    alert('OTP verified successfully!');\n    // Here you can perform additional actions after OTP verification, if needed\n  };\n\n  const handleSignUp = () => {\n    // Redirect to SignUp page\n    window.location.href = '/signup';\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"login-container\">\n        <img src={logo} alt=\"Patient Logo\" className=\"patient-logo\" />\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <button onClick={handleLogin}>Login</button>\n        <button className=\"signup-btn\" onClick={handleSignUp}>Don't have an account? Register.</button>\n        {isOtpSent && (\n          <div className=\"otp-section\">\n            <input type=\"text\" placeholder=\"Enter OTP\" value={otp} onChange={(e) => setOtp(e.target.value)} />\n            <button onClick={handleOtpVerification}>Verify OTP</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PatientLogin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}