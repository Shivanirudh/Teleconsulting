{"ast":null,"code":"var _jsxFileName = \"/home/somya/Desktop/Teleconsulting/Frontend/src/pages/Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport './../css/Signup.css';\nimport logo from './../images/signup-logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [username, setUsername] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [isChecked, setIsChecked] = useState(false);\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const handleSignUp = () => {\n    if (firstName && lastName && email && password && phone && username && otp == '0000') {\n      navigate('/patientlogin'); // Navigate to PatientLogin page\n    }\n  };\n  const handleGetOTP = () => {\n    // Assume OTP generation and sending logic here\n    // For demonstration, let's set a hardcoded OTP\n    const hardcodedOtp = '0000';\n    setOtp(hardcodedOtp);\n    setIsOtpSent(true);\n  };\n  const handleOtpVerification = () => {\n    // Assume OTP verification logic here\n    alert('OTP verified successfully!');\n  };\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n  };\n  const handleTermsClick = () => {\n    window.open('/terms', '_blank');\n  };\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n    // Generate OTP when username is changed\n    const generatedOtp = Math.floor(1000 + Math.random() * 9000);\n    setOtp(generatedOtp.toString());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Sign Up Logo\",\n        className: \"signup-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"Phone Number\",\n        value: phone,\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        disabled: !isOtpSent || isVerified\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGetOTP,\n        disabled: isOtpSent,\n        children: \"Get OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignUp,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"terms-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isChecked,\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"I have read and agree to the \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"terms-link\",\n            onClick: handleTermsClick,\n            children: \"terms and agreement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"3iCFEG3tdMYCfDrhP3beaFjWRwU=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","logo","jsxDEV","_jsxDEV","SignUp","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","phone","setPhone","username","setUsername","isVerified","setIsVerified","otp","setOtp","isChecked","setIsChecked","isOtpSent","setIsOtpSent","handleSignUp","navigate","handleGetOTP","hardcodedOtp","handleOtpVerification","alert","handleCheckboxChange","handleTermsClick","window","open","handleUsernameChange","event","target","value","generatedOtp","Math","floor","random","toString","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","disabled","onClick","checked","_c","$RefreshReg$"],"sources":["/home/somya/Desktop/Teleconsulting/Frontend/src/pages/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport './../css/Signup.css';\nimport logo from './../images/signup-logo.png';\n\nconst SignUp = () => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [username, setUsername] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [isChecked, setIsChecked] = useState(false);\n  const [isOtpSent, setIsOtpSent] = useState(false);\n\n  const handleSignUp = () => {\n    if(firstName && lastName && email && password && phone && username && otp == '0000') {\n      navigate('/patientlogin'); // Navigate to PatientLogin page\n    }\n  };\n\n  const handleGetOTP = () => {\n    // Assume OTP generation and sending logic here\n    // For demonstration, let's set a hardcoded OTP\n    const hardcodedOtp = '0000';\n    setOtp(hardcodedOtp);\n    setIsOtpSent(true);\n  };\n\n  const handleOtpVerification = () => {\n    // Assume OTP verification logic here\n    alert('OTP verified successfully!');\n  };\n\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n  };\n\n  const handleTermsClick = () => {\n    window.open('/terms', '_blank');\n  };\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n    // Generate OTP when username is changed\n    const generatedOtp = Math.floor(1000 + Math.random() * 9000);\n    setOtp(generatedOtp.toString());\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"signup-container\">\n        <img src={logo} alt=\"Sign Up Logo\" className=\"signup-logo\" />\n        <input type=\"text\" placeholder=\"First Name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n        <input type=\"text\" placeholder=\"Last Name\" value={lastName} onChange={(e) => setLastName(e.target.value)} />\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <input type=\"tel\" placeholder=\"Phone Number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\n        <input type=\"text\" placeholder=\"Enter OTP\" value={otp} onChange={(e) => setOtp(e.target.value)} disabled={!isOtpSent || isVerified} />\n        <button onClick={handleGetOTP} disabled={isOtpSent}>Get OTP</button>\n        <button onClick={handleSignUp}>Sign Up</button>\n        <label className=\"terms-label\">\n          <input type=\"checkbox\" checked={isChecked} onChange={handleCheckboxChange} />\n          <span>I have read and agree to the <span className=\"terms-link\" onClick={handleTermsClick}>terms and agreement</span></span>\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}