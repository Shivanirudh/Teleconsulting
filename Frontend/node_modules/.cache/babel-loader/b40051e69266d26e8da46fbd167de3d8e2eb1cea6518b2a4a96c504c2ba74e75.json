{"ast":null,"code":"var _jsxFileName = \"/home/somya/Desktop/Teleconsulting/Frontend/src/pages/Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './../css/SignUp.css';\nimport logo from './../images/signup-logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [isChecked, setIsChecked] = useState(false);\n  const handleSignUp = () => {\n    // Perform sign-up logic here\n    // For demonstration, let's assume the sign-up is successful if all fields are filled\n    if (firstName && lastName && email && password && phone) {\n      setIsVerified(true);\n      // Assume OTP generation and sending logic here\n      // For demonstration, let's generate a random OTP\n      const generatedOtp = Math.floor(1000 + Math.random() * 9000);\n      setOtp(generatedOtp);\n    }\n  };\n  const handleOtpVerification = () => {\n    // Perform OTP verification logic here\n    // For demonstration purposes, let's assume it's verified if OTP is correct\n    // In a real application, you'd compare the input OTP with the generated OTP\n    alert('OTP verified successfully!');\n  };\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n  };\n  const handleTermsClick = () => {\n    // Open terms and agreement template\n    window.open('/terms', '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Sign Up Logo\",\n        className: \"signup-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"Phone Number\",\n        value: phone,\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignUp,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), phone && !isVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: e => setOtp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOtpVerification,\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"terms-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isChecked,\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"I have read and agree to the \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"terms-link\",\n            onClick: handleTermsClick,\n            children: \"terms and agreement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"c8LCz8EKyPnjknYsFydaD8yAujU=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","logo","jsxDEV","_jsxDEV","SignUp","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","phone","setPhone","isVerified","setIsVerified","otp","setOtp","isChecked","setIsChecked","handleSignUp","generatedOtp","Math","floor","random","handleOtpVerification","alert","handleCheckboxChange","handleTermsClick","window","open","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","checked","_c","$RefreshReg$"],"sources":["/home/somya/Desktop/Teleconsulting/Frontend/src/pages/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './../css/SignUp.css';\nimport logo from './../images/signup-logo.png';\n\nconst SignUp = () => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleSignUp = () => {\n    // Perform sign-up logic here\n    // For demonstration, let's assume the sign-up is successful if all fields are filled\n    if (firstName && lastName && email && password && phone) {\n      setIsVerified(true);\n      // Assume OTP generation and sending logic here\n      // For demonstration, let's generate a random OTP\n      const generatedOtp = Math.floor(1000 + Math.random() * 9000);\n      setOtp(generatedOtp);\n    }\n  };\n\n  const handleOtpVerification = () => {\n    // Perform OTP verification logic here\n    // For demonstration purposes, let's assume it's verified if OTP is correct\n    // In a real application, you'd compare the input OTP with the generated OTP\n    alert('OTP verified successfully!');\n  };\n\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n  };\n\n  const handleTermsClick = () => {\n    // Open terms and agreement template\n    window.open('/terms', '_blank');\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"signup-container\">\n        <img src={logo} alt=\"Sign Up Logo\" className=\"signup-logo\" />\n        <input type=\"text\" placeholder=\"First Name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n        <input type=\"text\" placeholder=\"Last Name\" value={lastName} onChange={(e) => setLastName(e.target.value)} />\n        <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <input type=\"tel\" placeholder=\"Phone Number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\n        <button onClick={handleSignUp}>Sign Up</button>\n        {phone && !isVerified && (\n          <div className=\"otp-section\">\n            <input type=\"text\" placeholder=\"Enter OTP\" value={otp} onChange={(e) => setOtp(e.target.value)} />\n            <button onClick={handleOtpVerification}>Verify OTP</button>\n          </div>\n        )}\n        <label className=\"terms-label\">\n          <input type=\"checkbox\" checked={isChecked} onChange={handleCheckboxChange} />\n          <span>I have read and agree to the <span className=\"terms-link\" onClick={handleTermsClick}>terms and agreement</span></span>\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}