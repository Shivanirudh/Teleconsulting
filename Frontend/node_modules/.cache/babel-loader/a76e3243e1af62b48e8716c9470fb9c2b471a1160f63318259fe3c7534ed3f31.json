{"ast":null,"code":"var _jsxFileName = \"/home/somya/Desktop/Teleconsulting/Frontend/src/pages/Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './../css/Signup.css';\nimport logo from './../images/signup-logo.png';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState(0); // Initialize phone as a number\n  const [isChecked, setIsChecked] = useState(false);\n  const [signupSuccess, setSignupSuccess] = useState(false);\n  const navigate = useNavigate();\n  const axiosInstance = axios.create({\n    baseURL: 'http://localhost:8081/api/v1'\n  });\n  useEffect(() => {\n    if (signupSuccess) {\n      alert('Signup successful!');\n      navigate('/patientlogin');\n    }\n  }, [signupSuccess, navigate]);\n  const handleSignUp = () => {\n    if (firstName && lastName && email && password && phone &&\n    // Make sure phone is not null or empty\n    isChecked) {\n      console.log(firstName, lastName, email, password, phone, isChecked); // Check if data is correct\n      axiosInstance.post('/auth/patient/register', JSON.stringify({\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        phoneNo: phone\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log(response.data);\n        setSignupSuccess(true);\n        alert('Signup successful!'); // Ensure this alert is being triggered\n      }).catch(error => {\n        console.error('Error:', error);\n        alert('Signup failed!');\n      });\n    } else {\n      alert('Please fill in all fields and agree to terms.');\n    }\n  };\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n  };\n  const handleTermsClick = () => {\n    window.open('/terms', '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Sign Up Logo\",\n        className: \"signup-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Phone Number\",\n        value: phone,\n        onChange: e => setPhone(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"terms-label\",\n        style: {\n          paddingBottom: '13px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isChecked,\n          onChange: handleCheckboxChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"I have read and agree to the \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"terms-link\",\n            onClick: handleTermsClick,\n            children: \"terms and agreement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignUp,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"F0tlxO4Bu35gblWVRvQiedYReLw=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","logo","axios","jsxDEV","_jsxDEV","SignUp","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","phone","setPhone","isChecked","setIsChecked","signupSuccess","setSignupSuccess","navigate","axiosInstance","create","baseURL","alert","handleSignUp","console","log","post","JSON","stringify","phoneNo","headers","then","response","data","catch","error","handleCheckboxChange","handleTermsClick","window","open","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","parseInt","style","paddingBottom","checked","onClick","_c","$RefreshReg$"],"sources":["/home/somya/Desktop/Teleconsulting/Frontend/src/pages/Signup.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './../css/Signup.css';\nimport logo from './../images/signup-logo.png';\nimport axios from 'axios';\n\nconst SignUp = () => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState(0); // Initialize phone as a number\n  const [isChecked, setIsChecked] = useState(false);\n  const [signupSuccess, setSignupSuccess] = useState(false);\n  const navigate = useNavigate();\n\n  const axiosInstance = axios.create({\n    baseURL: 'http://localhost:8081/api/v1',\n  });\n\n  useEffect(() => {\n    if (signupSuccess) {\n      alert('Signup successful!');\n      navigate('/patientlogin');\n    }\n  }, [signupSuccess, navigate]);\n\n  const handleSignUp = () => {\n    if (\n      firstName &&\n      lastName &&\n      email &&\n      password &&\n      phone && // Make sure phone is not null or empty\n      isChecked\n    ) {\n      console.log(firstName, lastName, email, password, phone, isChecked); // Check if data is correct\n      axiosInstance.post('/auth/patient/register', JSON.stringify({\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        phoneNo: phone\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(response => {\n          console.log(response.data);\n          setSignupSuccess(true);\n          alert('Signup successful!'); // Ensure this alert is being triggered\n        })\n        .catch(error => {\n          console.error('Error:', error);\n          alert('Signup failed!');\n        });\n    } else {\n      alert('Please fill in all fields and agree to terms.');\n    }\n  };\n\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n  };\n\n  const handleTermsClick = () => {\n    window.open('/terms', '_blank');\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"signup-container\">\n        <img src={logo} alt=\"Sign Up Logo\" className=\"signup-logo\" />\n        <input type=\"text\" placeholder=\"First Name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n        <input type=\"text\" placeholder=\"Last Name\" value={lastName} onChange={(e) => setLastName(e.target.value)} />\n        <input type=\"text\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <input type=\"number\" placeholder=\"Phone Number\" value={phone} onChange={(e) => setPhone(parseInt(e.target.value))} /> {/* Ensure phone is a number */}\n        <label className=\"terms-label\" style={{ paddingBottom: '13px' }}>\n          <input type=\"checkbox\" checked={isChecked} onChange={handleCheckboxChange} />\n          <span>I have read and agree to the <span className=\"terms-link\" onClick={handleTermsClick}>terms and agreement</span></span>\n        </label>\n        <button onClick={handleSignUp}>Sign Up</button>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}