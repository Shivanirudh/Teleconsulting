{"ast":null,"code":"var _jsxFileName = \"/home/somya/Desktop/Teleconsulting/Frontend/src/pages/PatientLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './../css/PatientLogin.css';\nimport logo from './../images/patient-login.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PatientLogin = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n  const handleGetOTP = () => {\n    const hardcodedOtp = '0000';\n    setOtp(hardcodedOtp);\n    setIsOtpSent(true);\n  };\n  const handleLogin = () => {\n    if (!isOtpSent) {\n      handleGetOTP();\n    } else {\n      if (username === 'patient@example.com' && password === 'password' && otp === '0000') {\n        alert('Login successful!');\n      } else {\n        alert('Invalid username, password, or OTP');\n      }\n    }\n  };\n  const handleOtpVerification = () => {\n    alert('OTP verified successfully!');\n    // Additional actions after OTP verification\n  };\n  const handleSignUp = () => {\n    window.location.href = '/signup';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Patient Logo\",\n        className: \"patient-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), !isOtpSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"signup-btn\",\n          onClick: handleSignUp,\n          children: \"Don't have an account? Register.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGetOTP,\n          children: \"Get OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), isOtpSent && /*#__PURE__*/_jsxDEV(OTPInput, {\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        onVerify: handleOtpVerification,\n        isSent: isOtpSent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientLogin, \"Y62ciWWhLhAVCffnx0Yfn2eJHfI=\");\n_c = PatientLogin;\nexport default PatientLogin;\nvar _c;\n$RefreshReg$(_c, \"PatientLogin\");","map":{"version":3,"names":["React","useState","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","PatientLogin","_s","username","setUsername","password","setPassword","isOtpSent","setIsOtpSent","otp","setOtp","handleGetOTP","hardcodedOtp","handleLogin","alert","handleOtpVerification","handleSignUp","window","location","href","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","OTPInput","onVerify","isSent","_c","$RefreshReg$"],"sources":["/home/somya/Desktop/Teleconsulting/Frontend/src/pages/PatientLogin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './../css/PatientLogin.css';\nimport logo from './../images/patient-login.png';\n\nconst PatientLogin = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n\n  const handleGetOTP = () => {\n    const hardcodedOtp = '0000';\n    setOtp(hardcodedOtp);\n    setIsOtpSent(true);\n  };\n\n  const handleLogin = () => {\n    if (!isOtpSent) {\n      handleGetOTP();\n    } else {\n      if (username === 'patient@example.com' && password === 'password' && otp === '0000') {\n        alert('Login successful!');\n      } else {\n        alert('Invalid username, password, or OTP');\n      }\n    }\n  };\n\n  const handleOtpVerification = () => {\n    alert('OTP verified successfully!');\n    // Additional actions after OTP verification\n  };\n\n  const handleSignUp = () => {\n    window.location.href = '/signup';\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"login-container\">\n        <img src={logo} alt=\"Patient Logo\" className=\"patient-logo\" />\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        {!isOtpSent && (\n          <>\n            <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n            <button onClick={handleLogin}>Login</button>\n            <button className=\"signup-btn\" onClick={handleSignUp}>Don't have an account? Register.</button>\n            <button onClick={handleGetOTP}>Get OTP</button>\n          </>\n        )}\n        {isOtpSent && <OTPInput value={otp} onChange={(e) => setOtp(e.target.value)} onVerify={handleOtpVerification} isSent={isOtpSent} />}\n      </div>\n    </div>\n  );\n};\n\nexport default PatientLogin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}