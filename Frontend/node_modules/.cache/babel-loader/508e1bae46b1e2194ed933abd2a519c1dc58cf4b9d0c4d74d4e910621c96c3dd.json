{"ast":null,"code":"import { useMemo as e, memo as r, useCallback as o, Fragment as t, useRef as i, useEffect as n } from \"react\";\nimport { useTheme as a, guessQuantizeColorScale as u, quantizeColorScalePropType as l, useDimensions as c, SvgWrapper as d, withContainer as s, ResponsiveWrapper as f, getRelativeCursor as h, bindDefs as p } from \"@nivo/core\";\nimport { BasicTooltip as g, useTooltip as v } from \"@nivo/tooltip\";\nimport m from \"prop-types\";\nimport { useInheritedColor as C, inheritedColorPropType as b } from \"@nivo/colors\";\nimport y from \"lodash/isFunction\";\nimport R from \"lodash/get\";\nimport { format as j } from \"d3-format\";\nimport { geoAzimuthalEqualArea as q, geoAzimuthalEquidistant as T, geoGnomonic as M, geoOrthographic as W, geoStereographic as w, geoEqualEarth as k, geoEquirectangular as F, geoMercator as O, geoTransverseMercator as L, geoNaturalEarth1 as E, geoPath as S, geoGraticule as G, geoContains as x } from \"d3-geo\";\nimport { useQuantizeColorScaleLegendData as B, BoxLegendSvg as P, renderLegendToCanvas as N } from \"@nivo/legends\";\nimport { jsx as H } from \"react/jsx-runtime\";\nfunction I() {\n  return I = Object.assign ? Object.assign.bind() : function (e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var o = arguments[r];\n      for (var t in o) Object.prototype.hasOwnProperty.call(o, t) && (e[t] = o[t]);\n    }\n    return e;\n  }, I.apply(this, arguments);\n}\nvar D = {\n    azimuthalEqualArea: q,\n    azimuthalEquidistant: T,\n    gnomonic: M,\n    orthographic: W,\n    stereographic: w,\n    equalEarth: k,\n    equirectangular: F,\n    mercator: O,\n    transverseMercator: L,\n    naturalEarth1: E\n  },\n  z = function (r) {\n    var o = r.width,\n      t = r.height,\n      i = r.projectionType,\n      n = r.projectionScale,\n      u = r.projectionTranslation,\n      l = r.projectionRotation,\n      c = r.fillColor,\n      d = r.borderWidth,\n      s = r.borderColor,\n      f = e(function () {\n        return D[i]().scale(n).translate([o * u[0], t * u[1]]).rotate(l);\n      }, [o, t, i, n, u[0], u[1], l[0], l[1], l[2]]),\n      h = e(function () {\n        return S(f);\n      }, [f]),\n      p = e(function () {\n        return G();\n      }),\n      g = a(),\n      v = e(function () {\n        return \"function\" == typeof d ? d : function () {\n          return d;\n        };\n      }, [d]),\n      m = C(s, g),\n      b = e(function () {\n        return \"function\" == typeof c ? c : function () {\n          return c;\n        };\n      }, [c]);\n    return {\n      projection: f,\n      path: h,\n      graticule: p,\n      getBorderWidth: v,\n      getBorderColor: m,\n      getFillColor: b\n    };\n  },\n  K = function (r) {\n    var o = r.features,\n      t = r.data,\n      i = r.match,\n      n = r.label,\n      a = r.value,\n      l = r.valueFormat,\n      c = r.colors,\n      d = r.unknownColor,\n      s = r.domain,\n      f = e(function () {\n        return y(i) ? i : function (e, r) {\n          var o = R(e, i),\n            t = R(r, i);\n          return o && o === t;\n        };\n      }, [i]),\n      h = e(function () {\n        return y(n) ? n : function (e) {\n          return R(e, n);\n        };\n      }, [n]),\n      p = e(function () {\n        return y(a) ? a : function (e) {\n          return R(e, a);\n        };\n      }, [a]),\n      g = e(function () {\n        return void 0 === l ? function (e) {\n          return e;\n        } : y(l) ? l : j(l);\n      }, [l]),\n      v = e(function () {\n        return u(c).domain(s);\n      }, [c, s]),\n      m = e(function () {\n        return function (e) {\n          return void 0 === e.value ? d : v(e.value);\n        };\n      }, [v, d]),\n      C = e(function () {\n        return o.map(function (e) {\n          var r = t.find(function (r) {\n              return f(e, r);\n            }),\n            o = p(r);\n          if (r) {\n            var i = I({}, e, {\n              data: r,\n              value: o,\n              formattedValue: g(o)\n            });\n            return i.color = m(i), i.label = h(i), i;\n          }\n          return e;\n        });\n      }, [o, t, f, p, g, m]),\n      b = B({\n        scale: v,\n        valueFormat: g\n      });\n    return {\n      colorScale: v,\n      getFillColor: m,\n      boundFeatures: C,\n      valueFormatter: g,\n      legendData: b\n    };\n  },\n  V = r(function (e) {\n    var r = e.feature;\n    return void 0 === r.data ? null : H(g, {\n      id: r.label,\n      color: r.color,\n      enableChip: !0,\n      value: r.formattedValue\n    });\n  });\nV.propTypes = {\n  feature: m.object.isRequired\n}, V.displayName = \"ChoroplethTooltip\";\nvar A = {\n    features: m.arrayOf(m.shape({\n      id: m.string.isRequired,\n      type: m.oneOf([\"Feature\"]).isRequired,\n      properties: m.object,\n      geometry: m.object.isRequired\n    })).isRequired,\n    projectionType: m.oneOf(Object.keys(D)).isRequired,\n    projectionScale: m.number.isRequired,\n    projectionTranslation: m.arrayOf(m.number).isRequired,\n    projectionRotation: m.arrayOf(m.number).isRequired,\n    fillColor: m.oneOfType([m.string, m.func]).isRequired,\n    borderWidth: m.oneOfType([m.number, m.func]).isRequired,\n    borderColor: b.isRequired,\n    enableGraticule: m.bool.isRequired,\n    graticuleLineWidth: m.number.isRequired,\n    graticuleLineColor: m.string.isRequired,\n    isInteractive: m.bool.isRequired,\n    onMouseEnter: m.func.isRequired,\n    onMouseMove: m.func.isRequired,\n    onMouseLeave: m.func.isRequired,\n    onClick: m.func.isRequired,\n    tooltip: m.any,\n    layers: m.arrayOf(m.oneOfType([m.oneOf([\"graticule\", \"features\"]), m.func])).isRequired\n  },\n  J = I({}, A, {\n    role: m.string.isRequired\n  }),\n  Q = I({\n    pixelRatio: m.number.isRequired\n  }, A),\n  U = {\n    data: m.arrayOf(m.object).isRequired,\n    match: m.oneOfType([m.string, m.func]).isRequired,\n    label: m.oneOfType([m.string, m.func]).isRequired,\n    value: m.oneOfType([m.string, m.func]).isRequired,\n    valueFormat: m.oneOfType([m.string, m.func]),\n    colors: l.isRequired,\n    domain: m.arrayOf(m.number).isRequired,\n    unknownColor: m.string.isRequired,\n    layers: m.arrayOf(m.oneOfType([m.oneOf([\"graticule\", \"features\", \"legends\"]), m.func])).isRequired\n  },\n  X = I({}, J, U, {\n    role: m.string.isRequired\n  }),\n  Y = I({}, Q, U),\n  Z = {\n    projectionType: \"mercator\",\n    projectionScale: 100,\n    projectionTranslation: [.5, .5],\n    projectionRotation: [0, 0, 0],\n    enableGraticule: !1,\n    graticuleLineWidth: .5,\n    graticuleLineColor: \"#999999\",\n    fillColor: \"#dddddd\",\n    borderWidth: 0,\n    borderColor: \"#000000\",\n    isInteractive: !0,\n    onMouseEnter: function () {},\n    onMouseLeave: function () {},\n    onMouseMove: function () {},\n    onClick: function () {},\n    layers: [\"graticule\", \"features\"],\n    legends: [],\n    fill: [],\n    defs: []\n  },\n  $ = I({}, Z, {\n    role: \"img\"\n  }),\n  _ = I({}, Z, {\n    pixelRatio: \"undefined\" != typeof window && window.devicePixelRatio || 1\n  }),\n  ee = {\n    match: \"id\",\n    label: \"id\",\n    value: \"value\",\n    colors: \"PuBuGn\",\n    unknownColor: \"#999\",\n    tooltip: V,\n    layers: [\"graticule\", \"features\", \"legends\"]\n  },\n  re = I({}, $, ee, {\n    role: \"img\"\n  }),\n  oe = I({}, _, ee),\n  te = r(function (e) {\n    var r = e.path,\n      o = e.graticule,\n      t = e.lineWidth,\n      i = e.lineColor;\n    return H(\"path\", {\n      fill: \"none\",\n      strokeWidth: t,\n      stroke: i,\n      d: r(o())\n    });\n  });\nte.propTypes = {\n  path: m.func.isRequired,\n  graticule: m.func.isRequired,\n  lineWidth: m.number.isRequired,\n  lineColor: m.string.isRequired\n}, te.displayName = \"GeoGraticule\";\nvar ie = r(function (e) {\n  var r,\n    o = e.feature,\n    t = e.path,\n    i = e.fillColor,\n    n = e.borderWidth,\n    a = e.borderColor,\n    u = e.onClick,\n    l = e.onMouseEnter,\n    c = e.onMouseMove,\n    d = e.onMouseLeave;\n  return H(\"path\", {\n    fill: null != (r = null == o ? void 0 : o.fill) ? r : i,\n    strokeWidth: n,\n    stroke: a,\n    strokeLinejoin: \"bevel\",\n    d: t(o),\n    onMouseEnter: function (e) {\n      return l(o, e);\n    },\n    onMouseMove: function (e) {\n      return c(o, e);\n    },\n    onMouseLeave: function (e) {\n      return d(o, e);\n    },\n    onClick: function (e) {\n      return u(o, e);\n    }\n  }, o.id);\n});\nie.propTypes = {\n  feature: m.shape({\n    id: m.string.isRequired,\n    type: m.oneOf([\"Feature\"]).isRequired,\n    properties: m.object,\n    geometry: m.object.isRequired\n  }).isRequired,\n  path: m.func.isRequired,\n  fillColor: m.string.isRequired,\n  borderWidth: m.number.isRequired,\n  borderColor: m.string.isRequired,\n  onMouseEnter: m.func.isRequired,\n  onMouseMove: m.func.isRequired,\n  onMouseLeave: m.func.isRequired,\n  onClick: m.func.isRequired\n}, ie.displayName = \"GeoMapFeature\";\nvar ne = r(function (e) {\n  var r = e.width,\n    i = e.height,\n    n = e.margin,\n    u = e.features,\n    l = e.layers,\n    s = e.projectionType,\n    f = e.projectionScale,\n    h = e.projectionTranslation,\n    p = e.projectionRotation,\n    g = e.fillColor,\n    m = e.borderWidth,\n    C = e.borderColor,\n    b = e.enableGraticule,\n    y = e.graticuleLineWidth,\n    R = e.graticuleLineColor,\n    j = e.isInteractive,\n    q = e.onClick,\n    T = e.tooltip,\n    M = e.role,\n    W = c(r, i, n),\n    w = W.margin,\n    k = W.outerWidth,\n    F = W.outerHeight,\n    O = z({\n      width: r,\n      height: i,\n      projectionType: s,\n      projectionScale: f,\n      projectionTranslation: h,\n      projectionRotation: p,\n      fillColor: g,\n      borderWidth: m,\n      borderColor: C\n    }),\n    L = O.graticule,\n    E = O.path,\n    S = O.getFillColor,\n    G = O.getBorderWidth,\n    x = O.getBorderColor,\n    B = a(),\n    P = v(),\n    N = P.showTooltipFromEvent,\n    I = P.hideTooltip,\n    D = o(function (e, r) {\n      return j && q && q(e, r);\n    }, [j, q]),\n    K = o(function (e, r) {\n      return j && T && N(H(T, {\n        feature: e\n      }), r);\n    }, [j, N, T]),\n    V = o(function (e, r) {\n      return j && T && N(H(T, {\n        feature: e\n      }), r);\n    }, [j, N, T]),\n    A = o(function () {\n      return j && I();\n    }, [j, I]);\n  return H(d, {\n    width: k,\n    height: F,\n    margin: w,\n    theme: B,\n    role: M,\n    children: l.map(function (r, o) {\n      return \"graticule\" === r ? !0 !== b ? null : H(te, {\n        path: E,\n        graticule: L,\n        lineWidth: y,\n        lineColor: R\n      }, \"graticule\") : \"features\" === r ? H(t, {\n        children: u.map(function (e) {\n          return H(ie, {\n            feature: e,\n            path: E,\n            fillColor: S(e),\n            borderWidth: G(e),\n            borderColor: x(e),\n            onMouseEnter: K,\n            onMouseMove: V,\n            onMouseLeave: A,\n            onClick: D\n          }, e.id);\n        })\n      }, \"features\") : H(t, {\n        children: r(e)\n      }, o);\n    })\n  });\n});\nne.displayName = \"GeoMap\", ne.propTypes = J, ne.defaultProps = $;\nvar ae = s(ne),\n  ue = function (e) {\n    return H(f, {\n      children: function (r) {\n        var o = r.width,\n          t = r.height;\n        return H(ae, I({\n          width: o,\n          height: t\n        }, e));\n      }\n    });\n  },\n  le = function (e, r, o, t) {\n    var i = h(r, e),\n      n = i[0],\n      a = i[1];\n    return o.find(function (e) {\n      return x(e, t.invert([n, a]));\n    });\n  },\n  ce = r(function (e) {\n    var r = e.width,\n      t = e.height,\n      u = e.margin,\n      l = e.pixelRatio,\n      d = e.features,\n      s = e.layers,\n      f = e.projectionType,\n      h = e.projectionScale,\n      p = e.projectionTranslation,\n      g = e.projectionRotation,\n      m = e.fillColor,\n      C = e.borderWidth,\n      b = e.borderColor,\n      y = e.enableGraticule,\n      R = e.graticuleLineWidth,\n      j = e.graticuleLineColor,\n      q = e.isInteractive,\n      T = e.onClick,\n      M = e.onMouseMove,\n      W = e.tooltip,\n      w = i(null),\n      k = a(),\n      F = c(r, t, u),\n      O = F.margin,\n      L = F.outerWidth,\n      E = F.outerHeight,\n      S = z({\n        width: r,\n        height: t,\n        projectionType: f,\n        projectionScale: h,\n        projectionTranslation: p,\n        projectionRotation: g,\n        fillColor: m,\n        borderWidth: C,\n        borderColor: b\n      }),\n      G = S.projection,\n      x = S.graticule,\n      B = S.path,\n      P = S.getFillColor,\n      N = S.getBorderWidth,\n      I = S.getBorderColor;\n    n(function () {\n      if (w) {\n        w.current.width = L * l, w.current.height = E * l;\n        var r = w.current.getContext(\"2d\");\n        r.scale(l, l), r.fillStyle = k.background, r.fillRect(0, 0, L, E), r.translate(O.left, O.top), B.context(r), s.forEach(function (o) {\n          \"graticule\" === o ? !0 === y && (r.lineWidth = R, r.strokeStyle = j, r.beginPath(), B(x()), r.stroke()) : \"features\" === o ? d.forEach(function (e) {\n            r.beginPath(), B(e), r.fillStyle = P(e), r.fill();\n            var o = N(e);\n            o > 0 && (r.strokeStyle = I(e), r.lineWidth = o, r.stroke());\n          }) : o(r, e);\n        });\n      }\n    }, [w, L, E, O, l, k, B, x, P, N, I, d, s]);\n    var D = v(),\n      K = D.showTooltipFromEvent,\n      V = D.hideTooltip,\n      A = o(function (e) {\n        if (q && W) {\n          var r = le(e, w.current, d, G);\n          r ? K(H(W, {\n            feature: r\n          }), e) : V(), M && M(r || null, e);\n        }\n      }, [K, V, q, W, w, d, G]),\n      J = o(function () {\n        return q && V();\n      }, [q, V]),\n      Q = o(function (e) {\n        if (q && T) {\n          var r = le(e, w.current, d, G);\n          r && T(r, e);\n        }\n      }, [q, w, d, G, T]);\n    return H(\"canvas\", {\n      ref: w,\n      width: L * l,\n      height: E * l,\n      style: {\n        width: L,\n        height: E,\n        cursor: q ? \"auto\" : \"normal\"\n      },\n      onMouseMove: A,\n      onMouseLeave: J,\n      onClick: Q\n    });\n  });\nce.displatName = \"GeoMapCanvas\", ce.propTypes = Q, ce.defaultProps = _;\nvar de = s(ce),\n  se = function (e) {\n    return H(f, {\n      children: function (r) {\n        var o = r.width,\n          t = r.height;\n        return H(de, I({\n          width: o,\n          height: t\n        }, e));\n      }\n    });\n  },\n  fe = r(function (e) {\n    var r = e.width,\n      i = e.height,\n      n = e.margin,\n      u = e.features,\n      l = e.data,\n      s = e.match,\n      f = e.label,\n      h = e.value,\n      g = e.valueFormat,\n      m = e.projectionType,\n      C = e.projectionScale,\n      b = e.projectionTranslation,\n      y = e.projectionRotation,\n      R = e.colors,\n      j = e.domain,\n      q = e.unknownColor,\n      T = e.borderWidth,\n      M = e.borderColor,\n      W = e.enableGraticule,\n      w = e.graticuleLineWidth,\n      k = e.graticuleLineColor,\n      F = e.layers,\n      O = e.legends,\n      L = e.isInteractive,\n      E = e.onClick,\n      S = e.tooltip,\n      G = e.role,\n      x = e.defs,\n      B = void 0 === x ? re.defs : x,\n      N = e.fill,\n      D = void 0 === N ? re.fill : N,\n      V = c(r, i, n),\n      A = V.margin,\n      J = V.outerWidth,\n      Q = V.outerHeight,\n      U = z({\n        width: r,\n        height: i,\n        projectionType: m,\n        projectionScale: C,\n        projectionTranslation: b,\n        projectionRotation: y,\n        fillColor: function () {},\n        borderWidth: T,\n        borderColor: M\n      }),\n      X = U.graticule,\n      Y = U.path,\n      Z = U.getBorderWidth,\n      $ = U.getBorderColor,\n      _ = K({\n        features: u,\n        data: l,\n        match: s,\n        label: f,\n        value: h,\n        valueFormat: g,\n        colors: R,\n        unknownColor: q,\n        domain: j\n      }),\n      ee = _.getFillColor,\n      oe = _.boundFeatures,\n      ne = _.legendData,\n      ae = a(),\n      ue = p(B, oe, D, {\n        dataKey: \"data\",\n        targetKey: \"fill\"\n      }),\n      le = v(),\n      ce = le.showTooltipFromEvent,\n      de = le.hideTooltip,\n      se = o(function (e, r) {\n        return L && E && E(e, r);\n      }, [L, E]),\n      fe = o(function (e, r) {\n        return L && S && ce(H(S, {\n          feature: e\n        }), r);\n      }, [L, ce, S]),\n      he = o(function (e, r) {\n        return L && S && ce(H(S, {\n          feature: e\n        }), r);\n      }, [L, ce, S]),\n      pe = o(function () {\n        return L && de();\n      }, [L, de]);\n    return H(d, {\n      width: J,\n      height: Q,\n      margin: A,\n      theme: ae,\n      defs: ue,\n      role: G,\n      children: F.map(function (e, o) {\n        return \"graticule\" === e ? !0 !== W ? null : H(te, {\n          path: Y,\n          graticule: X,\n          lineWidth: w,\n          lineColor: k\n        }, \"graticule\") : \"features\" === e ? H(t, {\n          children: oe.map(function (e) {\n            return H(ie, {\n              feature: e,\n              path: Y,\n              fillColor: ee(e),\n              borderWidth: Z(e),\n              borderColor: $(e),\n              onMouseEnter: fe,\n              onMouseMove: he,\n              onMouseLeave: pe,\n              onClick: se\n            }, e.id);\n          })\n        }, \"features\") : \"legends\" === e ? O.map(function (e, o) {\n          return H(P, I({\n            containerWidth: r,\n            containerHeight: i,\n            data: ne\n          }, e), o);\n        }) : H(t, {\n          children: e({})\n        }, o);\n      })\n    });\n  });\nfe.displayName = \"Choropleth\", fe.propTypes = X, fe.defaultProps = re;\nvar he = s(fe),\n  pe = function (e) {\n    return H(f, {\n      children: function (r) {\n        var o = r.width,\n          t = r.height;\n        return H(he, I({\n          width: o,\n          height: t\n        }, e));\n      }\n    });\n  },\n  ge = function (e, r, o, t) {\n    var i = h(r, e),\n      n = i[0],\n      a = i[1];\n    return o.find(function (e) {\n      return x(e, t.invert([n, a]));\n    });\n  },\n  ve = r(function (e) {\n    var r = e.width,\n      t = e.height,\n      u = e.margin,\n      l = e.pixelRatio,\n      d = e.features,\n      s = e.data,\n      f = e.match,\n      h = e.label,\n      p = e.value,\n      g = e.valueFormat,\n      m = e.projectionType,\n      C = e.projectionScale,\n      b = e.projectionTranslation,\n      y = e.projectionRotation,\n      R = e.colors,\n      j = e.domain,\n      q = e.unknownColor,\n      T = e.borderWidth,\n      M = e.borderColor,\n      W = e.enableGraticule,\n      w = e.graticuleLineWidth,\n      k = e.graticuleLineColor,\n      F = e.layers,\n      O = e.legends,\n      L = e.isInteractive,\n      E = e.onClick,\n      S = e.onMouseMove,\n      G = e.tooltip,\n      x = i(null),\n      B = a(),\n      P = c(r, t, u),\n      D = P.margin,\n      V = P.outerWidth,\n      A = P.outerHeight,\n      J = z({\n        width: r,\n        height: t,\n        projectionType: m,\n        projectionScale: C,\n        projectionTranslation: b,\n        projectionRotation: y,\n        fillColor: function () {},\n        borderWidth: T,\n        borderColor: M\n      }),\n      Q = J.projection,\n      U = J.graticule,\n      X = J.path,\n      Y = J.getBorderWidth,\n      Z = J.getBorderColor,\n      $ = K({\n        features: d,\n        data: s,\n        match: f,\n        label: h,\n        value: p,\n        valueFormat: g,\n        colors: R,\n        unknownColor: q,\n        domain: j\n      }),\n      _ = $.getFillColor,\n      ee = $.boundFeatures,\n      re = $.legendData;\n    n(function () {\n      if (x) {\n        x.current.width = V * l, x.current.height = A * l;\n        var e = x.current.getContext(\"2d\");\n        e.scale(l, l), e.fillStyle = B.background, e.fillRect(0, 0, V, A), e.translate(D.left, D.top), X.context(e), F.forEach(function (o) {\n          \"graticule\" === o ? !0 === W && (e.lineWidth = w, e.strokeStyle = k, e.beginPath(), X(U()), e.stroke()) : \"features\" === o ? ee.forEach(function (r) {\n            e.beginPath(), X(r), e.fillStyle = _(r), e.fill();\n            var o = Y(r);\n            o > 0 && (e.strokeStyle = Z(r), e.lineWidth = o, e.stroke());\n          }) : \"legends\" === o && O.forEach(function (o) {\n            N(e, I({}, o, {\n              data: re,\n              containerWidth: r,\n              containerHeight: t,\n              theme: B\n            }));\n          });\n        });\n      }\n    }, [x, V, A, D, l, B, X, U, _, Y, Z, ee, O, F]);\n    var oe = v(),\n      te = oe.showTooltipFromEvent,\n      ie = oe.hideTooltip,\n      ne = o(function (e) {\n        if (L && G) {\n          var r = ge(e, x.current, ee, Q);\n          r ? te(H(G, {\n            feature: r\n          }), e) : ie(), S && S(r || null, e);\n        }\n      }, [te, ie, L, G, x, ee, Q]),\n      ae = o(function () {\n        return L && ie();\n      }, [L, ie]),\n      ue = o(function (e) {\n        if (L && E) {\n          var r = ge(e, x.current, ee, Q);\n          r && E(r, e);\n        }\n      }, [L, x, ee, Q, E]);\n    return H(\"canvas\", {\n      ref: x,\n      width: V * l,\n      height: A * l,\n      style: {\n        width: V,\n        height: A,\n        cursor: L ? \"auto\" : \"normal\"\n      },\n      onMouseMove: ne,\n      onMouseLeave: ae,\n      onClick: ue\n    });\n  });\nve.displayName = \"ChoroplethCanvas\", ve.propTypes = Y, ve.defaultProps = oe;\nvar me = s(ve),\n  Ce = function (e) {\n    return H(f, {\n      children: function (r) {\n        var o = r.width,\n          t = r.height;\n        return H(me, I({\n          width: o,\n          height: t\n        }, e));\n      }\n    });\n  };\nexport { he as Choropleth, me as ChoroplethCanvas, oe as ChoroplethCanvasDefaultProps, Y as ChoroplethCanvasPropTypes, re as ChoroplethDefaultProps, X as ChoroplethPropTypes, ae as GeoMap, de as GeoMapCanvas, _ as GeoMapCanvasDefaultProps, Q as GeoMapCanvasPropTypes, $ as GeoMapDefaultProps, J as GeoMapPropTypes, pe as ResponsiveChoropleth, Ce as ResponsiveChoroplethCanvas, ue as ResponsiveGeoMap, se as ResponsiveGeoMapCanvas, D as projectionById, K as useChoropleth, z as useGeoMap };","map":{"version":3,"names":["D","azimuthalEqualArea","q","azimuthalEquidistant","T","gnomonic","M","orthographic","W","stereographic","w","equalEarth","k","equirectangular","F","mercator","O","transverseMercator","L","naturalEarth1","E","z","useGeoMap","r","o","width","t","height","i","projectionType","n","projectionScale","u","projectionTranslation","l","projectionRotation","c","fillColor","d","borderWidth","s","borderColor","f","e","scale","translate","rotate","h","S","p","G","g","a","v","m","C","b","projection","path","graticule","getBorderWidth","getBorderColor","getFillColor","K","useChoropleth","features","data","match","label","value","valueFormat","colors","unknownColor","domain","y","R","j","map","find","I","formattedValue","color","B","colorScale","boundFeatures","valueFormatter","legendData","V","feature","H","id","enableChip","propTypes","object","isRequired","displayName","A","arrayOf","shape","string","type","oneOf","properties","geometry","Object","keys","number","oneOfType","func","enableGraticule","bool","graticuleLineWidth","graticuleLineColor","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","any","layers","J","role","Q","pixelRatio","U","X","Y","Z","legends","fill","defs","$","_","window","devicePixelRatio","ee","re","oe","te","lineWidth","lineColor","strokeWidth","stroke","ie","strokeLinejoin","ne","margin","outerWidth","outerHeight","x","P","N","showTooltipFromEvent","hideTooltip","theme","children","defaultProps","ae","ue","ResponsiveGeoMap","le","getFeatureFromMouseEvent","invert","ce","current","getContext","fillStyle","background","fillRect","left","top","context","forEach","strokeStyle","beginPath","ref","style","cursor","displatName","de","se","ResponsiveGeoMapCanvas","fe","dataKey","targetKey","he","pe","containerWidth","containerHeight","ResponsiveChoropleth","ge","ve","me","Ce","ResponsiveChoroplethCanvas","Choropleth","ChoroplethCanvas","ChoroplethCanvasDefaultProps","ChoroplethCanvasPropTypes","ChoroplethDefaultProps","ChoroplethPropTypes","GeoMap","GeoMapCanvas","GeoMapCanvasDefaultProps","GeoMapCanvasPropTypes","GeoMapDefaultProps","GeoMapPropTypes","projectionById"],"sources":["/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/hooks.js","/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/ChoroplethTooltip.js","/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/props.js","/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/GeoGraticule.js","/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/GeoMapFeature.js","/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/GeoMap.js","/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/ResponsiveGeoMap.js","/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/GeoMapCanvas.js","/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/ResponsiveGeoMapCanvas.js","/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/Choropleth.js","/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/ResponsiveChoropleth.js","/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/ChoroplethCanvas.js","/home/somya/Desktop/Teleconsulting/Frontend/node_modules/@nivo/geo/src/ResponsiveChoroplethCanvas.js"],"sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport isFunction from 'lodash/isFunction'\nimport get from 'lodash/get'\nimport { format } from 'd3-format'\nimport {\n    geoPath,\n    geoAzimuthalEqualArea,\n    geoAzimuthalEquidistant,\n    geoGnomonic,\n    geoOrthographic,\n    geoStereographic,\n    geoEqualEarth,\n    geoEquirectangular,\n    geoMercator,\n    geoTransverseMercator,\n    geoNaturalEarth1,\n    geoGraticule,\n} from 'd3-geo'\nimport { guessQuantizeColorScale, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useQuantizeColorScaleLegendData } from '@nivo/legends'\n\nexport const projectionById = {\n    azimuthalEqualArea: geoAzimuthalEqualArea,\n    azimuthalEquidistant: geoAzimuthalEquidistant,\n    gnomonic: geoGnomonic,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    mercator: geoMercator,\n    transverseMercator: geoTransverseMercator,\n    naturalEarth1: geoNaturalEarth1,\n}\n\nexport const useGeoMap = ({\n    width,\n    height,\n    projectionType,\n    projectionScale,\n    projectionTranslation,\n    projectionRotation,\n    fillColor,\n    borderWidth,\n    borderColor,\n}) => {\n    const projection = useMemo(() => {\n        return projectionById[projectionType]()\n            .scale(projectionScale)\n            .translate([width * projectionTranslation[0], height * projectionTranslation[1]])\n            .rotate(projectionRotation)\n    }, [\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation[0],\n        projectionTranslation[1],\n        projectionRotation[0],\n        projectionRotation[1],\n        projectionRotation[2],\n    ])\n    const path = useMemo(() => geoPath(projection), [projection])\n    const graticule = useMemo(() => geoGraticule())\n\n    const theme = useTheme()\n    const getBorderWidth = useMemo(\n        () => (typeof borderWidth === 'function' ? borderWidth : () => borderWidth),\n        [borderWidth]\n    )\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getFillColor = useMemo(\n        () => (typeof fillColor === 'function' ? fillColor : () => fillColor),\n        [fillColor]\n    )\n\n    return {\n        projection,\n        path,\n        graticule,\n        getBorderWidth,\n        getBorderColor,\n        getFillColor,\n    }\n}\n\nexport const useChoropleth = ({\n    features,\n    data,\n    match,\n    label,\n    value,\n    valueFormat,\n    colors,\n    unknownColor,\n    domain,\n}) => {\n    const findMatchingDatum = useMemo(() => {\n        if (isFunction(match)) return match\n        return (feature, datum) => {\n            const featureKey = get(feature, match)\n            const datumKey = get(datum, match)\n\n            return featureKey && featureKey === datumKey\n        }\n    }, [match])\n    const getLabel = useMemo(\n        () => (isFunction(label) ? label : datum => get(datum, label)),\n        [label]\n    )\n    const getValue = useMemo(\n        () => (isFunction(value) ? value : datum => get(datum, value)),\n        [value]\n    )\n    const valueFormatter = useMemo(() => {\n        if (valueFormat === undefined) return d => d\n        if (isFunction(valueFormat)) return valueFormat\n        return format(valueFormat)\n    }, [valueFormat])\n\n    const colorScale = useMemo(\n        () => guessQuantizeColorScale(colors).domain(domain),\n        [colors, domain]\n    )\n    const getFillColor = useMemo(() => {\n        return feature => {\n            if (feature.value === undefined) return unknownColor\n            return colorScale(feature.value)\n        }\n    }, [colorScale, unknownColor])\n\n    const boundFeatures = useMemo(\n        () =>\n            features.map(feature => {\n                const datum = data.find(datum => findMatchingDatum(feature, datum))\n                const datumValue = getValue(datum)\n\n                if (datum) {\n                    const featureWithData = {\n                        ...feature,\n                        data: datum,\n                        value: datumValue,\n                        formattedValue: valueFormatter(datumValue),\n                    }\n                    featureWithData.color = getFillColor(featureWithData)\n                    featureWithData.label = getLabel(featureWithData)\n\n                    return featureWithData\n                }\n\n                return feature\n            }),\n        [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]\n    )\n\n    const legendData = useQuantizeColorScaleLegendData({\n        scale: colorScale,\n        valueFormat: valueFormatter,\n    })\n\n    return {\n        colorScale,\n        getFillColor,\n        boundFeatures,\n        valueFormatter,\n        legendData,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChoroplethTooltip = memo(({ feature }) => {\n    if (feature.data === undefined) return null\n\n    return (\n        <BasicTooltip\n            id={feature.label}\n            color={feature.color}\n            enableChip={true}\n            value={feature.formattedValue}\n        />\n    )\n})\n\nChoroplethTooltip.propTypes = {\n    feature: PropTypes.object.isRequired,\n}\n\nChoroplethTooltip.displayName = 'ChoroplethTooltip'\n\nexport default ChoroplethTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { quantizeColorScalePropType } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { projectionById } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst commonPropTypes = {\n    features: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.oneOf(['Feature']).isRequired,\n            properties: PropTypes.object,\n            geometry: PropTypes.object.isRequired,\n        })\n    ).isRequired,\n\n    projectionType: PropTypes.oneOf(Object.keys(projectionById)).isRequired,\n    projectionScale: PropTypes.number.isRequired,\n    projectionTranslation: PropTypes.arrayOf(PropTypes.number).isRequired,\n    projectionRotation: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGraticule: PropTypes.bool.isRequired,\n    graticuleLineWidth: PropTypes.number.isRequired,\n    graticuleLineColor: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.any,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const GeoMapPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const GeoMapCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonChoroplethPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    colors: quantizeColorScalePropType.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    unknownColor: PropTypes.string.isRequired,\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features', 'legends']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const ChoroplethPropTypes = {\n    ...GeoMapPropTypes,\n    ...commonChoroplethPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChoroplethCanvasPropTypes = {\n    ...GeoMapCanvasPropTypes,\n    ...commonChoroplethPropTypes,\n}\n\nconst commonDefaultProps = {\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    enableGraticule: false,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#999999',\n\n    fillColor: '#dddddd',\n    borderWidth: 0,\n    borderColor: '#000000',\n\n    isInteractive: true,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onMouseMove: () => {},\n    onClick: () => {},\n\n    layers: ['graticule', 'features'],\n    legends: [],\n\n    fill: [],\n    defs: [],\n}\n\nexport const GeoMapDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n\nexport const GeoMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nconst commonChoroplethDefaultProps = {\n    match: 'id',\n    label: 'id',\n    value: 'value',\n    colors: 'PuBuGn',\n    unknownColor: '#999',\n    tooltip: ChoroplethTooltip,\n    layers: ['graticule', 'features', 'legends'],\n}\n\nexport const ChoroplethDefaultProps = {\n    ...GeoMapDefaultProps,\n    ...commonChoroplethDefaultProps,\n    role: 'img',\n}\n\nexport const ChoroplethCanvasDefaultProps = {\n    ...GeoMapCanvasDefaultProps,\n    ...commonChoroplethDefaultProps,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoGraticule = memo(({ path, graticule, lineWidth, lineColor }) => {\n    return <path fill=\"none\" strokeWidth={lineWidth} stroke={lineColor} d={path(graticule())} />\n})\n\nGeoGraticule.propTypes = {\n    path: PropTypes.func.isRequired,\n    graticule: PropTypes.func.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineColor: PropTypes.string.isRequired,\n}\n\nGeoGraticule.displayName = 'GeoGraticule'\n\nexport default GeoGraticule\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoMapFeature = memo(\n    ({\n        feature,\n        path,\n        fillColor,\n        borderWidth,\n        borderColor,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }) => {\n        return (\n            <path\n                key={feature.id}\n                fill={feature?.fill ?? fillColor}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                strokeLinejoin=\"bevel\"\n                d={path(feature)}\n                onMouseEnter={event => onMouseEnter(feature, event)}\n                onMouseMove={event => onMouseMove(feature, event)}\n                onMouseLeave={event => onMouseLeave(feature, event)}\n                onClick={event => onClick(feature, event)}\n            />\n        )\n    }\n)\n\nGeoMapFeature.propTypes = {\n    feature: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['Feature']).isRequired,\n        properties: PropTypes.object,\n        geometry: PropTypes.object.isRequired,\n    }).isRequired,\n    path: PropTypes.func.isRequired,\n\n    fillColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nGeoMapFeature.displayName = 'GeoMapFeature'\n\nexport default GeoMapFeature\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useCallback, memo } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapPropTypes, GeoMapDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap } from './hooks'\n\nconst GeoMap = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        layers,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    } = props\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n    })\n\n    const theme = useTheme()\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleClick = useCallback(\n        (feature, event) => isInteractive && onClick && onClick(feature, event),\n        [isInteractive, onClick]\n    )\n    const handleMouseEnter = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseMove = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseLeave = useCallback(\n        () => isInteractive && hideTooltip(),\n        [isInteractive, hideTooltip]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layer === 'graticule') {\n                    if (enableGraticule !== true) return null\n\n                    return (\n                        <GeoGraticule\n                            key=\"graticule\"\n                            path={path}\n                            graticule={graticule}\n                            lineWidth={graticuleLineWidth}\n                            lineColor={graticuleLineColor}\n                        />\n                    )\n                }\n                if (layer === 'features') {\n                    return (\n                        <Fragment key=\"features\">\n                            {features.map(feature => (\n                                <GeoMapFeature\n                                    key={feature.id}\n                                    feature={feature}\n                                    path={path}\n                                    fillColor={getFillColor(feature)}\n                                    borderWidth={getBorderWidth(feature)}\n                                    borderColor={getBorderColor(feature)}\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseMove={handleMouseMove}\n                                    onMouseLeave={handleMouseLeave}\n                                    onClick={handleClick}\n                                />\n                            ))}\n                        </Fragment>\n                    )\n                }\n\n                return <Fragment key={i}>{layer(props)}</Fragment>\n            })}\n        </SvgWrapper>\n    )\n})\n\nGeoMap.displayName = 'GeoMap'\nGeoMap.propTypes = GeoMapPropTypes\nGeoMap.defaultProps = GeoMapDefaultProps\n\nexport default withContainer(GeoMap)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMap from './GeoMap'\n\nconst ResponsiveGeoMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapCanvasDefaultProps, GeoMapCanvasPropTypes } from './props'\nimport { useGeoMap } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst GeoMapCanvas = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        layers,\n\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n\n        fillColor,\n        borderWidth,\n        borderColor,\n\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    } = props\n\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { projection, graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap(\n        {\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor,\n            borderWidth,\n            borderColor,\n        }\n    )\n\n    useEffect(() => {\n        if (!canvasEl) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        path.context(ctx)\n\n        layers.forEach(layer => {\n            if (layer === 'graticule') {\n                if (enableGraticule === true) {\n                    ctx.lineWidth = graticuleLineWidth\n                    ctx.strokeStyle = graticuleLineColor\n                    ctx.beginPath()\n                    path(graticule())\n                    ctx.stroke()\n                }\n            } else if (layer === 'features') {\n                features.forEach(feature => {\n                    ctx.beginPath()\n                    path(feature)\n                    ctx.fillStyle = getFillColor(feature)\n                    ctx.fill()\n\n                    const borderWidth = getBorderWidth(feature)\n                    if (borderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(feature)\n                        ctx.lineWidth = borderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else {\n                layer(ctx, props)\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        theme,\n        path,\n        graticule,\n        getFillColor,\n        getBorderWidth,\n        getBorderColor,\n        features,\n        layers,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseMove = useCallback(\n        event => {\n            if (!isInteractive || !Tooltip) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                showTooltipFromEvent(<Tooltip feature={feature} />, event)\n            } else {\n                hideTooltip()\n            }\n            onMouseMove && onMouseMove(feature || null, event)\n        },\n        [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection]\n    )\n    const handleMouseLeave = useCallback(\n        () => isInteractive && hideTooltip(),\n        [isInteractive, hideTooltip]\n    )\n    const handleClick = useCallback(\n        event => {\n            if (!isInteractive || !onClick) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                onClick(feature, event)\n            }\n        },\n        [isInteractive, canvasEl, features, projection, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n})\n\nGeoMapCanvas.displatName = 'GeoMapCanvas'\nGeoMapCanvas.propTypes = GeoMapCanvasPropTypes\nGeoMapCanvas.defaultProps = GeoMapCanvasDefaultProps\n\nexport default withContainer(GeoMapCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMapCanvas from './GeoMapCanvas'\n\nconst ResponsiveGeoMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, Fragment, useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme, bindDefs } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethPropTypes, ChoroplethDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst Choropleth = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n        defs = ChoroplethDefaultProps.defs,\n        fill = ChoroplethDefaultProps.fill,\n    }) => {\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        const theme = useTheme()\n\n        const boundDefs = bindDefs(defs, boundFeatures, fill, {\n            dataKey: 'data',\n            targetKey: 'fill',\n        })\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleClick = useCallback(\n            (feature, event) => isInteractive && onClick && onClick(feature, event),\n            [isInteractive, onClick]\n        )\n        const handleMouseEnter = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseMove = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseLeave = useCallback(\n            () => isInteractive && hideTooltip(),\n            [isInteractive, hideTooltip]\n        )\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                defs={boundDefs}\n                role={role}\n            >\n                {layers.map((layer, i) => {\n                    if (layer === 'graticule') {\n                        if (enableGraticule !== true) return null\n\n                        return (\n                            <GeoGraticule\n                                key=\"graticule\"\n                                path={path}\n                                graticule={graticule}\n                                lineWidth={graticuleLineWidth}\n                                lineColor={graticuleLineColor}\n                            />\n                        )\n                    }\n                    if (layer === 'features') {\n                        return (\n                            <Fragment key=\"features\">\n                                {boundFeatures.map(feature => (\n                                    <GeoMapFeature\n                                        key={feature.id}\n                                        feature={feature}\n                                        path={path}\n                                        fillColor={getFillColor(feature)}\n                                        borderWidth={getBorderWidth(feature)}\n                                        borderColor={getBorderColor(feature)}\n                                        onMouseEnter={handleMouseEnter}\n                                        onMouseMove={handleMouseMove}\n                                        onMouseLeave={handleMouseLeave}\n                                        onClick={handleClick}\n                                    />\n                                ))}\n                            </Fragment>\n                        )\n                    }\n                    if (layer === 'legends') {\n                        return legends.map((legend, i) => {\n                            return (\n                                <BoxLegendSvg\n                                    key={i}\n                                    containerWidth={width}\n                                    containerHeight={height}\n                                    data={legendData}\n                                    {...legend}\n                                />\n                            )\n                        })\n                    }\n\n                    return <Fragment key={i}>{layer({})}</Fragment>\n                })}\n            </SvgWrapper>\n        )\n    }\n)\n\nChoropleth.displayName = 'Choropleth'\nChoropleth.propTypes = ChoroplethPropTypes\nChoropleth.defaultProps = ChoroplethDefaultProps\n\nexport default withContainer(Choropleth)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Choropleth from './Choropleth'\n\nconst ResponsiveChoropleth = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Choropleth width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoropleth\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethCanvasDefaultProps, ChoroplethCanvasPropTypes } from './props'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst ChoroplethCanvas = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    }) => {\n        const canvasEl = useRef(null)\n        const theme = useTheme()\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { projection, graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        useEffect(() => {\n            if (!canvasEl) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            path.context(ctx)\n\n            layers.forEach(layer => {\n                if (layer === 'graticule') {\n                    if (enableGraticule === true) {\n                        ctx.lineWidth = graticuleLineWidth\n                        ctx.strokeStyle = graticuleLineColor\n                        ctx.beginPath()\n                        path(graticule())\n                        ctx.stroke()\n                    }\n                } else if (layer === 'features') {\n                    boundFeatures.forEach(feature => {\n                        ctx.beginPath()\n                        path(feature)\n                        ctx.fillStyle = getFillColor(feature)\n                        ctx.fill()\n\n                        const borderWidth = getBorderWidth(feature)\n                        if (borderWidth > 0) {\n                            ctx.strokeStyle = getBorderColor(feature)\n                            ctx.lineWidth = borderWidth\n                            ctx.stroke()\n                        }\n                    })\n                } else if (layer === 'legends') {\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: width,\n                            containerHeight: height,\n                            theme,\n                        })\n                    })\n                } else {\n                    // layer(ctx, {})\n                }\n            })\n        }, [\n            canvasEl,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            path,\n            graticule,\n            getFillColor,\n            getBorderWidth,\n            getBorderColor,\n            boundFeatures,\n            legends,\n            layers,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleMouseMove = useCallback(\n            event => {\n                if (!isInteractive || !Tooltip) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    showTooltipFromEvent(<Tooltip feature={feature} />, event)\n                } else {\n                    hideTooltip()\n                }\n                onMouseMove && onMouseMove(feature || null, event)\n            },\n            [\n                showTooltipFromEvent,\n                hideTooltip,\n                isInteractive,\n                Tooltip,\n                canvasEl,\n                boundFeatures,\n                projection,\n            ]\n        )\n        const handleMouseLeave = useCallback(\n            () => isInteractive && hideTooltip(),\n            [isInteractive, hideTooltip]\n        )\n        const handleClick = useCallback(\n            event => {\n                if (!isInteractive || !onClick) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    onClick(feature, event)\n                }\n            },\n            [isInteractive, canvasEl, boundFeatures, projection, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChoroplethCanvas.displayName = 'ChoroplethCanvas'\nChoroplethCanvas.propTypes = ChoroplethCanvasPropTypes\nChoroplethCanvas.defaultProps = ChoroplethCanvasDefaultProps\n\nexport default withContainer(ChoroplethCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ChoroplethCanvas from './ChoroplethCanvas'\n\nconst ResponsiveChoroplethCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChoroplethCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoroplethCanvas\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}