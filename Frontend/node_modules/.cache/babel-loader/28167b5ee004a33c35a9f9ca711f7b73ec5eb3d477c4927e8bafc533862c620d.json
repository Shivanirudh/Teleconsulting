{"ast":null,"code":"import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nconst diffFactor = 2,\n  defaultSizeFactor = 1,\n  defaultDeltaFactor = 1;\nexport class BaseMover {\n  async init(particle) {\n    const options = particle.options,\n      gravityOptions = options.move.gravity;\n    particle.gravity = {\n      enable: gravityOptions.enable,\n      acceleration: getRangeValue(gravityOptions.acceleration),\n      inverse: gravityOptions.inverse\n    };\n    const {\n      initSpin\n    } = await import(\"./Utils.js\");\n    initSpin(particle);\n    await Promise.resolve();\n  }\n  isEnabled(particle) {\n    return !particle.destroyed && particle.options.move.enable;\n  }\n  async move(particle, delta) {\n    const particleOptions = particle.options,\n      moveOptions = particleOptions.move;\n    if (!moveOptions.enable) {\n      return;\n    }\n    const container = particle.container,\n      pxRatio = container.retina.pixelRatio;\n    particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n    particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n    const {\n        getProximitySpeedFactor\n      } = await import(\"./Utils.js\"),\n      slowFactor = getProximitySpeedFactor(particle),\n      baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor,\n      moveDrift = particle.retina.moveDrift,\n      maxSize = getRangeMax(particleOptions.size.value) * pxRatio,\n      sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor,\n      deltaFactor = delta.factor || defaultDeltaFactor,\n      moveSpeed = baseSpeed * sizeFactor * slowFactor * deltaFactor / diffFactor,\n      maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n    if (moveOptions.spin.enable) {\n      const {\n        spin\n      } = await import(\"./Utils.js\");\n      spin(particle, moveSpeed);\n    } else {\n      const {\n        move\n      } = await import(\"./Utils.js\");\n      await move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n    }\n    const {\n      applyDistance\n    } = await import(\"./Utils.js\");\n    applyDistance(particle);\n  }\n}","map":{"version":3,"names":["getRangeMax","getRangeValue","diffFactor","defaultSizeFactor","defaultDeltaFactor","BaseMover","init","particle","options","gravityOptions","move","gravity","enable","acceleration","inverse","initSpin","Promise","resolve","isEnabled","destroyed","delta","particleOptions","moveOptions","container","pxRatio","retina","pixelRatio","moveSpeed","speed","moveDrift","drift","getProximitySpeedFactor","slowFactor","baseSpeed","reduceFactor","maxSize","size","value","sizeFactor","getRadius","deltaFactor","factor","maxSpeed","spin","applyDistance"],"sources":["/home/aksh2002/Desktop/Teleconsulting/node_modules/@tsparticles/move-base/browser/BaseMover.js"],"sourcesContent":["import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    async init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        const { initSpin } = await import(\"./Utils.js\");\n        initSpin(particle);\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    async move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const { getProximitySpeedFactor } = await import(\"./Utils.js\"), slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            const { spin } = await import(\"./Utils.js\");\n            spin(particle, moveSpeed);\n        }\n        else {\n            const { move } = await import(\"./Utils.js\");\n            await move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        const { applyDistance } = await import(\"./Utils.js\");\n        applyDistance(particle);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}