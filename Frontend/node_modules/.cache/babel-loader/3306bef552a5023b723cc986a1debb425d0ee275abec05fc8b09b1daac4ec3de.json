{"ast":null,"code":"var _jsxFileName = \"/home/somya/Desktop/Teleconsulting/Frontend/src/pages/PatientLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './../css/PatientLogin.css';\nimport logo from './../images/patient-login.png';\nimport { useNavigate } from 'react-router-dom';\nimport videobg from './../Animation/bg.mp4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientLogin = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n  const navigate = useNavigate();\n  const handleGetOTP = () => {\n    // Assume OTP generation and sending logic here\n    // For demonstration, let's set a hardcoded OTP\n    const hardcodedOtp = '0000';\n    setOtp(hardcodedOtp);\n    setIsOtpSent(true);\n  };\n  const handleLogin = () => {\n    // Perform login logic here\n    if (otp === '' || password === '') {\n      alert('Please enter OTP and password');\n      return;\n    }\n\n    // Hardcoded username and password for testing\n    if (username === 'patient@example.com' && password === 'password' && otp === '0000') {\n      alert('Login successful!');\n      navigate('/patientdashboard');\n    } else {\n      alert('Invalid username, password, or OTP');\n    }\n  };\n  const handleSignUp = () => {\n    // Redirect to SignUp page\n    window.location.href = '/signup';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      muted: true,\n      loop: true,\n      className: \"video-bg\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: videobg,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Patient Logo\",\n        className: \"patient-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        disabled: !isOtpSent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGetOTP,\n        disabled: isOtpSent,\n        children: \"Get OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signup-btn\",\n        onClick: handleSignUp,\n        children: \"Don't have an account? Register.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientLogin, \"VsPaimJHinlw3/MhWk5FID6mKe4=\", false, function () {\n  return [useNavigate];\n});\n_c = PatientLogin;\nexport default PatientLogin;\nvar _c;\n$RefreshReg$(_c, \"PatientLogin\");","map":{"version":3,"names":["React","useState","logo","useNavigate","videobg","jsxDEV","_jsxDEV","PatientLogin","_s","username","setUsername","password","setPassword","isOtpSent","setIsOtpSent","otp","setOtp","navigate","handleGetOTP","hardcodedOtp","handleLogin","alert","handleSignUp","window","location","href","className","children","autoPlay","muted","loop","src","type","fileName","_jsxFileName","lineNumber","columnNumber","alt","placeholder","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/somya/Desktop/Teleconsulting/Frontend/src/pages/PatientLogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './../css/PatientLogin.css';\nimport logo from './../images/patient-login.png';\nimport { useNavigate } from 'react-router-dom';\nimport videobg from './../Animation/bg.mp4'\n\nconst PatientLogin = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n  const navigate = useNavigate();\n\n  const handleGetOTP = () => {\n    // Assume OTP generation and sending logic here\n    // For demonstration, let's set a hardcoded OTP\n    const hardcodedOtp = '0000';\n    setOtp(hardcodedOtp);\n    setIsOtpSent(true);\n  };\n\n  const handleLogin = () => {\n    // Perform login logic here\n    if (otp === '' || password === '') {\n      alert('Please enter OTP and password');\n      return;\n    }\n\n    // Hardcoded username and password for testing\n    if (username === 'patient@example.com' && password === 'password' && otp === '0000') {\n      alert('Login successful!');\n      navigate('/patientdashboard');\n    } else {\n      alert('Invalid username, password, or OTP');\n    }\n  };\n\n  const handleSignUp = () => {\n    // Redirect to SignUp page\n    window.location.href = '/signup';\n  };\n\n  return (\n    <div className=\"container\">\n      <video autoPlay muted loop className=\"video-bg\">\n        <source src={videobg} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n      <div className=\"login-container\">\n        <img src={logo} alt=\"Patient Logo\" className=\"patient-logo\" />\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        <input type=\"text\" placeholder=\"Enter OTP\" value={otp} onChange={(e) => setOtp(e.target.value)} disabled={!isOtpSent} />\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <button onClick={handleGetOTP} disabled={isOtpSent}>Get OTP</button>\n        <button onClick={handleLogin}>Login</button>\n        <button className=\"signup-btn\" onClick={handleSignUp}>Don't have an account? Register.</button>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientLogin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}