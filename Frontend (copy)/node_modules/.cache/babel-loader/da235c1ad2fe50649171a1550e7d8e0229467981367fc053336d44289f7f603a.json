{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Patient/DoctorList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './../../css/Patient/DoctorList.css';\nimport SearchBar from './../../components/Patient/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorList() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const doctors = [{\n    name: 'Dr. John Doe',\n    specialty: 'Cardiologist',\n    schedule: [{\n      date: '2024-04-01',\n      availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'available', 'booked', 'available', 'available']\n    }\n    // Add schedule for each day\n    ]\n  }, {\n    name: 'Dr. Jane Smith',\n    specialty: 'Dermatologist',\n    schedule: [{\n      date: '2024-04-01',\n      availability: ['available', 'available', 'booked', 'available', 'busy', 'busy', 'booked', 'available', 'available', 'available', 'booked', 'busy', 'available', 'available']\n    }\n    // Add schedule for each day\n    ]\n  }, {\n    name: 'Dr. Michael Brown',\n    specialty: 'Pediatrician',\n    schedule: [{\n      date: '2024-04-01',\n      availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available', 'available', 'available']\n    }\n    // Add schedule for each day\n    ]\n  }];\n  const handleViewSchedule = doctor => {\n    setSelectedDoctor(doctor === selectedDoctor ? null : doctor);\n  };\n  const renderAvailability = availability => {\n    return availability.map((slot, index) => {\n      let className = '';\n      switch (slot) {\n        case 'available':\n          className = 'available-new';\n          break;\n        case 'booked':\n          className = 'booked-new';\n          break;\n        case 'busy':\n          className = 'busy-new';\n          break;\n        default:\n          className = '';\n      }\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: className\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    });\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-list-container-new\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Available Doctors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredDoctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: doctor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: doctor.specialty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), selectedDoctor === doctor ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"availability-table-new\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"15\",\n                children: \"Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time Slots\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this), Array.from({\n                length: 14\n              }, (_, i) => i + 8).map(hour => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [hour, \":00 - \", hour + 1, \":00\"]\n              }, hour, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Availability\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), renderAvailability(doctor.schedule[0].availability)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-schedule-btn\",\n          onClick: () => handleViewSchedule(doctor),\n          children: \"View Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorList, \"TIarSQ/LR3HM9MBY9sB5a7IaXKU=\");\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useState","SearchBar","jsxDEV","_jsxDEV","DoctorList","_s","searchTerm","setSearchTerm","selectedDoctor","setSelectedDoctor","doctors","name","specialty","schedule","date","availability","handleViewSchedule","doctor","renderAvailability","map","slot","index","className","fileName","_jsxFileName","lineNumber","columnNumber","filteredDoctors","filter","toLowerCase","includes","children","onSearch","style","textAlign","colSpan","Array","from","length","_","i","hour","onClick","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Patient/DoctorList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './../../css/Patient/DoctorList.css';\r\nimport SearchBar from './../../components/Patient/SearchBar';\r\n\r\nfunction DoctorList() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n  const doctors = [\r\n    {\r\n      name: 'Dr. John Doe',\r\n      specialty: 'Cardiologist',\r\n      schedule: [\r\n        { date: '2024-04-01', availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'available', 'booked', 'available', 'available'] },\r\n        // Add schedule for each day\r\n      ]\r\n    },\r\n    {\r\n      name: 'Dr. Jane Smith',\r\n      specialty: 'Dermatologist',\r\n      schedule: [\r\n        { date: '2024-04-01', availability: ['available', 'available', 'booked', 'available', 'busy', 'busy', 'booked', 'available', 'available', 'available', 'booked', 'busy', 'available', 'available'] },\r\n        // Add schedule for each day\r\n      ]\r\n    },\r\n    {\r\n      name: 'Dr. Michael Brown',\r\n      specialty: 'Pediatrician',\r\n      schedule: [\r\n        { date: '2024-04-01', availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available', 'available', 'available'] },\r\n        // Add schedule for each day\r\n      ]\r\n    },\r\n  ];\r\n\r\n  const handleViewSchedule = (doctor) => {\r\n    setSelectedDoctor(doctor === selectedDoctor ? null : doctor);\r\n  };\r\n\r\n  const renderAvailability = (availability) => {\r\n    return availability.map((slot, index) => {\r\n      let className = '';\r\n      switch (slot) {\r\n        case 'available':\r\n          className = 'available-new';\r\n          break;\r\n        case 'booked':\r\n          className = 'booked-new';\r\n          break;\r\n        case 'busy':\r\n          className = 'busy-new';\r\n          break;\r\n        default:\r\n          className = '';\r\n      }\r\n      return <td key={index} className={className}></td>;\r\n    });\r\n  };\r\n\r\n  const filteredDoctors = doctors.filter((doctor) =>\r\n    doctor.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"doctor-list-container-new\">\r\n      <SearchBar onSearch={setSearchTerm} />\r\n      <h2 style={{ textAlign: 'center' }}>Available Doctors</h2>\r\n      <ul>\r\n        {filteredDoctors.map((doctor, index) => (\r\n          <li key={index}>\r\n            <h3>{doctor.name}</h3>\r\n            <p>{doctor.specialty}</p>\r\n            {selectedDoctor === doctor ? (\r\n              <table className=\"availability-table-new\">\r\n                <thead>\r\n                  <tr>\r\n                    <th colSpan=\"15\">Schedule</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>Time Slots</th>\r\n                    {Array.from({ length: 14 }, (_, i) => i + 8).map((hour) => (\r\n                      <th key={hour}>{hour}:00 - {hour + 1}:00</th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Availability</td>\r\n                    {renderAvailability(doctor.schedule[0].availability)}\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            ) : (\r\n              <button className=\"view-schedule-btn\" onClick={() => handleViewSchedule(doctor)}>\r\n                View Schedule\r\n              </button>\r\n            )}\r\n            <br></br>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}