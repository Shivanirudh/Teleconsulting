{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/uploadschedule.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadSchedule() {\n  _s();\n  // Define dummy schedule data\n  const dummySchedule = {\n    \"slots\": [[2024, 4, 5, 11, 15], [2024, 4, 6, 15, 45], [2024, 4, 7, 15, 0], [2024, 4, 6, 15, 45], [2024, 4, 5, 15, 0]],\n    \"appointments\": [{\n      id: 1,\n      date: '2024,4,5',\n      time: '09:00',\n      patientName: 'John Doe'\n    }, {\n      id: 2,\n      date: '2024,4,6',\n      time: '10:30',\n      patientName: 'somebody someone'\n    }, {\n      id: 3,\n      date: '2024,4,7',\n      time: '11:15',\n      patientName: 'Alice Smith'\n    }, {\n      id: 5,\n      date: '2024,4,6',\n      time: '09:00',\n      patientName: 'John Doe'\n    }]\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState([]);\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    // Initialize schedule with dummy data\n    generateSchedule();\n  }, []);\n\n  // Function to generate schedule table\n  const generateSchedule = () => {\n    const currentDate = new Date();\n    const next7Days = [];\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(currentDate);\n      date.setDate(date.getDate() + i);\n      next7Days.push(date);\n    }\n    const timeSlots = [];\n    for (let hour = 9; hour < 16; hour++) {\n      for (let minutes = 0; minutes < 60; minutes += 45) {\n        const time = `${hour}:${minutes === 0 ? '00' : minutes}`;\n        timeSlots.push(time);\n      }\n    }\n    const newSchedule = next7Days.map(date => {\n      const dateString = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n      const availability = timeSlots.map(time => {\n        const slot = dummySchedule.slots.find(slot => {\n          const slotDate = new Date(slot[0], slot[1] - 1, slot[2]);\n          const slotTime = `${slot[3]}:${slot[4]}`;\n          return slotDate.toDateString() === date.toDateString() && slotTime === time;\n        });\n        if (slot) {\n          return 'available';\n        }\n        const appointment = dummySchedule.appointments.find(appointment => {\n          const appointmentDate = new Date(appointment.date.replace(/,/g, '-'));\n          const appointmentTime = appointment.time.split(':');\n          return appointmentDate.toDateString() === date.toDateString() && appointmentTime[0] === time.split(':')[0] && appointmentTime[1] === time.split(':')[1];\n        });\n        return appointment ? 'booked' : 'busy';\n      });\n      return {\n        date: dateString,\n        availability\n      };\n    });\n    setSchedule(newSchedule);\n  };\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability)\n  const handleCellClick = (dateIndex, timeIndex) => {\n    const updatedSchedule = [...schedule];\n    const cellValue = updatedSchedule[dateIndex].availability[timeIndex];\n    if (isEditing && cellValue !== 'booked') {\n      updatedSchedule[dateIndex].availability[timeIndex] = cellValue === 'available' ? 'busy' : 'available';\n      setSchedule(updatedSchedule);\n    }\n  };\n\n  // Function to get CSS class for cell based on availability\n  const getClassForAvailability = availability => {\n    switch (availability) {\n      case 'available':\n        return 'table-success bg-success text-white';\n      case 'booked':\n        return 'table-danger bg-danger text-dark';\n      case 'busy':\n        return 'table-secondary bg-secondary text-white';\n      default:\n        return '';\n    }\n  };\n\n  // Function to simulate saving the schedule (replace with actual logic)\n  const handleSubmit = async () => {\n    alert('Saving schedule...');\n\n    // Replace with your actual saving logic (e.g., API call)\n    // This example simulates a successful save after 2 seconds\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    setIsEditing(false); // Reset edit mode after successful save\n  };\n  const generateScheduleRows = () => {\n    return schedule.map((item, dateIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"row\",\n        children: item.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), item.availability.map((availability, timeIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n        className: getClassForAvailability(availability),\n        onClick: () => handleCellClick(dateIndex, timeIndex)\n      }, `${item.date}-${timeIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this))]\n    }, item.date, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"This week's Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered custom-box khus\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"9:00 AM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"9:45 AM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"10:30 AM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"11:15 AM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"12:00 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"12:45 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"01:30 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"02:15 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"03:00 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"03:45 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"04:30 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"05:15 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: generateScheduleRows()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary custom-button\",\n          onClick: handleEdit,\n          children: isEditing ? 'Cancel Edit' : 'Edit Schedule'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary custom-button\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSchedule, \"++4b96eULKbdgzoKDSJcjB7i644=\");\n_c = UploadSchedule;\nvar _c;\n$RefreshReg$(_c, \"UploadSchedule\");","map":{"version":3,"names":["React","useState","useEffect","SideNavbar","Navbar","jsxDEV","_jsxDEV","UploadSchedule","_s","dummySchedule","id","date","time","patientName","schedule","setSchedule","isEditing","setIsEditing","generateSchedule","currentDate","Date","next7Days","i","setDate","getDate","push","timeSlots","hour","minutes","newSchedule","map","dateString","getFullYear","getMonth","toString","padStart","availability","slot","slots","find","slotDate","slotTime","toDateString","appointment","appointments","appointmentDate","replace","appointmentTime","split","handleEdit","handleCellClick","dateIndex","timeIndex","updatedSchedule","cellValue","getClassForAvailability","handleSubmit","alert","Promise","resolve","setTimeout","generateScheduleRows","item","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","type","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/uploadschedule.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\n\nexport default function UploadSchedule() {\n  // Define dummy schedule data\n  const dummySchedule = {\n    \"slots\": [\n      [2024, 4, 5, 11, 15],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 7, 15, 0],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 5, 15, 0]\n    ],\n    \"appointments\": [\n      { id: 1, date: '2024,4,5', time: '09:00', patientName: 'John Doe' },\n      { id: 2, date: '2024,4,6', time: '10:30', patientName: 'somebody someone' },\n      { id: 3, date: '2024,4,7', time: '11:15', patientName: 'Alice Smith' },\n      { id: 5, date: '2024,4,6', time: '09:00', patientName: 'John Doe' },\n    ]\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState([]);\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    // Initialize schedule with dummy data\n    generateSchedule();\n  }, []);\n  \n  // Function to generate schedule table\n  const generateSchedule = () => {\n    const currentDate = new Date();\n    const next7Days = [];\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(currentDate);\n      date.setDate(date.getDate() + i);\n      next7Days.push(date);\n    }\n  \n    const timeSlots = [];\n    for (let hour = 9; hour < 16; hour++) {\n      for (let minutes = 0; minutes < 60; minutes += 45) {\n        const time = `${hour}:${minutes === 0 ? '00' : minutes}`;\n        timeSlots.push(time);\n      }\n    }\n  \n    const newSchedule = next7Days.map(date => {\n      const dateString = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n      const availability = timeSlots.map(time => {\n        const slot = dummySchedule.slots.find(slot => {\n          const slotDate = new Date(slot[0], slot[1] - 1, slot[2]);\n          const slotTime = `${slot[3]}:${slot[4]}`;\n          return slotDate.toDateString() === date.toDateString() && slotTime === time;\n        });\n  \n        if (slot) {\n          return 'available';\n        }\n  \n        const appointment = dummySchedule.appointments.find(appointment => {\n          const appointmentDate = new Date(appointment.date.replace(/,/g, '-'));\n          const appointmentTime = appointment.time.split(':');\n          return appointmentDate.toDateString() === date.toDateString() && appointmentTime[0] === time.split(':')[0] && appointmentTime[1] === time.split(':')[1];\n        });\n  \n        return appointment ? 'booked' : 'busy';\n      });\n  \n      return { date: dateString, availability };\n    });\n  \n    setSchedule(newSchedule);\n  };\n\n    \n\n      \n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability)\n  const handleCellClick = (dateIndex, timeIndex) => {\n    const updatedSchedule = [...schedule];\n    const cellValue = updatedSchedule[dateIndex].availability[timeIndex];\n\n    if (isEditing && cellValue !== 'booked') {\n      updatedSchedule[dateIndex].availability[timeIndex] =\n        cellValue === 'available' ? 'busy' : 'available';\n      setSchedule(updatedSchedule);\n    }\n  };\n\n  // Function to get CSS class for cell based on availability\n  const getClassForAvailability = (availability) => {\n    switch (availability) {\n      case 'available':\n        return 'table-success bg-success text-white';\n      case 'booked':\n        return 'table-danger bg-danger text-dark';\n      case 'busy':\n        return 'table-secondary bg-secondary text-white';\n      default:\n        return '';\n    }\n  };\n\n  // Function to simulate saving the schedule (replace with actual logic)\n  const handleSubmit = async () => {\n    alert('Saving schedule...');\n\n    // Replace with your actual saving logic (e.g., API call)\n    // This example simulates a successful save after 2 seconds\n    await new Promise((resolve) => setTimeout(resolve, 2000));\n\n    setIsEditing(false); // Reset edit mode after successful save\n  };\n\n  const generateScheduleRows = () => {\n    return schedule.map((item, dateIndex) => (\n      <tr key={item.date}>\n        <th scope=\"row\">{item.date}</th>\n        {item.availability.map((availability, timeIndex) => (\n          <td\n            key={`${item.date}-${timeIndex}`}\n            className={getClassForAvailability(availability)}\n            onClick={() => handleCellClick(dateIndex, timeIndex)}\n          ></td>\n        ))}\n      </tr>\n    ));\n  };\n\n  return (\n    <div className='dashboard-container'>\n      <Navbar />\n      <div className= 'dashboard-content'>\n        <SideNavbar />\n        <div className=\"main-content\">\n          <h2>This week's Schedule</h2>\n          <table className=\"table table-bordered custom-box khus\">\n            <thead>\n              <tr>\n                <th></th>\n                <th>9:00 AM</th>\n                <th>9:45 AM</th>\n                <th>10:30 AM</th>\n                <th>11:15 AM</th>\n                <th>12:00 PM</th>\n                <th>12:45 PM</th>\n                <th>01:30 PM</th>\n                <th>02:15 PM</th>\n                <th>03:00 PM</th>\n                <th>03:45 PM</th>\n                <th>04:30 PM</th>\n                <th>05:15 PM</th>\n              </tr>\n            </thead>\n            <tbody>\n              {generateScheduleRows()}\n            </tbody>\n          </table>\n\n          <button type=\"button\" className=\"btn btn-primary custom-button\" onClick={handleEdit}>\n            {isEditing ? 'Cancel Edit' : 'Edit Schedule'}\n          </button>\n          {isEditing && (\n            <button type=\"button\" className=\"btn btn-primary custom-button\" onClick={handleSubmit}>\n              Submit\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}