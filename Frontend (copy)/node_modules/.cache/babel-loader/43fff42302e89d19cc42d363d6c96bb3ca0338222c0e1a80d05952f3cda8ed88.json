{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/uploadschedule.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadSchedule() {\n  _s();\n  // Define dummy schedule data\n  const dummySchedule = {\n    slots: [[2024, 4, 5, 11, 15], [2024, 4, 6, 15, 45], [2024, 4, 7, 15, 0], [2024, 4, 2, 15, 45], [2024, 4, 5, 15, 0]],\n    appointments: [{\n      id: 1,\n      date: getNextDates()[0],\n      time: '09:00',\n      patientName: 'John Doe'\n    }, {\n      id: 2,\n      date: getNextDates()[4],\n      time: '10:30',\n      patientName: 'somebody someone'\n    }, {\n      id: 3,\n      date: getNextDates()[1],\n      time: '11:15',\n      patientName: 'Alice Smith'\n    }, {\n      id: 4,\n      date: getNextDates()[3],\n      time: '12:00',\n      patientName: 'Bob Johnson'\n    }, {\n      id: 5,\n      date: getNextDates()[5],\n      time: '09:00',\n      patientName: 'John Doe'\n    }]\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState({\n    slots: [],\n    appointments: []\n  });\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    // Initialize schedule with dummy data\n    setSchedule(dummySchedule);\n  }, []);\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability)\n  const handleCellClick = (dateIndex, timeIndex) => {\n    // Add logic to handle cell click, if needed\n  };\n\n  // Function to generate time slots\n  const generateTimeSlots = () => {\n    const slots = [];\n    let startTime = 9;\n    let endTime = 15;\n    let minutes = 0;\n    while (startTime <= endTime) {\n      slots.push(`${startTime.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`);\n      minutes += 45;\n      if (minutes >= 60) {\n        minutes = minutes % 60;\n        startTime += 1;\n      }\n    }\n    return slots;\n  };\n\n  // Function to generate schedule rows\n  const generateScheduleRows = () => {\n    const timeSlots = generateTimeSlots();\n    return schedule.slots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"row\",\n        children: `${slot[2]}/${slot[1]}/${slot[0]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), timeSlots.map((timeSlot, timeIndex) => {\n        const slotTime = `${slot[3].toString().padStart(2, '0')}:${slot[4].toString().padStart(2, '0')}`;\n        const status = getAvailabilityStatus(slotTime);\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          className: status === 'available' ? 'table-success bg-success text-white' : status === 'booked' ? 'table-danger bg-danger text-dark' : 'table-secondary bg-secondary text-white',\n          onClick: () => handleCellClick(index, timeIndex)\n        }, `${index}-${timeIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Function to get availability status\n  const getAvailabilityStatus = time => {\n    const appointment = schedule.appointments.find(app => app.time === time);\n    return appointment ? 'booked' : 'available';\n  };\n\n  // Function to simulate saving the schedule (replace with actual logic)\n  const handleSubmit = async () => {\n    alert('Saving schedule...');\n\n    // Replace with your actual saving logic (e.g., API call)\n    // This example simulates a successful save after 2 seconds\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    setIsEditing(false); // Reset edit mode after successful save\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"This week's Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered custom-box khus\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), generateTimeSlots().map((timeSlot, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: timeSlot\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: generateScheduleRows()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary custom-button\",\n          onClick: handleEdit,\n          children: isEditing ? 'Cancel Edit' : 'Edit Schedule'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary custom-button\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSchedule, \"Z+lK/czXUJxNW32GNSIDuPKVzN8=\");\n_c = UploadSchedule;\nvar _c;\n$RefreshReg$(_c, \"UploadSchedule\");","map":{"version":3,"names":["React","useState","useEffect","SideNavbar","Navbar","jsxDEV","_jsxDEV","UploadSchedule","_s","dummySchedule","slots","appointments","id","date","getNextDates","time","patientName","schedule","setSchedule","isEditing","setIsEditing","handleEdit","handleCellClick","dateIndex","timeIndex","generateTimeSlots","startTime","endTime","minutes","push","toString","padStart","generateScheduleRows","timeSlots","map","slot","index","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","timeSlot","slotTime","status","getAvailabilityStatus","className","onClick","appointment","find","app","handleSubmit","alert","Promise","resolve","setTimeout","type","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/uploadschedule.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\n\nexport default function UploadSchedule() {\n  // Define dummy schedule data\n  const dummySchedule = {\n    slots: [\n      [2024, 4, 5, 11, 15],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 7, 15, 0],\n      [2024, 4, 2, 15, 45],\n      [2024, 4, 5, 15, 0]\n    ],\n    appointments: [\n      { id:1, date: getNextDates()[0], time: '09:00', patientName: 'John Doe' },\n      { id:2, date: getNextDates()[4], time: '10:30', patientName: 'somebody someone' },\n      { id:3, date: getNextDates()[1], time: '11:15', patientName: 'Alice Smith' },\n      { id:4, date: getNextDates()[3], time: '12:00', patientName: 'Bob Johnson' },\n      { id:5, date: getNextDates()[5], time: '09:00', patientName: 'John Doe' },\n    ]\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState({ slots: [], appointments: [] });\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    // Initialize schedule with dummy data\n    setSchedule(dummySchedule);\n  }, []);\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability)\n  const handleCellClick = (dateIndex, timeIndex) => {\n    // Add logic to handle cell click, if needed\n  };\n\n  // Function to generate time slots\n  const generateTimeSlots = () => {\n    const slots = [];\n    let startTime = 9;\n    let endTime = 15;\n    let minutes = 0;\n\n    while (startTime <= endTime) {\n      slots.push(`${startTime.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`);\n      minutes += 45;\n      if (minutes >= 60) {\n        minutes = minutes % 60;\n        startTime += 1;\n      }\n    }\n\n    return slots;\n  };\n\n  // Function to generate schedule rows\n  const generateScheduleRows = () => {\n    const timeSlots = generateTimeSlots();\n\n    return schedule.slots.map((slot, index) => (\n      <tr key={index}>\n        <th scope=\"row\">{`${slot[2]}/${slot[1]}/${slot[0]}`}</th>\n        {timeSlots.map((timeSlot, timeIndex) => {\n          const slotTime = `${slot[3].toString().padStart(2, '0')}:${slot[4].toString().padStart(2, '0')}`;\n          const status = getAvailabilityStatus(slotTime);\n          return (\n            <td\n              key={`${index}-${timeIndex}`}\n              className={status === 'available' ? 'table-success bg-success text-white' : (status === 'booked' ? 'table-danger bg-danger text-dark' : 'table-secondary bg-secondary text-white')}\n              onClick={() => handleCellClick(index, timeIndex)}\n            ></td>\n          );\n        })}\n      </tr>\n    ));\n  };\n\n  // Function to get availability status\n  const getAvailabilityStatus = (time) => {\n    const appointment = schedule.appointments.find(app => app.time === time);\n    return appointment ? 'booked' : 'available';\n  };\n\n  // Function to simulate saving the schedule (replace with actual logic)\n  const handleSubmit = async () => {\n    alert('Saving schedule...');\n\n    // Replace with your actual saving logic (e.g., API call)\n    // This example simulates a successful save after 2 seconds\n    await new Promise((resolve) => setTimeout(resolve, 2000));\n\n    setIsEditing(false); // Reset edit mode after successful save\n  };\n\n  return (\n    <div className='dashboard-container'>\n      <Navbar />\n      <div className= 'dashboard-content'>\n        <SideNavbar />\n        <div className=\"main-content\">\n          <h2>This week's Schedule</h2>\n          <table className=\"table table-bordered custom-box khus\">\n            <thead>\n              <tr>\n                <th></th>\n                {generateTimeSlots().map((timeSlot, index) => (\n                  <th key={index}>{timeSlot}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {generateScheduleRows()}\n            </tbody>\n          </table>\n\n          <button type=\"button\" className=\"btn btn-primary custom-button\" onClick={handleEdit}>\n            {isEditing ? 'Cancel Edit' : 'Edit Schedule'}\n          </button>\n          {isEditing ? (\n            <button type=\"button\" className=\"btn btn-primary custom-button\" onClick={handleSubmit}>\n              Submit\n            </button>\n          ) : (\n            <div/>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}