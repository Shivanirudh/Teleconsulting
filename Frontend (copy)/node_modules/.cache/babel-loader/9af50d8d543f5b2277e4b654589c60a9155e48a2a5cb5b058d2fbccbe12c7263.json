{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/doc.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Documents = () => {\n  _s();\n  const [consentModalOpen, setConsentModalOpen] = useState(false);\n  const [selectedDocument, setSelectedDocument] = useState(null);\n  const [selectedHospital, setSelectedHospital] = useState(null);\n  const documents = [{\n    id: 1,\n    name: 'Patient Information.pdf',\n    size: '2 MB'\n  }, {\n    id: 2,\n    name: 'Medical History.docx',\n    size: '500 KB'\n  }, {\n    id: 3,\n    name: 'Latest Scans.zip',\n    size: '10 MB'\n  }];\n  const hospitals = [{\n    id: 1,\n    name: 'Central Hospital'\n  }, {\n    id: 2,\n    name: 'City General Hospital'\n  }, {\n    id: 3,\n    name: 'State Medical Center'\n  }];\n  const handleDownload = document => {\n    // Simulate download for demonstration (replace with actual download logic)\n    setSelectedDocument(document);\n  };\n  const handleAskConsent = document => {\n    setSelectedDocument(document);\n    setConsentModalOpen(true);\n  };\n  const handleConsentChoice = choice => {\n    if (choice === 'otherHospitals') {\n      setSelectedHospital(null); // Reset hospital selection on modal open\n    }\n    setConsentModalOpen(choice === 'self'); // Close modal for 'self'\n    setSelectedDocument(null);\n\n    // Simulate sending consent request based on choice (replace with actual logic)\n    console.log(`Sending consent request for \"${selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.name}\" ${choice === 'self' ? '' : `to ${selectedHospital === null || selectedHospital === void 0 ? void 0 : selectedHospital.name}`}`);\n  };\n  const handleHospitalSelect = hospital => {\n    setSelectedHospital(hospital);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"documents\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: documents.map(document => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: document.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: document.size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDownload(document),\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAskConsent(document),\n              children: \"Ask Consent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, document.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), consentModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"consent-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Grant Access\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You are requesting access to \\\"\", selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.name, \"\\\".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), consentModalOpen === 'otherHospitals' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select Hospital:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: hospitals.map(hospital => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleHospitalSelect(hospital),\n              children: hospital.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)\n          }, hospital.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleConsentChoice('self'),\n        children: \"For Myself\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleConsentChoice('otherHospitals'),\n        disabled: !selectedHospital // Disable 'For Other Hospitals' if no hospital selected\n        ,\n        children: \"For Other Hospitals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setConsentModalOpen(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Documents, \"dJrQ0iCEq7lw7m7rg0UMQTWbeIk=\");\n_c = Documents;\nexport default Documents;\nvar _c;\n$RefreshReg$(_c, \"Documents\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Documents","_s","consentModalOpen","setConsentModalOpen","selectedDocument","setSelectedDocument","selectedHospital","setSelectedHospital","documents","id","name","size","hospitals","handleDownload","document","handleAskConsent","handleConsentChoice","choice","console","log","handleHospitalSelect","hospital","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/doc.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Documents = () => {\n  const [consentModalOpen, setConsentModalOpen] = useState(false);\n  const [selectedDocument, setSelectedDocument] = useState(null);\n  const [selectedHospital, setSelectedHospital] = useState(null);\n\n  const documents = [\n    { id: 1, name: 'Patient Information.pdf', size: '2 MB' },\n    { id: 2, name: 'Medical History.docx', size: '500 KB' },\n    { id: 3, name: 'Latest Scans.zip', size: '10 MB' },\n  ];\n\n  const hospitals = [\n    { id: 1, name: 'Central Hospital' },\n    { id: 2, name: 'City General Hospital' },\n    { id: 3, name: 'State Medical Center' },\n  ];\n\n  const handleDownload = (document) => {\n    // Simulate download for demonstration (replace with actual download logic)\n    setSelectedDocument(document);\n  };\n\n  const handleAskConsent = (document) => {\n    setSelectedDocument(document);\n    setConsentModalOpen(true);\n  };\n\n  const handleConsentChoice = (choice) => {\n    if (choice === 'otherHospitals') {\n      setSelectedHospital(null); // Reset hospital selection on modal open\n    }\n    setConsentModalOpen(choice === 'self'); // Close modal for 'self'\n    setSelectedDocument(null);\n\n    // Simulate sending consent request based on choice (replace with actual logic)\n    console.log(\n      `Sending consent request for \"${selectedDocument?.name}\" ${\n        choice === 'self' ? '' : `to ${selectedHospital?.name}`\n      }`\n    );\n  };\n\n  const handleHospitalSelect = (hospital) => {\n    setSelectedHospital(hospital);\n  };\n\n  return (\n    <div className=\"documents\">\n      <h2>Documents</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Size</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {documents.map((document) => (\n            <tr key={document.id}>\n              <td>{document.name}</td>\n              <td>{document.size}</td>\n              <td>\n                <button onClick={() => handleDownload(document)}>\n                  Download\n                </button>\n                <button onClick={() => handleAskConsent(document)}>\n                  Ask Consent\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {consentModalOpen && (\n        <div className=\"consent-modal\">\n          <h3>Grant Access</h3>\n          <p>You are requesting access to \"{selectedDocument?.name}\".</p>\n          {consentModalOpen === 'otherHospitals' && (\n            <div>\n              <p>Select Hospital:</p>\n              <ul>\n                {hospitals.map((hospital) => (\n                  <li key={hospital.id}>\n                    <button onClick={() => handleHospitalSelect(hospital)}>\n                      {hospital.name}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          <button onClick={() => handleConsentChoice('self')}>For Myself</button>\n          <button\n            onClick={() => handleConsentChoice('otherHospitals')}\n            disabled={!selectedHospital} // Disable 'For Other Hospitals' if no hospital selected\n          >\n            For Other Hospitals\n          </button>\n          <button onClick={() => setConsentModalOpen(false)}>Cancel</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Documents;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}