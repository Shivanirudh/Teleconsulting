{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Patient/DoctorList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './../../css/Patient/DoctorList.css';\nimport SearchBar from './../../components/Patient/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorList() {\n  _s();\n  // Dummy data for doctors\n  const [searchTerm, setSearchTerm] = useState('');\n  const doctors = [{\n    name: 'Dr. John Doe',\n    specialty: 'Cardiologist',\n    availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'available', 'booked', 'available', 'available'] // Sample availability for each hour\n  }, {\n    name: 'Dr. Jane Smith',\n    specialty: 'Dermatologist',\n    availability: ['available', 'available', 'booked', 'available', 'busy', 'busy', 'booked', 'available', 'available', 'available', 'booked', 'busy', 'available', 'available'] // Sample availability for each hour\n  }, {\n    name: 'Dr. Michael Brown',\n    specialty: 'Pediatrician',\n    availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available', 'available', 'available'] // Sample availability for each hour\n  }];\n  const renderAvailability = availability => {\n    return availability.map((slot, index) => {\n      let className = '';\n      switch (slot) {\n        case 'available':\n          className = 'available-new';\n          break;\n        case 'booked':\n          className = 'booked-new';\n          break;\n        case 'busy':\n          className = 'busy-new';\n          break;\n        default:\n          className = '';\n      }\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: className\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    });\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.specialty.toLowerCase().includes(searchTerm.toLowerCase()));\n  const isDoctorBusy = doctor => {\n    return doctor.availability.some(slot => slot === 'busy'); // Check if any slot is busy\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-list-container-new\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Available Doctors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredDoctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: doctor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: doctor.specialty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"availability-table-new\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time Slots\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), Array.from({\n                length: 14\n              }, (_, i) => i + 8).map(hour => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [hour, \":00 - \", hour + 1, \":00\"]\n              }, hour, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Availability\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), renderAvailability(doctor.availability)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: isDoctorBusy(doctor) ? 'doc-list-wala-button-new busy-new' : 'doc-list-wala-button-new',\n          children: \"Book Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorList, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useState","SearchBar","jsxDEV","_jsxDEV","DoctorList","_s","searchTerm","setSearchTerm","doctors","name","specialty","availability","renderAvailability","map","slot","index","className","fileName","_jsxFileName","lineNumber","columnNumber","filteredDoctors","filter","doctor","toLowerCase","includes","isDoctorBusy","some","children","onSearch","style","textAlign","Array","from","length","_","i","hour","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Patient/DoctorList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './../../css/Patient/DoctorList.css';\r\nimport SearchBar from './../../components/Patient/SearchBar';\r\n\r\nfunction DoctorList() {\r\n  // Dummy data for doctors\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const doctors = [\r\n    {\r\n      name: 'Dr. John Doe',\r\n      specialty: 'Cardiologist',\r\n      availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'available', 'booked', 'available', 'available'], // Sample availability for each hour\r\n    },\r\n    {\r\n      name: 'Dr. Jane Smith',\r\n      specialty: 'Dermatologist',\r\n      availability: ['available', 'available', 'booked', 'available', 'busy', 'busy', 'booked', 'available', 'available', 'available', 'booked', 'busy', 'available', 'available'], // Sample availability for each hour\r\n    },\r\n    {\r\n      name: 'Dr. Michael Brown',\r\n      specialty: 'Pediatrician',\r\n      availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available', 'available', 'available'], // Sample availability for each hour\r\n    },\r\n  ];\r\n\r\n  const renderAvailability = (availability) => {\r\n    return availability.map((slot, index) => {\r\n      let className = '';\r\n      switch (slot) {\r\n        case 'available':\r\n          className = 'available-new';\r\n          break;\r\n        case 'booked':\r\n          className = 'booked-new';\r\n          break;\r\n        case 'busy':\r\n          className = 'busy-new';\r\n          break;\r\n        default:\r\n          className = '';\r\n      }\r\n      return <td key={index} className={className}></td>;\r\n    });\r\n  };\r\n\r\n  const filteredDoctors = doctors.filter((doctor) =>\r\n    doctor.specialty.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const isDoctorBusy = (doctor) => {\r\n    return doctor.availability.some(slot => slot === 'busy'); // Check if any slot is busy\r\n  };\r\n\r\n  return (\r\n    <div className=\"doctor-list-container-new\">\r\n      <SearchBar onSearch={setSearchTerm} />\r\n      <h2 style={{textAlign: 'center'}}>Available Doctors</h2>\r\n      <ul>\r\n        {filteredDoctors.map((doctor, index) => (\r\n          <li key={index}>\r\n            <h3>{doctor.name}</h3>\r\n            <p>{doctor.specialty}</p>\r\n            <table className=\"availability-table-new\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>Time Slots</th>\r\n                  {Array.from({ length: 14 }, (_, i) => i + 8).map((hour) => (\r\n                    <th key={hour}>{hour}:00 - {hour + 1}:00</th>\r\n                  ))}\r\n                </tr>\r\n                <tr>\r\n                  <td>Availability</td>\r\n                  {renderAvailability(doctor.availability)}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <button className={isDoctorBusy(doctor) ? 'doc-list-wala-button-new busy-new' : 'doc-list-wala-button-new'}>\r\n              Book Appointment\r\n            </button>\r\n            <br></br>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}