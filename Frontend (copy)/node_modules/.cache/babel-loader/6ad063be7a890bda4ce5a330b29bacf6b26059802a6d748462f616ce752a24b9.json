{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/doc.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentsPage = () => {\n  _s();\n  // State for consent status\n  const [consent, setConsent] = useState(fale);\n\n  // State for showing/hiding hospital selection modal\n  const [showHospitalModal, setShowHospitalModal] = useState(false);\n\n  // State for selected hospital\n  const [selectedHospital, setSelectedHospital] = useState(null);\n\n  // List of hospitals (replace with actual data)\n  const hospitals = [{\n    id: 1,\n    name: 'Hospital A'\n  }, {\n    id: 2,\n    name: 'Hospital B'\n  }, {\n    id: 3,\n    name: 'Hospital C'\n  }\n  // Add more hospitals as needed\n  ];\n\n  // Function to handle consent request\n  const handleAskForConsent = () => {\n    // Logic to request consent (could be an API call)\n    // For simplicity, directly setting consent to true\n    setConsent(true);\n  };\n\n  // Function to handle hospital selection\n  const handleHospitalSelect = hospital => {\n    setSelectedHospital(hospital);\n    setShowHospitalModal(false);\n    setConsent(true); // For simplicity, set consent to true after hospital selection\n  };\n\n  // Function to handle download button click\n  const handleDownload = () => {\n    if (consent) {\n      // Logic to initiate download\n      // For simplicity, just log a message\n      alert('downloading');\n    } else {\n      // Display error message or take appropriate action\n      alert('doing something');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Document 1\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownload,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Document 2\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownload,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), !consent && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAskForConsent,\n      children: \"Ask for Consent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), showHospitalModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: () => setShowHospitalModal(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Hospital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: hospitals.map(hospital => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleHospitalSelect(hospital),\n            children: hospital.name\n          }, hospital.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentsPage, \"XJXvYRcrFlCdENX8rSKlOx+yViM=\");\n_c = DocumentsPage;\nexport default DocumentsPage;\nvar _c;\n$RefreshReg$(_c, \"DocumentsPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DocumentsPage","_s","consent","setConsent","fale","showHospitalModal","setShowHospitalModal","selectedHospital","setSelectedHospital","hospitals","id","name","handleAskForConsent","handleHospitalSelect","hospital","handleDownload","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/doc.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst DocumentsPage = () => {\n  // State for consent status\n  const [consent, setConsent] = useState(fale);\n  \n  // State for showing/hiding hospital selection modal\n  const [showHospitalModal, setShowHospitalModal] = useState(false);\n  \n  // State for selected hospital\n  const [selectedHospital, setSelectedHospital] = useState(null);\n  \n  // List of hospitals (replace with actual data)\n  const hospitals = [\n    { id: 1, name: 'Hospital A' },\n    { id: 2, name: 'Hospital B' },\n    { id: 3, name: 'Hospital C' },\n    // Add more hospitals as needed\n  ];\n  \n  // Function to handle consent request\n  const handleAskForConsent = () => {\n    // Logic to request consent (could be an API call)\n    // For simplicity, directly setting consent to true\n    setConsent(true);\n  };\n  \n  // Function to handle hospital selection\n  const handleHospitalSelect = (hospital) => {\n    setSelectedHospital(hospital);\n    setShowHospitalModal(false);\n    setConsent(true); // For simplicity, set consent to true after hospital selection\n  };\n  \n  // Function to handle download button click\n  const handleDownload = () => {\n    if (consent) {\n      // Logic to initiate download\n      // For simplicity, just log a message\n      alert('downloading')\n    } else {\n      // Display error message or take appropriate action\n     alert('doing something')\n    }\n  };\n  \n  return (\n    <div>\n      <h1>Documents</h1>\n      <ul>\n        <li>\n          Document 1\n          <button onClick={handleDownload}>Download</button>\n        </li>\n        <li>\n          Document 2\n          <button onClick={handleDownload}>Download</button>\n        </li>\n        {/* Add more documents as needed */}\n      </ul>\n      \n      {/* Ask for consent button */}\n      {!consent && (\n        <button onClick={handleAskForConsent}>Ask for Consent</button>\n      )}\n      \n      {/* Hospital selection modal */}\n      {showHospitalModal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={() => setShowHospitalModal(false)}>&times;</span>\n            <h2>Select Hospital</h2>\n            <ul>\n              {hospitals.map(hospital => (\n                <li key={hospital.id} onClick={() => handleHospitalSelect(hospital)}>\n                  {hospital.name}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DocumentsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}