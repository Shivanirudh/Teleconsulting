{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/uploadschedule.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadSchedule() {\n  _s();\n  // Define dummy schedule data\n  const dummySchedule = {\n    \"slots\": [[2024, 4, 5, 9, 0], [2024, 4, 6, 10, 45], [2024, 4, 7, 11, 30], [2024, 4, 6, 12, 15], [2024, 4, 5, 13, 0], [2024, 4, 6, 14, 45], [2024, 4, 7, 15, 30]],\n    \"appointments\": [{\n      id: 1,\n      date: [2024, 4, 5],\n      time: '09:00',\n      patientName: 'John Doe'\n    }, {\n      id: 2,\n      date: [2024, 4, 6],\n      time: '10:30',\n      patientName: 'somebody someone'\n    }, {\n      id: 3,\n      date: [2024, 4, 7],\n      time: '11:15',\n      patientName: 'Alice Smith'\n    }, {\n      id: 4,\n      date: [2024, 4, 8],\n      time: '12:00',\n      patientName: 'Bob Johnson'\n    }, {\n      id: 5,\n      date: [2024, 4, 6],\n      time: '09:00',\n      patientName: 'John Doe'\n    }]\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState([]);\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    // Initialize schedule with dummy data\n    setSchedule(dummySchedule);\n  }, []);\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability)\n  const handleCellClick = (dateIndex, timeIndex) => {\n    const updatedSchedule = [...schedule.slots];\n    const cellValue = updatedSchedule[dateIndex][timeIndex];\n    if (isEditing && !isBookedSlot(dateIndex, timeIndex)) {\n      updatedSchedule[dateIndex][timeIndex] = cellValue === 1 ? 0 : 1;\n      setSchedule({\n        ...schedule,\n        slots: updatedSchedule\n      });\n    }\n  };\n\n  // Function to check if slot is booked\n  const isBookedSlot = (dateIndex, timeIndex) => {\n    const [year, month, day, hour, minute] = schedule.slots[dateIndex];\n    const matchingAppointment = schedule.appointments.find(appointment => appointment.date[0] === year && appointment.date[1] === month && appointment.date[2] === day && appointment.time === `${hour}:${minute}`);\n    return !!matchingAppointment;\n  };\n  const generateScheduleRows = () => {\n    return schedule.slots.map((slot, dateIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"row\",\n        children: `${slot[2]}/${slot[1]}/${slot[0]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), [...Array(10).keys()].map(timeIndex => /*#__PURE__*/_jsxDEV(\"td\", {\n        className: getClassForSlot(dateIndex, timeIndex),\n        onClick: () => handleCellClick(dateIndex, timeIndex)\n      }, `${slot[0]}-${slot[1]}-${slot[2]}-${timeIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))]\n    }, `${slot[0]}-${slot[1]}-${slot[2]}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Function to get CSS class for cell based on availability\n  const getClassForSlot = (dateIndex, timeIndex) => {\n    const isBooked = isBookedSlot(dateIndex, timeIndex);\n    if (isBooked) return 'table-danger bg-danger text-dark';\n    if (schedule.slots[dateIndex][3] === 9) return 'table-success bg-success text-white';\n    return 'table-secondary bg-secondary text-white';\n  };\n\n  // Function to simulate saving the schedule (replace with actual logic)\n  const handleSubmit = async () => {\n    alert('Saving schedule...');\n    // Replace with your actual saving logic (e.g., API call)\n    // This example simulates a successful save after 2 seconds\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    setIsEditing(false); // Reset edit mode after successful save\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"This week's Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered custom-box khus\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"9:00 AM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"10:00 AM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"11:00 AM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"12:00 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"01:00 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"02:00 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"03:00 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"04:00 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"05:00 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"06:00 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"07:00 PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: generateScheduleRows()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary custom-button\",\n          onClick: handleEdit,\n          children: isEditing ? 'Cancel Edit' : 'Edit Schedule'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary custom-button\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSchedule, \"++4b96eULKbdgzoKDSJcjB7i644=\");\n_c = UploadSchedule;\nvar _c;\n$RefreshReg$(_c, \"UploadSchedule\");","map":{"version":3,"names":["React","useState","useEffect","SideNavbar","Navbar","jsxDEV","_jsxDEV","UploadSchedule","_s","dummySchedule","id","date","time","patientName","schedule","setSchedule","isEditing","setIsEditing","handleEdit","handleCellClick","dateIndex","timeIndex","updatedSchedule","slots","cellValue","isBookedSlot","year","month","day","hour","minute","matchingAppointment","appointments","find","appointment","generateScheduleRows","map","slot","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","Array","keys","className","getClassForSlot","onClick","isBooked","handleSubmit","alert","Promise","resolve","setTimeout","type","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/uploadschedule.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\n\nexport default function UploadSchedule() {\n  // Define dummy schedule data\n  const dummySchedule = {\n    \"slots\": [\n      [2024, 4, 5, 9, 0],\n      [2024, 4, 6, 10, 45],\n      [2024, 4, 7, 11, 30],\n      [2024, 4, 6, 12, 15],\n      [2024, 4, 5, 13, 0],\n      [2024, 4, 6, 14, 45],\n      [2024, 4, 7, 15, 30]\n    ],\n    \"appointments\": [\n      { id: 1, date: [2024, 4, 5], time: '09:00', patientName: 'John Doe' },\n      { id: 2, date: [2024, 4, 6], time: '10:30', patientName: 'somebody someone' },\n      { id: 3, date: [2024, 4, 7], time: '11:15', patientName: 'Alice Smith' },\n      { id: 4, date: [2024, 4, 8], time: '12:00', patientName: 'Bob Johnson' },\n      { id: 5, date: [2024, 4, 6], time: '09:00', patientName: 'John Doe' },\n    ]\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState([]);\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    // Initialize schedule with dummy data\n    setSchedule(dummySchedule);\n  }, []);\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability)\n  const handleCellClick = (dateIndex, timeIndex) => {\n    const updatedSchedule = [...schedule.slots];\n    const cellValue = updatedSchedule[dateIndex][timeIndex];\n\n    if (isEditing && !isBookedSlot(dateIndex, timeIndex)) {\n      updatedSchedule[dateIndex][timeIndex] = cellValue === 1 ? 0 : 1;\n      setSchedule({ ...schedule, slots: updatedSchedule });\n    }\n  };\n\n  // Function to check if slot is booked\n  const isBookedSlot = (dateIndex, timeIndex) => {\n    const [year, month, day, hour, minute] = schedule.slots[dateIndex];\n    const matchingAppointment = schedule.appointments.find(appointment =>\n      appointment.date[0] === year &&\n      appointment.date[1] === month &&\n      appointment.date[2] === day &&\n      appointment.time === `${hour}:${minute}`\n    );\n    return !!matchingAppointment;\n  };\n\n  const generateScheduleRows = () => {\n    return schedule.slots.map((slot, dateIndex) => (\n      <tr key={`${slot[0]}-${slot[1]}-${slot[2]}`}>\n        <th scope=\"row\">{`${slot[2]}/${slot[1]}/${slot[0]}`}</th>\n        {[...Array(10).keys()].map(timeIndex => (\n          <td\n            key={`${slot[0]}-${slot[1]}-${slot[2]}-${timeIndex}`}\n            className={getClassForSlot(dateIndex, timeIndex)}\n            onClick={() => handleCellClick(dateIndex, timeIndex)}\n          ></td>\n        ))}\n      </tr>\n    ));\n  };\n\n  // Function to get CSS class for cell based on availability\n  const getClassForSlot = (dateIndex, timeIndex) => {\n    const isBooked = isBookedSlot(dateIndex, timeIndex);\n    if (isBooked) return 'table-danger bg-danger text-dark';\n    if (schedule.slots[dateIndex][3] === 9) return 'table-success bg-success text-white';\n    return 'table-secondary bg-secondary text-white';\n  };\n\n  // Function to simulate saving the schedule (replace with actual logic)\n  const handleSubmit = async () => {\n    alert('Saving schedule...');\n    // Replace with your actual saving logic (e.g., API call)\n    // This example simulates a successful save after 2 seconds\n    await new Promise((resolve) => setTimeout(resolve, 2000));\n    setIsEditing(false); // Reset edit mode after successful save\n  };\n\n  return (\n    <div className='dashboard-container'>\n      <Navbar />\n      <div className='dashboard-content'>\n        <SideNavbar />\n        <div className=\"main-content\">\n          <h2>This week's Schedule</h2>\n          <table className=\"table table-bordered custom-box khus\">\n            <thead>\n              <tr>\n                <th></th>\n                <th>9:00 AM</th>\n                <th>10:00 AM</th>\n                <th>11:00 AM</th>\n                <th>12:00 PM</th>\n                <th>01:00 PM</th>\n                <th>02:00 PM</th>\n                <th>03:00 PM</th>\n                <th>04:00 PM</th>\n                <th>05:00 PM</th>\n                <th>06:00 PM</th>\n                <th>07:00 PM</th>\n              </tr>\n            </thead>\n            <tbody>\n              {generateScheduleRows()}\n            </tbody>\n          </table>\n\n          <button type=\"button\" className=\"btn btn-primary custom-button\" onClick={handleEdit}>\n            {isEditing ? 'Cancel Edit' : 'Edit Schedule'}\n          </button>\n          {isEditing && (\n            <button type=\"button\" className=\"btn btn-primary custom-button\" onClick={handleSubmit}>\n              Submit\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}