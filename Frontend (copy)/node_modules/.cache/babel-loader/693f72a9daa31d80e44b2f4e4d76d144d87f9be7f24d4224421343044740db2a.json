{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/doc.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Documents = () => {\n  _s();\n  const [consentModalOpen, setConsentModalOpen] = useState(false);\n  const [selectedDocument, setSelectedDocument] = useState(null);\n  const [selectedHospital, setSelectedHospital] = useState(null);\n  const [hospitalListModalOpen, setHospitalListModalOpen] = useState(false);\n  const [modalPosition, setModalPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const documents = [{\n    id: 1,\n    name: 'Patient Information.pdf',\n    size: '2 MB'\n  }, {\n    id: 2,\n    name: 'Medical History.docx',\n    size: '500 KB'\n  }, {\n    id: 3,\n    name: 'Latest Scans.zip',\n    size: '10 MB'\n  }];\n\n  // Dummy hospital list\n  const hospitals = [{\n    id: 1,\n    name: 'Hospital A'\n  }, {\n    id: 2,\n    name: 'Hospital B'\n  }, {\n    id: 3,\n    name: 'Hospital C'\n  }, {\n    id: 4,\n    name: 'Hospital D'\n  }, {\n    id: 5,\n    name: 'Hospital E'\n  }\n  // Add more hospitals as needed\n  ];\n  const handleDownload = document => {\n    // Simulate download for demonstration (replace with actual download logic)\n    setSelectedDocument(document);\n  };\n  const handleAskConsent = (document, event) => {\n    event.preventDefault();\n    setSelectedDocument(document);\n    setModalPosition({\n      top: event.clientY,\n      left: event.clientX\n    });\n    setConsentModalOpen(true);\n  };\n  const handleConsentChoice = choice => {\n    if (choice === 'otherHospitals') {\n      setHospitalListModalOpen(true);\n    } else {\n      setConsentModalOpen(false);\n      setSelectedDocument(null);\n      // Simulate sending consent request based on choice (replace with actual logic)\n      console.log(`Sending consent request for \"${selectedDocument.name}\" for ${choice}`);\n    }\n  };\n  const handleHospitalSelection = hospital => {\n    setHospitalListModalOpen(false);\n    setSelectedHospital(hospital);\n    setConsentModalOpen(false);\n    setSelectedDocument(null);\n    // Simulate sending consent request for other hospital\n    console.log(`Sending consent request for \"${selectedDocument.name}\" to ${hospital.name}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"documents\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: documents.map(document => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: document.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: document.size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: event => handleDownload(document),\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: event => handleAskConsent(document, event),\n              children: \"Ask Consent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, document.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), consentModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"consent-modal\",\n      style: {\n        top: modalPosition.top,\n        left: modalPosition.left\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Grant Access\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You are requesting access to \\\"\", selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.name, \"\\\".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleConsentChoice('self'),\n        children: \"For Myself\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleConsentChoice('otherHospitals'),\n        children: \"For Other Hospitals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setConsentModalOpen(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), hospitalListModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hospital-list-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Hospital\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select the hospital:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: hospitals.map(hospital => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleHospitalSelection(hospital),\n            children: hospital.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)\n        }, hospital.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Documents, \"5TEKwqP+Ebwz6PLe4b7HwVETOs0=\");\n_c = Documents;\nexport default Documents;\nvar _c;\n$RefreshReg$(_c, \"Documents\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Documents","_s","consentModalOpen","setConsentModalOpen","selectedDocument","setSelectedDocument","selectedHospital","setSelectedHospital","hospitalListModalOpen","setHospitalListModalOpen","modalPosition","setModalPosition","top","left","documents","id","name","size","hospitals","handleDownload","document","handleAskConsent","event","preventDefault","clientY","clientX","handleConsentChoice","choice","console","log","handleHospitalSelection","hospital","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","style","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/doc.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Documents = () => {\n  const [consentModalOpen, setConsentModalOpen] = useState(false);\n  const [selectedDocument, setSelectedDocument] = useState(null);\n  const [selectedHospital, setSelectedHospital] = useState(null);\n  const [hospitalListModalOpen, setHospitalListModalOpen] = useState(false);\n  const [modalPosition, setModalPosition] = useState({ top: 0, left: 0 });\n\n  const documents = [\n    { id: 1, name: 'Patient Information.pdf', size: '2 MB' },\n    { id: 2, name: 'Medical History.docx', size: '500 KB' },\n    { id: 3, name: 'Latest Scans.zip', size: '10 MB' },\n  ];\n\n  // Dummy hospital list\n  const hospitals = [\n    { id: 1, name: 'Hospital A' },\n    { id: 2, name: 'Hospital B' },\n    { id: 3, name: 'Hospital C' },\n    { id: 4, name: 'Hospital D' },\n    { id: 5, name: 'Hospital E' },\n    // Add more hospitals as needed\n  ];\n\n  const handleDownload = (document) => {\n    // Simulate download for demonstration (replace with actual download logic)\n    setSelectedDocument(document);\n  };\n\n  const handleAskConsent = (document, event) => {\n    event.preventDefault();\n    setSelectedDocument(document);\n    setModalPosition({ top: event.clientY, left: event.clientX });\n    setConsentModalOpen(true);\n  };\n\n  const handleConsentChoice = (choice) => {\n    if (choice === 'otherHospitals') {\n      setHospitalListModalOpen(true);\n    } else {\n      setConsentModalOpen(false);\n      setSelectedDocument(null);\n      // Simulate sending consent request based on choice (replace with actual logic)\n      console.log(`Sending consent request for \"${selectedDocument.name}\" for ${choice}`);\n    }\n  };\n\n  const handleHospitalSelection = (hospital) => {\n    setHospitalListModalOpen(false);\n    setSelectedHospital(hospital);\n    setConsentModalOpen(false);\n    setSelectedDocument(null);\n    // Simulate sending consent request for other hospital\n    console.log(`Sending consent request for \"${selectedDocument.name}\" to ${hospital.name}`);\n  };\n\n  return (\n    <div className=\"documents\">\n      <h2>Documents</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Size</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {documents.map((document) => (\n            <tr key={document.id}>\n              <td>{document.name}</td>\n              <td>{document.size}</td>\n              <td>\n                <button onClick={(event) => handleDownload(document)}>Download</button>\n                <button onClick={(event) => handleAskConsent(document, event)}>Ask Consent</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {consentModalOpen && (\n        <div className=\"consent-modal\" style={{ top: modalPosition.top, left: modalPosition.left }}>\n          <h3>Grant Access</h3>\n          <p>You are requesting access to \"{selectedDocument?.name}\".</p>\n          <button onClick={() => handleConsentChoice('self')}>For Myself</button>\n          <button onClick={() => handleConsentChoice('otherHospitals')}>For Other Hospitals</button>\n          <button onClick={() => setConsentModalOpen(false)}>Cancel</button>\n        </div>\n      )}\n      {hospitalListModalOpen && (\n        <div className=\"hospital-list-modal\">\n          <h3>Select Hospital</h3>\n          <p>Please select the hospital:</p>\n          <ul>\n            {hospitals.map((hospital) => (\n              <li key={hospital.id}>\n                <button onClick={() => handleHospitalSelection(hospital)}>{hospital.name}</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Documents;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}