{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/doc.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentsPage = () => {\n  _s();\n  // State for consent status\n  const [consents, setConsents] = useState({});\n\n  // State for showing/hiding hospital selection modal\n  const [showHospitalModal, setShowHospitalModal] = useState(false);\n\n  // State for selected hospital\n  const [selectedHospital, setSelectedHospital] = useState(null);\n\n  // List of hospitals (replace with actual data)\n  const hospitals = [{\n    id: 1,\n    name: 'Hospital A'\n  }, {\n    id: 2,\n    name: 'Hospital B'\n  }, {\n    id: 3,\n    name: 'Hospital C'\n  }\n  // Add more hospitals as needed\n  ];\n\n  // Function to handle consent request for a document\n  const handleAskForConsent = documentId => {\n    // Logic to request consent (could be an API call)\n    // For simplicity, directly setting consent to true\n    setConsents(prevConsents => ({\n      ...prevConsents,\n      [documentId]: true\n    }));\n  };\n\n  // Function to handle hospital selection\n  const handleHospitalSelect = hospital => {\n    setSelectedHospital(hospital);\n    setShowHospitalModal(false);\n    setConsents(true); // For simplicity, set consent to true after hospital selection\n  };\n\n  // Function to handle download button click\n  const handleDownload = documentId => {\n    if (consents[documentId]) {\n      // Logic to initiate download\n      // For simplicity, just log a message\n      console.log('Downloading document...');\n    } else {\n      // Display error message or take appropriate action\n      console.log('You need to have consent to download this document.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Document 1\", !consents['document1'] && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAskForConsent('document1'),\n          children: \"Ask for Consent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload('document1'),\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Document 2\", !consents['document2'] && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAskForConsent('document2'),\n          children: \"Ask for Consent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload('document2'),\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), showHospitalModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: () => setShowHospitalModal(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Hospital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: hospitals.map(hospital => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleHospitalSelect(hospital),\n            children: hospital.name\n          }, hospital.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentsPage, \"bofMhbeaGumy6CYh1a4suvoSi5s=\");\n_c = DocumentsPage;\nexport default DocumentsPage;\nvar _c;\n$RefreshReg$(_c, \"DocumentsPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DocumentsPage","_s","consents","setConsents","showHospitalModal","setShowHospitalModal","selectedHospital","setSelectedHospital","hospitals","id","name","handleAskForConsent","documentId","prevConsents","handleHospitalSelect","hospital","handleDownload","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/doc.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst DocumentsPage = () => {\n  // State for consent status\n  const [consents, setConsents] = useState({});\n  \n  // State for showing/hiding hospital selection modal\n  const [showHospitalModal, setShowHospitalModal] = useState(false);\n  \n  // State for selected hospital\n  const [selectedHospital, setSelectedHospital] = useState(null);\n  \n  // List of hospitals (replace with actual data)\n  const hospitals = [\n    { id: 1, name: 'Hospital A' },\n    { id: 2, name: 'Hospital B' },\n    { id: 3, name: 'Hospital C' },\n    // Add more hospitals as needed\n  ];\n  \n  // Function to handle consent request for a document\n  const handleAskForConsent = (documentId) => {\n    // Logic to request consent (could be an API call)\n    // For simplicity, directly setting consent to true\n    setConsents(prevConsents => ({\n      ...prevConsents,\n      [documentId]: true\n    }));\n  };\n  \n  // Function to handle hospital selection\n  const handleHospitalSelect = (hospital) => {\n    setSelectedHospital(hospital);\n    setShowHospitalModal(false);\n    setConsents(true); // For simplicity, set consent to true after hospital selection\n  };\n  \n  // Function to handle download button click\n  const handleDownload = (documentId) => {\n    if (consents[documentId]) {\n      // Logic to initiate download\n      // For simplicity, just log a message\n      console.log('Downloading document...');\n    } else {\n      // Display error message or take appropriate action\n      console.log('You need to have consent to download this document.');\n    }\n  };\n  \n  return (\n    <div>\n      <h1>Documents</h1>\n      <ul>\n        <li>\n          Document 1\n          {!consents['document1'] && (\n            <button onClick={() => handleAskForConsent('document1')}>Ask for Consent</button>\n          )}\n          <button onClick={() => handleDownload('document1')}>Download</button>\n        </li>\n        <li>\n          Document 2\n          {!consents['document2'] && (\n            <button onClick={() => handleAskForConsent('document2')}>Ask for Consent</button>\n          )}\n          <button onClick={() => handleDownload('document2')}>Download</button>\n        </li>\n        {/* Add more documents as needed */}\n      </ul>\n      \n      {/* Hospital selection modal */}\n      {showHospitalModal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={() => setShowHospitalModal(false)}>&times;</span>\n            <h2>Select Hospital</h2>\n            <ul>\n              {hospitals.map(hospital => (\n                <li key={hospital.id} onClick={() => handleHospitalSelect(hospital)}>\n                  {hospital.name}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DocumentsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}