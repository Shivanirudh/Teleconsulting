{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Patient/DoctorList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './../../css/Patient/DoctorList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DoctorList() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedHospital, setSelectedHospital] = useState(null);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [isBookingMode, setIsBookingMode] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [lockedSlots, setLockedSlots] = useState([]);\n  const [isScheduleCollapsed, setIsScheduleCollapsed] = useState(false);\n  const [isAppointmentBooked, setIsAppointmentBooked] = useState(false);\n  const hospitals = [{\n    id: 1,\n    name: 'Khavyhesri',\n    doctors: [{\n      id: 1,\n      name: 'Dr. John Doe',\n      specialty: 'Cardiologist',\n      schedule: [{\n        date: '2024-04-01',\n        availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available']\n      }, {\n        date: '2024-04-02',\n        availability: ['booked', 'busy', 'available', 'busy', 'available', 'busy', 'busy', 'available', 'booked', 'booked', 'booked', 'booked']\n      }, {\n        date: '2024-04-03',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'available']\n      }, {\n        date: '2024-04-04',\n        availability: ['available', 'available', 'busy', 'busy', 'busy', 'available', 'available', 'booked', 'available', 'busy', 'available', 'available']\n      }, {\n        date: '2024-04-05',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'busy', 'busy', 'available', 'booked', 'booked', 'busy', 'booked']\n      }, {\n        date: '2024-04-06',\n        availability: ['available', 'busy', 'booked', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'available']\n      }, {\n        date: '2024-04-07',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'booked']\n      }]\n    }, {\n      id: 2,\n      name: 'Dr. Jane Smith',\n      specialty: 'Dermatologist',\n      schedule: [{\n        date: '2024-04-01',\n        availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available']\n      }, {\n        date: '2024-04-02',\n        availability: ['booked', 'busy', 'available', 'busy', 'available', 'busy', 'busy', 'available', 'booked', 'booked', 'booked', 'booked']\n      }, {\n        date: '2024-04-03',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'available']\n      }, {\n        date: '2024-04-04',\n        availability: ['available', 'available', 'busy', 'busy', 'busy', 'available', 'available', 'booked', 'available', 'busy', 'available', 'available']\n      }, {\n        date: '2024-04-05',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'busy', 'busy', 'available', 'booked', 'booked', 'busy', 'booked']\n      }, {\n        date: '2024-04-06',\n        availability: ['available', 'busy', 'booked', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'available']\n      }, {\n        date: '2024-04-07',\n        availability: ['busy', 'booked', 'booked', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'booked']\n      }]\n    }]\n  }, {\n    id: 2,\n    name: 'SHwentJwins',\n    doctors: [{\n      id: 3,\n      name: 'Dr. Michael Brown',\n      specialty: 'Pediatrician',\n      schedule: [{\n        date: '2024-04-01',\n        availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available']\n      }, {\n        date: '2024-04-02',\n        availability: ['booked', 'busy', 'available', 'busy', 'available', 'busy', 'busy', 'available', 'booked', 'booked', 'booked', 'booked']\n      }, {\n        date: '2024-04-03',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'available']\n      }, {\n        date: '2024-04-04',\n        availability: ['available', 'available', 'busy', 'busy', 'busy', 'available', 'available', 'booked', 'available', 'busy', 'available', 'available']\n      }, {\n        date: '2024-04-05',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'busy', 'busy', 'available', 'booked', 'booked', 'busy', 'booked']\n      }, {\n        date: '2024-04-06',\n        availability: ['available', 'busy', 'booked', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'available']\n      }, {\n        date: '2024-04-07',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'booked']\n      }]\n    }\n    // Add more doctors for Hospital B if needed\n    ]\n  }\n  // Add more hospitals if needed\n  ];\n  const filteredHospitals = hospitals.filter(hospital => hospital.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  const handleViewDoctors = hospitalId => {\n    setSelectedHospital(hospitalId);\n    setSelectedDoctor(null);\n    setIsScheduleCollapsed(false);\n    setIsAppointmentBooked(false); // Reset appointment status\n  };\n  const handleViewSchedule = doctorId => {\n    setSelectedDoctor(doctorId);\n    setIsBookingMode(false);\n    setIsScheduleCollapsed(true);\n    setIsAppointmentBooked(false); // Reset appointment status\n  };\n  const handleCellClick = (date, index) => {\n    if (isBookingMode) {\n      const selectedHospitalData = hospitals.find(hospital => hospital.id === selectedHospital);\n      if (selectedHospitalData) {\n        const selectedDoctorData = selectedHospitalData.doctors.find(doctor => doctor.id === selectedDoctor);\n        if (selectedDoctorData) {\n          var _selectedDoctorData$s;\n          const isGreen = ((_selectedDoctorData$s = selectedDoctorData.schedule.find(day => day.date === date)) === null || _selectedDoctorData$s === void 0 ? void 0 : _selectedDoctorData$s.availability[index]) === 'available';\n          if (isGreen && !lockedSlots.includes(`${date}_${index}`)) {\n            setSelectedSlot({\n              date,\n              index\n            });\n          }\n        }\n      }\n    }\n  };\n  const handleLockSlot = () => {\n    if (selectedSlot) {\n      const slotKey = `${selectedSlot.date}_${selectedSlot.index}`;\n      setLockedSlots([...lockedSlots, slotKey]);\n      setSelectedSlot(null);\n    }\n  };\n  const handleBookAppointment = () => {\n    // Add your appointment booking logic here\n    setIsAppointmentBooked(true);\n    setIsBookingMode(false);\n  };\n  const handleToggleBookingMode = () => {\n    setIsBookingMode(!isBookingMode);\n    setSelectedSlot(null);\n    setIsAppointmentBooked(false); // Reset appointment status\n  };\n  const renderAvailability = (availability, date) => {\n    return availability.map((slot, index) => {\n      let className = '';\n      switch (slot) {\n        case 'available':\n          className = 'available-new';\n          break;\n        case 'booked':\n          className = 'booked-new';\n          break;\n        case 'busy':\n          className = 'busy-new';\n          break;\n        default:\n          className = '';\n      }\n      const slotKey = `${date}_${index}`;\n      const isLocked = lockedSlots.includes(slotKey);\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: isBookingMode && slot === 'available' && !isLocked ? 'available-new clickable' : className,\n        onClick: () => handleCellClick(date, index),\n        children: [isBookingMode && slot === 'available' && !isLocked && selectedSlot && selectedSlot.date === date && selectedSlot.index === index && 'Selected', isLocked && 'Locked']\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const isDoctorBusy = doctor => {\n    return doctor.schedule.some(day => day.availability.includes('busy'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-list-container-new\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by Hospital...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Available Hospitals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredHospitals.map((hospital, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: hospital.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), selectedHospital === hospital.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Doctors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: hospital.doctors.map((doctor, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: doctor.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: doctor.specialty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 23\n              }, this), selectedDoctor === doctor.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"availability-table-new\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '150px'\n                        },\n                        children: \"Date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 33\n                      }, this), Array.from({\n                        length: 12\n                      }, (_, i) => i + 8).map(hour => /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: [hour, \":00 - \", hour + 1, \":00\"]\n                      }, hour, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 35\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: doctor.schedule.map((day, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: day.date\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 35\n                      }, this), renderAvailability(day.availability, day.date)]\n                    }, idx, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 27\n                }, this), isBookingMode && selectedSlot && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"doc-list-wala-button-new\",\n                    onClick: handleBookAppointment,\n                    children: \"Book Appointment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"doc-list-wala-button-new\",\n                    onClick: handleLockSlot,\n                    children: \"Lock Slot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true), isAppointmentBooked && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Appointment booked successfully!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true), selectedDoctor !== doctor.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: isDoctorBusy(doctor) ? 'doc-list-wala-button-new busy-new' : 'doc-list-wala-button-new',\n                onClick: () => handleViewSchedule(doctor.id),\n                children: \"View Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 23\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), selectedHospital !== hospital.id && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"doc-list-wala-button-new\",\n          onClick: () => handleViewDoctors(hospital.id),\n          children: \"View Doctors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorList, \"Sb6NZq9BblJjZAx+4OrhtRIvwjg=\");\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorList","_s","searchTerm","setSearchTerm","selectedHospital","setSelectedHospital","selectedDoctor","setSelectedDoctor","isBookingMode","setIsBookingMode","selectedSlot","setSelectedSlot","lockedSlots","setLockedSlots","isScheduleCollapsed","setIsScheduleCollapsed","isAppointmentBooked","setIsAppointmentBooked","hospitals","id","name","doctors","specialty","schedule","date","availability","filteredHospitals","filter","hospital","toLowerCase","includes","handleViewDoctors","hospitalId","handleViewSchedule","doctorId","handleCellClick","index","selectedHospitalData","find","selectedDoctorData","doctor","_selectedDoctorData$s","isGreen","day","handleLockSlot","slotKey","handleBookAppointment","handleToggleBookingMode","renderAvailability","map","slot","className","isLocked","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","isDoctorBusy","some","type","placeholder","value","onChange","e","target","style","textAlign","idx","width","Array","from","length","_","i","hour","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Patient/DoctorList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './../../css/Patient/DoctorList.css';\r\n\r\nfunction DoctorList() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedHospital, setSelectedHospital] = useState(null);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n  const [isBookingMode, setIsBookingMode] = useState(false);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [lockedSlots, setLockedSlots] = useState([]);\r\n  const [isScheduleCollapsed, setIsScheduleCollapsed] = useState(false);\r\n  const [isAppointmentBooked, setIsAppointmentBooked] = useState(false);\r\n\r\n  const hospitals = [\r\n    {\r\n      id: 1,\r\n      name: 'Khavyhesri',\r\n      doctors: [\r\n        {\r\n          id: 1,\r\n          name: 'Dr. John Doe',\r\n          specialty: 'Cardiologist',\r\n          schedule: [\r\n            { date: '2024-04-01', availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available'] },\r\n            { date: '2024-04-02', availability: ['booked','busy','available','busy','available','busy','busy','available','booked','booked','booked','booked'] },\r\n            { date: '2024-04-03', availability: ['busy','booked','available','busy','available','available','busy','booked','available','available','busy','available'] },\r\n            { date: '2024-04-04', availability: ['available','available','busy','busy','busy','available','available','booked','available','busy','available','available'] },\r\n            { date: '2024-04-05', availability: ['busy','booked','available','busy','available','busy','busy','available','booked','booked','busy','booked'] },\r\n            { date: '2024-04-06', availability: ['available','busy','booked','busy','available','available','busy','booked','available','available','busy','available'] },\r\n            { date: '2024-04-07', availability: ['busy','booked','available','busy','available','available','busy','booked','available','available','busy','booked'] }\r\n          ]\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Dr. Jane Smith',\r\n          specialty: 'Dermatologist',\r\n          schedule: [\r\n            { date: '2024-04-01', availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available'] },\r\n            { date: '2024-04-02', availability: ['booked','busy','available','busy','available','busy','busy','available','booked','booked','booked','booked'] },\r\n            { date: '2024-04-03', availability: ['busy','booked','available','busy','available','available','busy','booked','available','available','busy','available'] },\r\n            { date: '2024-04-04', availability: ['available','available','busy','busy','busy','available','available','booked','available','busy','available','available'] },\r\n            { date: '2024-04-05', availability: ['busy','booked','available','busy','available','busy','busy','available','booked','booked','busy','booked'] },\r\n            { date: '2024-04-06', availability: ['available','busy','booked','busy','available','available','busy','booked','available','available','busy','available'] },\r\n            { date: '2024-04-07', availability: ['busy','booked','booked','busy','available','available','busy','booked','available','available','busy','booked'] }\r\n          ]\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'SHwentJwins',\r\n      doctors: [\r\n        {\r\n          id: 3,\r\n          name: 'Dr. Michael Brown',\r\n          specialty: 'Pediatrician',\r\n          schedule: [\r\n            { date: '2024-04-01', availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available'] },\r\n            { date: '2024-04-02', availability: ['booked','busy','available','busy','available','busy','busy','available','booked','booked','booked','booked'] },\r\n            { date: '2024-04-03', availability: ['busy','booked','available','busy','available','available','busy','booked','available','available','busy','available'] },\r\n            { date: '2024-04-04', availability: ['available','available','busy','busy','busy','available','available','booked','available','busy','available','available'] },\r\n            { date: '2024-04-05', availability: ['busy','booked','available','busy','available','busy','busy','available','booked','booked','busy','booked'] },\r\n            { date: '2024-04-06', availability: ['available','busy','booked','busy','available','available','busy','booked','available','available','busy','available'] },\r\n            { date: '2024-04-07', availability: ['busy','booked','available','busy','available','available','busy','booked','available','available','busy','booked'] }\r\n          ]\r\n        },\r\n        // Add more doctors for Hospital B if needed\r\n      ]\r\n    },\r\n    // Add more hospitals if needed\r\n  ];\r\n\r\n  const filteredHospitals = hospitals.filter((hospital) =>\r\n    hospital.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleViewDoctors = (hospitalId) => {\r\n    setSelectedHospital(hospitalId);\r\n    setSelectedDoctor(null);\r\n    setIsScheduleCollapsed(false);\r\n    setIsAppointmentBooked(false); // Reset appointment status\r\n  };\r\n\r\n  const handleViewSchedule = (doctorId) => {\r\n    setSelectedDoctor(doctorId);\r\n    setIsBookingMode(false);\r\n    setIsScheduleCollapsed(true);\r\n    setIsAppointmentBooked(false); // Reset appointment status\r\n  };\r\n  \r\n  const handleCellClick = (date, index) => {\r\n    if (isBookingMode) {\r\n      const selectedHospitalData = hospitals.find(hospital => hospital.id === selectedHospital);\r\n      if (selectedHospitalData) {\r\n        const selectedDoctorData = selectedHospitalData.doctors.find(doctor => doctor.id === selectedDoctor);\r\n        if (selectedDoctorData) {\r\n          const isGreen = selectedDoctorData.schedule.find(day => day.date === date)?.availability[index] === 'available';\r\n          if (isGreen && !lockedSlots.includes(`${date}_${index}`)) {\r\n            setSelectedSlot({ date, index });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  \r\n  const handleLockSlot = () => {\r\n    if (selectedSlot) {\r\n      const slotKey = `${selectedSlot.date}_${selectedSlot.index}`;\r\n      setLockedSlots([...lockedSlots, slotKey]);\r\n      setSelectedSlot(null);\r\n    }\r\n  };\r\n\r\n  const handleBookAppointment = () => {\r\n    // Add your appointment booking logic here\r\n    setIsAppointmentBooked(true);\r\n    setIsBookingMode(false);\r\n  };\r\n\r\n  const handleToggleBookingMode = () => {\r\n    setIsBookingMode(!isBookingMode);\r\n    setSelectedSlot(null);\r\n    setIsAppointmentBooked(false); // Reset appointment status\r\n  };\r\n  \r\n  const renderAvailability = (availability, date) => {\r\n    return availability.map((slot, index) => {\r\n      let className = '';\r\n      switch (slot) {\r\n        case 'available':\r\n          className = 'available-new';\r\n          break;\r\n        case 'booked':\r\n          className = 'booked-new';\r\n          break;\r\n        case 'busy':\r\n          className = 'busy-new';\r\n          break;\r\n        default:\r\n          className = '';\r\n      }\r\n      const slotKey = `${date}_${index}`;\r\n      const isLocked = lockedSlots.includes(slotKey);\r\n      return (\r\n        <td\r\n          key={index}\r\n          className={isBookingMode && slot === 'available' && !isLocked ? 'available-new clickable' : className}\r\n          onClick={() => handleCellClick(date, index)}\r\n        >\r\n          {isBookingMode && slot === 'available' && !isLocked && selectedSlot && selectedSlot.date === date && selectedSlot.index === index && 'Selected'}\r\n          {isLocked && 'Locked'}\r\n        </td>\r\n      );\r\n    });\r\n  };\r\n  \r\n  const isDoctorBusy = (doctor) => {\r\n    return doctor.schedule.some(day => day.availability.includes('busy'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"doctor-list-container-new\">\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by Hospital...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n      </div>\r\n      <h2 style={{textAlign: 'center'}}>Available Hospitals</h2>\r\n      <ul>\r\n        {filteredHospitals.map((hospital, index) => (\r\n          <li key={index}>\r\n            <h3>{hospital.name}</h3>\r\n            {selectedHospital === hospital.id && (\r\n              <>\r\n                <h4>Doctors:</h4>\r\n                <ul>\r\n                  {hospital.doctors.map((doctor, idx) => (\r\n                    <li key={idx}>\r\n                      <h5>{doctor.name}</h5>\r\n                      <p>{doctor.specialty}</p>\r\n                      {selectedDoctor === doctor.id && (\r\n                        <>\r\n                          <table className=\"availability-table-new\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th style={{ width: '150px' }}>Date</th> \r\n                                {Array.from({ length: 12 }, (_, i) => i + 8).map((hour) => (\r\n                                  <th key={hour}>{hour}:00 - {hour + 1}:00</th>\r\n                                ))}\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {doctor.schedule.map((day, idx) => (\r\n                                <tr key={idx}>\r\n                                  <td>{day.date}</td>\r\n                                  {renderAvailability(day.availability, day.date)}\r\n                                </tr>\r\n                              ))}\r\n                            </tbody>\r\n                          </table>\r\n                          {isBookingMode && selectedSlot && (\r\n                            <>\r\n                              <button className=\"doc-list-wala-button-new\" onClick={handleBookAppointment}>\r\n                                Book Appointment\r\n                              </button>\r\n                              <button className=\"doc-list-wala-button-new\" onClick={handleLockSlot}>\r\n                                Lock Slot\r\n                              </button>\r\n                            </>\r\n                          )}\r\n                          {isAppointmentBooked && (\r\n                            <p>Appointment booked successfully!</p>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                      {selectedDoctor !== doctor.id && (\r\n                        <button className={isDoctorBusy(doctor) ? 'doc-list-wala-button-new busy-new' : 'doc-list-wala-button-new'} onClick={() => handleViewSchedule(doctor.id)}>\r\n                          View Schedule\r\n                        </button>\r\n                      )}\r\n                      <br />\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </>\r\n            )}\r\n            {selectedHospital !== hospital.id && (\r\n              <button className=\"doc-list-wala-button-new\" onClick={() => handleViewDoctors(hospital.id)}>\r\n                View Doctors\r\n              </button>\r\n            )}\r\n            <br />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default DoctorList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}