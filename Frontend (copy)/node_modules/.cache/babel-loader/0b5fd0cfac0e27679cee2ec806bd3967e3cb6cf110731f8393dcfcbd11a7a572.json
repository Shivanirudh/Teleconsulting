{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/uploadschedule.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadSchedule() {\n  _s();\n  // Define dummy schedule data\n  const dummySchedule = {\n    \"slots\": [[2024, 4, 5, 11, 15], [2024, 4, 6, 15, 45], [2024, 4, 7, 15, 0], [2024, 4, 6, 15, 45], [2024, 4, 5, 15, 0]],\n    \"appointments\": [{\n      id: 1,\n      date: [2024, 4, 5],\n      time: '09:00',\n      patientName: 'John Doe'\n    }, {\n      id: 2,\n      date: [2024, 4, 6],\n      time: '10:30',\n      patientName: 'somebody someone'\n    }, {\n      id: 3,\n      date: [2024, 4, 7],\n      time: '11:15',\n      patientName: 'Alice Smith'\n    }, {\n      id: 4,\n      date: [2024, 4, 8],\n      time: '12:00',\n      patientName: 'Bob Johnson'\n    }, {\n      id: 5,\n      date: [2024, 4, 6],\n      time: '09:00',\n      patientName: 'John Doe'\n    }]\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState(dummySchedule);\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability)\n  const handleCellClick = (dateIndex, timeIndex) => {\n    // Handle cell click logic here\n  };\n\n  // Function to generate time slots\n  const generateTimeSlots = () => {\n    const timeSlots = [];\n    let hour = 9;\n    let minute = 0;\n    for (let i = 0; i < 10; i++) {\n      timeSlots.push(`${hour}:${minute === 0 ? '00' : minute}`);\n      minute += 45;\n      if (minute >= 60) {\n        hour++;\n        minute -= 60;\n      }\n    }\n    return timeSlots;\n  };\n  const generateScheduleRows = () => {\n    const timeSlots = generateTimeSlots();\n    return schedule.slots.map((slot, dateIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"row\",\n        children: `${slot[0]}-${slot[1]}-${slot[2]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), timeSlots.map((timeSlot, timeIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n        className: getClassForAvailability(slot, timeIndex),\n        onClick: () => handleCellClick(dateIndex, timeIndex)\n      }, `${slot.join('-')}-${timeSlot}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))]\n    }, slot.join('-'), true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Function to get CSS class for cell based on availability\n  const getClassForAvailability = (slot, timeIndex) => {\n    const dateTime = [...slot.slice(0, 3), ...slot.slice(3, 5)];\n    const matchingAppointment = schedule.appointments.find(appointment => JSON.stringify(appointment.date) === JSON.stringify(dateTime) && appointment.time === generateTimeSlots()[timeIndex]);\n    if (matchingAppointment) {\n      return 'table-danger bg-danger text-dark';\n    } else {\n      return 'table-success bg-success text-white';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"This week's Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered custom-box khus\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), generateTimeSlots().map(timeSlot => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: timeSlot\n              }, timeSlot, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: generateScheduleRows()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary custom-button\",\n          onClick: handleEdit,\n          children: isEditing ? 'Cancel Edit' : 'Edit Schedule'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary custom-button\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSchedule, \"HnBUwui1TutBLgBfTTjWdpB6B8M=\");\n_c = UploadSchedule;\nvar _c;\n$RefreshReg$(_c, \"UploadSchedule\");","map":{"version":3,"names":["React","useState","useEffect","SideNavbar","Navbar","jsxDEV","_jsxDEV","UploadSchedule","_s","dummySchedule","id","date","time","patientName","schedule","setSchedule","isEditing","setIsEditing","handleEdit","handleCellClick","dateIndex","timeIndex","generateTimeSlots","timeSlots","hour","minute","i","push","generateScheduleRows","slots","map","slot","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","timeSlot","className","getClassForAvailability","onClick","join","dateTime","slice","matchingAppointment","appointments","find","appointment","JSON","stringify","type","handleSubmit","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/uploadschedule.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\n\nexport default function UploadSchedule() {\n  // Define dummy schedule data\n  const dummySchedule = {\n    \"slots\": [\n      [2024, 4, 5, 11, 15],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 7, 15, 0],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 5, 15, 0]\n    ],\n    \"appointments\": [\n      { id:1, date: [2024, 4, 5], time: '09:00', patientName: 'John Doe' },\n      { id:2, date: [2024, 4, 6], time: '10:30', patientName: 'somebody someone' },\n      { id:3, date: [2024, 4, 7], time: '11:15', patientName: 'Alice Smith' },\n      { id:4, date: [2024, 4, 8], time: '12:00', patientName: 'Bob Johnson' },\n      { id:5, date: [2024, 4, 6], time: '09:00', patientName: 'John Doe' }\n    ]\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState(dummySchedule);\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability)\n  const handleCellClick = (dateIndex, timeIndex) => {\n    // Handle cell click logic here\n  };\n\n  // Function to generate time slots\n  const generateTimeSlots = () => {\n    const timeSlots = [];\n    let hour = 9;\n    let minute = 0;\n    for (let i = 0; i < 10; i++) {\n      timeSlots.push(`${hour}:${minute === 0 ? '00' : minute}`);\n      minute += 45;\n      if (minute >= 60) {\n        hour++;\n        minute -= 60;\n      }\n    }\n    return timeSlots;\n  };\n\n  const generateScheduleRows = () => {\n    const timeSlots = generateTimeSlots();\n    return schedule.slots.map((slot, dateIndex) => (\n      <tr key={slot.join('-')}>\n        <th scope=\"row\">{`${slot[0]}-${slot[1]}-${slot[2]}`}</th>\n        {timeSlots.map((timeSlot, timeIndex) => (\n          <td\n            key={`${slot.join('-')}-${timeSlot}`}\n            className={getClassForAvailability(slot, timeIndex)}\n            onClick={() => handleCellClick(dateIndex, timeIndex)}\n          ></td>\n        ))}\n      </tr>\n    ));\n  };\n\n  // Function to get CSS class for cell based on availability\n  const getClassForAvailability = (slot, timeIndex) => {\n    const dateTime = [...slot.slice(0, 3), ...slot.slice(3, 5)];\n    const matchingAppointment = schedule.appointments.find(appointment =>\n      JSON.stringify(appointment.date) === JSON.stringify(dateTime) && appointment.time === generateTimeSlots()[timeIndex]\n    );\n    if (matchingAppointment) {\n      return 'table-danger bg-danger text-dark';\n    } else {\n      return 'table-success bg-success text-white';\n    }\n  };\n\n  return (\n    <div className='dashboard-container'>\n      <Navbar />\n      <div className= 'dashboard-content'>\n        <SideNavbar />\n        <div className=\"main-content\">\n          <h2>This week's Schedule</h2>\n          <table className=\"table table-bordered custom-box khus\">\n            <thead>\n              <tr>\n                <th></th>\n                {generateTimeSlots().map(timeSlot => (\n                  <th key={timeSlot}>{timeSlot}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {generateScheduleRows()}\n            </tbody>\n          </table>\n\n          <button type=\"button\" className=\"btn btn-primary custom-button\" onClick={handleEdit}>\n            {isEditing ? 'Cancel Edit' : 'Edit Schedule'}\n          </button>\n          {isEditing && (\n            <button type=\"button\" className=\"btn btn-primary custom-button\" onClick={handleSubmit}>\n              Submit\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}