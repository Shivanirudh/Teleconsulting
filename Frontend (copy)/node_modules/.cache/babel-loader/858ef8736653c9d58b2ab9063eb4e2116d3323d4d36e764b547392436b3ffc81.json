{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/src/Pages/uploadschedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAYS = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'];\nconst TIME_SLOTS = ['9:00 AM', '10:00 AM', '11:00 AM', '1:00 PM', '2:00 PM', '3:00 PM'];\nexport default function UploadSchedule() {\n  _s();\n  // Dummy schedule data (replace with your data source)\n  const initialSchedule = {\n    // Map days (e.g., 'Mon') to an array of booleans representing availability for each time slot\n    Mon: [true, false, true, true, false, true],\n    Tue: [false, true, true, false, true, false]\n    // Add entries for other days (Wed, Thu, Fri)\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState(initialSchedule);\n\n  // State for editing mode and selected cell\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedCell, setSelectedCell] = useState(null);\n\n  // Function to toggle editing/uploading mode\n  const handleModeChange = mode => {\n    setIsEditing(mode);\n    setSelectedCell(null); // Clear selected cell on mode change\n  };\n\n  // Function to handle cell click for editing\n  const handleCellClick = (day, timeSlot) => {\n    if (isEditing) {\n      setSchedule({\n        ...schedule,\n        [day]: schedule[day].map((availability, index) => index === TIME_SLOTS.indexOf(timeSlot) ? !availability : availability)\n      });\n    }\n  };\n\n  // Function to simulate uploading the schedule (replace with actual logic)\n  const handleUpload = () => {\n    alert('Uploading schedule...');\n    // Implement logic to upload schedule data (e.g., API call)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    style: {\n      marginLeft: '250px',\n      marginTop: '56px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), TIME_SLOTS.map(timeSlot => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: timeSlot\n            }, timeSlot, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: DAYS.map(day => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), schedule[day].map((available, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: available ? 'green' : 'grey',\n              onClick: () => handleCellClick(day, TIME_SLOTS[index])\n            }, `${day}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this))]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary me-2\",\n        onClick: handleUpload,\n        children: \"Upload Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => handleModeChange(false),\n        children: \"Cancel Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), TIME_SLOTS.map(timeSlot => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: timeSlot\n            }, timeSlot, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: DAYS.map(day => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), TIME_SLOTS.map((timeSlot, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"grey\",\n              onClick: () => handleCellClick(day, timeSlot)\n            }, `${day}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this))]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success\",\n        onClick: () => handleModeChange(true),\n        children: \"Edit Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: handleUpload,\n        children: \"Upload New Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSchedule, \"g/0fjmCaaNUlR28P95AB9QvpAxM=\");\n_c = UploadSchedule;\nvar _c;\n$RefreshReg$(_c, \"UploadSchedule\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DAYS","TIME_SLOTS","UploadSchedule","_s","initialSchedule","Mon","Tue","schedule","setSchedule","isEditing","setIsEditing","selectedCell","setSelectedCell","handleModeChange","mode","handleCellClick","day","timeSlot","map","availability","index","indexOf","handleUpload","alert","className","style","marginLeft","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","available","onClick","type","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/src/Pages/uploadschedule.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst DAYS = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'];\nconst TIME_SLOTS = ['9:00 AM', '10:00 AM', '11:00 AM', '1:00 PM', '2:00 PM', '3:00 PM'];\n\nexport default function UploadSchedule() {\n  // Dummy schedule data (replace with your data source)\n  const initialSchedule = {\n    // Map days (e.g., 'Mon') to an array of booleans representing availability for each time slot\n    Mon: [true, false, true, true, false, true],\n    Tue: [false, true, true, false, true, false],\n    // Add entries for other days (Wed, Thu, Fri)\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState(initialSchedule);\n\n  // State for editing mode and selected cell\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedCell, setSelectedCell] = useState(null);\n\n  // Function to toggle editing/uploading mode\n  const handleModeChange = (mode) => {\n    setIsEditing(mode);\n    setSelectedCell(null); // Clear selected cell on mode change\n  };\n\n  // Function to handle cell click for editing\n  const handleCellClick = (day, timeSlot) => {\n    if (isEditing) {\n      setSchedule({\n        ...schedule,\n        [day]: schedule[day].map((availability, index) =>\n          index === TIME_SLOTS.indexOf(timeSlot) ? !availability : availability\n        ),\n      });\n    }\n  };\n\n  // Function to simulate uploading the schedule (replace with actual logic)\n  const handleUpload = () => {\n    alert('Uploading schedule...');\n    // Implement logic to upload schedule data (e.g., API call)\n  };\n\n  return (\n    <div className=\"container mt-4\" style={{ marginLeft: '250px', marginTop: '56px' }}>\n      <h2>Upload Schedule</h2>\n\n      {isEditing ? (\n        <div>\n          {/* Edit mode: Display calendar-like table */}\n          <table>\n            <thead>\n              <tr>\n                <th></th>\n                {TIME_SLOTS.map((timeSlot) => (\n                  <th key={timeSlot}>{timeSlot}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {DAYS.map((day) => (\n                <tr key={day}>\n                  <td>{day}</td>\n                  {schedule[day].map((available, index) => (\n                    <td\n                      key={`${day}-${index}`}\n                      className={available ? 'green' : 'grey'}\n                      onClick={() => handleCellClick(day, TIME_SLOTS[index])}\n                    ></td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <button type=\"button\" className=\"btn btn-primary me-2\" onClick={handleUpload}>\n            Upload Schedule\n          </button>\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => handleModeChange(false)}>\n            Cancel Edit\n          </button>\n        </div>\n      ) : (\n        <div>\n          {/* Upload mode: Display calendar-like table with all cells grey */}\n          <table>\n            <thead>\n              <tr>\n                <th></th>\n                {TIME_SLOTS.map((timeSlot) => (\n                  <th key={timeSlot}>{timeSlot}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {DAYS.map((day) => (\n                <tr key={day}>\n                  <td>{day}</td>\n                  {TIME_SLOTS.map((timeSlot, index) => (\n                    <td\n                      key={`${day}-${index}`}\n                      className=\"grey\"\n                      onClick={() => handleCellClick(day, timeSlot)}\n                    ></td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <button type=\"button\" className=\"btn btn-success\" onClick={() => handleModeChange(true)}>\n            Edit Schedule\n          </button>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={handleUpload}>\n            Upload New Schedule\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}