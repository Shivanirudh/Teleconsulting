{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/uploadschedule.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadSchedule() {\n  _s();\n  // Define dummy schedule data\n  const dummySchedule = {\n    \"slots\": [[2024, 4, 5, 11, 15], [2024, 4, 6, 15, 45], [2024, 4, 7, 15, 0], [2024, 4, 6, 15, 45], [2024, 4, 5, 15, 0]],\n    \"appointments\": [{\n      id: 1,\n      date: '2024,4,5',\n      time: '09:00',\n      patientName: 'John Doe'\n    }, {\n      id: 2,\n      date: '2024,4,6',\n      time: '10:30',\n      patientName: 'somebody someone'\n    }, {\n      id: 3,\n      date: '2024,4,7',\n      time: '11:15',\n      patientName: 'Alice Smith'\n    }, {\n      id: 5,\n      date: '2024,4,6',\n      time: '09:00',\n      patientName: 'John Doe'\n    }]\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState([]);\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    // Initialize schedule with dummy data\n    setSchedule(dummySchedule);\n  }, []);\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability)\n  const handleCellClick = (date, time) => {\n    if (isEditing) {\n      // Handle toggling availability or booking appointments if needed\n    }\n  };\n  const generateScheduleRows = () => {\n    const rows = [];\n    const uniqueDates = [...new Set(dummySchedule.slots.map(slot => slot.slice(0, 3).join('-')))];\n    uniqueDates.forEach(date => {\n      const dateParts = date.split('-').map(Number);\n      const appointmentsForDate = dummySchedule.appointments.filter(appointment => appointment.date === date);\n      rows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"row\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), Array.from({\n          length: 10\n        }, (_, i) => {\n          const time = `0${9 + i}`.slice(-2) + ':00';\n          const isBooked = appointmentsForDate.some(appointment => appointment.time === time);\n          const isAvailable = dummySchedule.slots.some(slot => {\n            const [year, month, day, hour, minute] = slot;\n            return year === dateParts[0] && month === dateParts[1] && day === dateParts[2] && hour === 9 + i && minute === 0;\n          });\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            className: isBooked ? 'table-danger bg-danger text-dark' : isAvailable ? 'table-success bg-success text-white' : 'table-secondary bg-secondary text-white',\n            onClick: () => handleCellClick(date, time)\n          }, `${date}-${time}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        })]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this));\n    });\n    return rows;\n  };\n  // Function to simulate saving the schedule (replace with actual logic)\n  const handleSubmit = async () => {\n    alert('Saving schedule...');\n\n    // Replace with your actual saving logic (e.g., API call)\n    // This example simulates a successful save after 2 seconds\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    setIsEditing(false); // Reset edit mode after successful save\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"This week's Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered custom-box khus\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), schedule.slots.map(slot => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: `${slot[3]}:${slot[4] === 0 ? '00' : slot[4]}`\n              }, `${slot[0]}-${slot[1]}-${slot[2]}-${slot[3]}-${slot[4]}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: generateScheduleRows()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary custom-button\",\n          onClick: handleEdit,\n          children: isEditing ? 'Cancel Edit' : 'Edit Schedule'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary custom-button\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSchedule, \"++4b96eULKbdgzoKDSJcjB7i644=\");\n_c = UploadSchedule;\nvar _c;\n$RefreshReg$(_c, \"UploadSchedule\");","map":{"version":3,"names":["React","useState","useEffect","SideNavbar","Navbar","jsxDEV","_jsxDEV","UploadSchedule","_s","dummySchedule","id","date","time","patientName","schedule","setSchedule","isEditing","setIsEditing","handleEdit","handleCellClick","generateScheduleRows","rows","uniqueDates","Set","slots","map","slot","slice","join","forEach","dateParts","split","Number","appointmentsForDate","appointments","filter","appointment","push","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","i","isBooked","some","isAvailable","year","month","day","hour","minute","className","onClick","handleSubmit","alert","Promise","resolve","setTimeout","type","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/uploadschedule.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\n\nexport default function UploadSchedule() {\n  // Define dummy schedule data\n  const dummySchedule = {\n    \"slots\": [\n      [2024, 4, 5, 11, 15],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 7, 15, 0],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 5, 15, 0]\n    ],\n    \"appointments\": [\n      { id: 1, date: '2024,4,5', time: '09:00', patientName: 'John Doe' },\n      { id: 2, date: '2024,4,6', time: '10:30', patientName: 'somebody someone' },\n      { id: 3, date: '2024,4,7', time: '11:15', patientName: 'Alice Smith' },\n      { id: 5, date: '2024,4,6', time: '09:00', patientName: 'John Doe' },\n    ]\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState([]);\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    // Initialize schedule with dummy data\n    setSchedule(dummySchedule);\n  }, []);\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability)\n  const handleCellClick = (date, time) => {\n    if (isEditing) {\n      // Handle toggling availability or booking appointments if needed\n    }\n  };\n\n  const generateScheduleRows = () => {\n    const rows = [];\n    const uniqueDates = [...new Set(dummySchedule.slots.map(slot => slot.slice(0, 3).join('-')))];\n\n    uniqueDates.forEach(date => {\n      const dateParts = date.split('-').map(Number);\n      const appointmentsForDate = dummySchedule.appointments.filter(appointment => appointment.date === date);\n\n      rows.push(\n        <tr key={date}>\n          <th scope=\"row\">{date}</th>\n          {Array.from({ length: 10 }, (_, i) => {\n            const time = `0${9 + i}`.slice(-2) + ':00';\n            const isBooked = appointmentsForDate.some(appointment => appointment.time === time);\n            const isAvailable = dummySchedule.slots.some(slot => {\n              const [year, month, day, hour, minute] = slot;\n              return year === dateParts[0] && month === dateParts[1] && day === dateParts[2] && hour === 9 + i && minute === 0;\n            });\n\n            return (\n              <td\n                key={`${date}-${time}`}\n                className={isBooked ? 'table-danger bg-danger text-dark' : isAvailable ? 'table-success bg-success text-white' : 'table-secondary bg-secondary text-white'}\n                onClick={() => handleCellClick(date, time)}\n              ></td>\n            );\n          })}\n        </tr>\n      );\n    });\n\n    return rows;\n  };\n  // Function to simulate saving the schedule (replace with actual logic)\n  const handleSubmit = async () => {\n    alert('Saving schedule...');\n\n    // Replace with your actual saving logic (e.g., API call)\n    // This example simulates a successful save after 2 seconds\n    await new Promise((resolve) => setTimeout(resolve, 2000));\n\n    setIsEditing(false); // Reset edit mode after successful save\n  };\n\n  return (\n    <div className='dashboard-container'>\n      <Navbar />\n      <div className='dashboard-content'>\n        <SideNavbar />\n        <div className=\"main-content\">\n          <h2>This week's Schedule</h2>\n          <table className=\"table table-bordered custom-box khus\">\n            <thead>\n              <tr>\n                <th></th>\n                {schedule.slots.map(slot => (\n                  <th key={`${slot[0]}-${slot[1]}-${slot[2]}-${slot[3]}-${slot[4]}`}>\n                    {`${slot[3]}:${slot[4] === 0 ? '00' : slot[4]}`}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {generateScheduleRows()}\n            </tbody>\n          </table>\n\n          <button type=\"button\" className=\"btn btn-primary custom-button\" onClick={handleEdit}>\n            {isEditing ? 'Cancel Edit' : 'Edit Schedule'}\n          </button>\n          {isEditing ? (\n            <button type=\"button\" className=\"btn btn-primary custom-button\" onClick={handleSubmit}>\n              Submit\n            </button>\n          ) : (\n            <div/>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}