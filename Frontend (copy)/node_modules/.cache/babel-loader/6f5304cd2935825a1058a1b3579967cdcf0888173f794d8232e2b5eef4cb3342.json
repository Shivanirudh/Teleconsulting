{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/Ddashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadSchedule() {\n  _s();\n  // Function to generate time slots with 45-minute intervals\n  const generateTimeSlots = () => {\n    const startTime = 9 * 60; // 9:00 AM in minutes\n    const endTime = 17 * 60 + 15; // 5:15 PM in minutes\n    const interval = 45; // 45 minutes interval\n    const timeSlots = [];\n    for (let i = startTime; i <= endTime; i += interval) {\n      const hours = Math.floor(i / 60);\n      const minutes = i % 60;\n      const formattedTime = `${hours < 10 ? '0' : ''}${hours}:${minutes === 0 ? '00' : minutes}`;\n      timeSlots.push(formattedTime);\n    }\n    return timeSlots;\n  };\n\n  // Dummy schedule data (replace with your actual data source)\n  const dummySchedule = {\n    \"slots\": [[2024, 4, 5, 11, 15], [2024, 4, 6, 15, 45], [2024, 4, 7, 15, 0], [2024, 4, 6, 15, 45], [2024, 4, 5, 15, 0]],\n    \"appointments\": [{\n      id: 1,\n      datetime: [2024, 4, 5, 9, 0],\n      patientName: 'John Doe'\n    }, {\n      id: 2,\n      datetime: [2024, 4, 6, 10, 30],\n      patientName: 'somebody someone'\n    }, {\n      id: 3,\n      datetime: [2024, 4, 7, 11, 15],\n      patientName: 'Alice Smith'\n    }, {\n      id: 5,\n      datetime: [2024, 4, 6, 9, 0],\n      patientName: 'John Doe'\n    }]\n  };\n  const initialSchedule = () => {\n    const today = new Date();\n    const next7Days = Array.from({\n      length: 7\n    }, (_, index) => {\n      const date = new Date(today);\n      date.setDate(date.getDate() + index);\n      return date.toLocaleDateString('en-US');\n    });\n    const timeSlots = generateTimeSlots();\n    const schedule = next7Days.reduce((acc, date) => {\n      acc[date] = timeSlots.reduce((acc2, time) => {\n        acc2[time] = false; // All slots initially unavailable\n        return acc2;\n      }, {});\n      return acc;\n    }, {});\n    dummySchedule.slots.forEach(slot => {\n      const [year, month, day, hour, minute] = slot;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = true; // Set slot to available\n      }\n    });\n    dummySchedule.appointments.forEach(appointment => {\n      const [year, month, day, hour, minute] = appointment.datetime;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = {\n          ...appointment,\n          type: 'appointment'\n        }; // Set appointment slot\n      }\n    });\n    return schedule;\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState(initialSchedule());\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n\n  // State for displaying appointment details\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability or show appointment details)\n  const handleCellClick = appointment => {\n    if (!isEditing && appointment) {\n      setSelectedAppointment(appointment);\n    } else if (isEditing) {\n      // Handle editing if needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"This week's Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered custom-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), generateTimeSlots().map(time => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: time\n              }, time, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(schedule).map(([date, timeslots]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), Object.entries(timeslots).map(([time, availability]) => /*#__PURE__*/_jsxDEV(\"td\", {\n                className: availability === true ? 'table-success bg-success text-white' : availability && availability.type === 'appointment' ? 'table-danger' : 'table-secondary',\n                children: availability && availability.type === 'appointment' ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => handleCellClick(availability),\n                  children: \"Appointment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 25\n                }, this) : isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary\",\n                  onClick: () => handleCellClick(),\n                  children: \"Set Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 27\n                }, this) : time\n              }, `${date}-${time}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this))]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary custom-button\",\n          onClick: handleEdit,\n          children: isEditing ? 'Cancel Edit' : 'Edit Schedule'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), selectedAppointment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: () => setSelectedAppointment(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Appointment Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", selectedAppointment.datetime.slice(0, 3).join('/')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", selectedAppointment.datetime.slice(3).join(':')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Patient Name: \", selectedAppointment.patientName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Join Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          children: \"View Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSchedule, \"T8z5vB/hFtjT0/kmcxABOGwB8TE=\");\n_c = UploadSchedule;\nvar _c;\n$RefreshReg$(_c, \"UploadSchedule\");","map":{"version":3,"names":["React","useState","useEffect","SideNavbar","Navbar","jsxDEV","_jsxDEV","UploadSchedule","_s","generateTimeSlots","startTime","endTime","interval","timeSlots","i","hours","Math","floor","minutes","formattedTime","push","dummySchedule","id","datetime","patientName","initialSchedule","today","Date","next7Days","Array","from","length","_","index","date","setDate","getDate","toLocaleDateString","schedule","reduce","acc","acc2","time","slots","forEach","slot","year","month","day","hour","minute","formattedDate","undefined","appointments","appointment","type","setSchedule","isEditing","setIsEditing","selectedAppointment","setSelectedAppointment","handleEdit","handleCellClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Object","entries","timeslots","scope","availability","onClick","slice","join","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/Ddashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\n\nexport default function UploadSchedule() {\n  // Function to generate time slots with 45-minute intervals\n  const generateTimeSlots = () => {\n    const startTime = 9 * 60; // 9:00 AM in minutes\n    const endTime = 17 * 60 + 15; // 5:15 PM in minutes\n    const interval = 45; // 45 minutes interval\n    const timeSlots = [];\n\n    for (let i = startTime; i <= endTime; i += interval) {\n      const hours = Math.floor(i / 60);\n      const minutes = i % 60;\n      const formattedTime = `${hours < 10 ? '0' : ''}${hours}:${minutes === 0 ? '00' : minutes}`;\n      timeSlots.push(formattedTime);\n    }\n\n    return timeSlots;\n  };\n\n  // Dummy schedule data (replace with your actual data source)\n  const dummySchedule = {\n    \"slots\": [\n      [2024, 4, 5, 11, 15],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 7, 15, 0],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 5, 15, 0]\n    ],\n    \"appointments\": [\n      { id: 1, datetime: [2024,4,5,9,0], patientName: 'John Doe' },\n      { id: 2, datetime: [2024,4,6,10,30], patientName: 'somebody someone' },\n      { id: 3, datetime: [2024,4,7,11,15], patientName: 'Alice Smith' },\n      { id: 5, datetime: [2024,4,6,9,0], patientName: 'John Doe' },\n    ]\n  };\n\n  const initialSchedule = () => {\n    const today = new Date();\n    const next7Days = Array.from({ length: 7 }, (_, index) => {\n      const date = new Date(today);\n      date.setDate(date.getDate() + index);\n      return date.toLocaleDateString('en-US');\n    });\n\n    const timeSlots = generateTimeSlots();\n\n    const schedule = next7Days.reduce((acc, date) => {\n      acc[date] = timeSlots.reduce((acc2, time) => {\n        acc2[time] = false; // All slots initially unavailable\n        return acc2;\n      }, {});\n      return acc;\n    }, {});\n\n    dummySchedule.slots.forEach(slot => {\n      const [year, month, day, hour, minute] = slot;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = true; // Set slot to available\n      }\n    });\n\n    dummySchedule.appointments.forEach(appointment => {\n      const [year, month, day, hour, minute] = appointment.datetime;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = { ...appointment, type: 'appointment' }; // Set appointment slot\n      }\n    });\n\n    return schedule;\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState(initialSchedule());\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n\n  // State for displaying appointment details\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability or show appointment details)\n  const handleCellClick = (appointment) => {\n    if (!isEditing && appointment) {\n      setSelectedAppointment(appointment);\n    } else if (isEditing) {\n      // Handle editing if needed\n    }\n  };\n\n  return (\n    <div className='dashboard-container'>\n      <Navbar />\n      <div className= 'dashboard-content'>\n        <SideNavbar />\n        <div className=\"main-content\">\n          <h2>This week's Schedule</h2>\n          <table className=\"table table-bordered custom-box\">\n            <thead>\n              <tr>\n                <th></th>\n                {generateTimeSlots().map(time => (\n                  <th key={time}>{time}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {Object.entries(schedule).map(([date, timeslots]) => (\n                <tr key={date}>\n                  <th scope=\"row\">{date}</th>\n                  {Object.entries(timeslots).map(([time, availability]) => (\n                    <td\n                      key={`${date}-${time}`}\n                      className={\n                        availability === true ? 'table-success bg-success text-white' :\n                        availability && availability.type === 'appointment' ? 'table-danger' :\n                        'table-secondary'\n                      }\n                    >\n                      {availability && availability.type === 'appointment' ? (\n                        <button\n                          className=\"btn btn-danger\"\n                          onClick={() => handleCellClick(availability)}\n                        >\n                          Appointment\n                        </button>\n                      ) : (\n                        isEditing ? (\n                          <button\n                            className=\"btn btn-secondary\"\n                            onClick={() => handleCellClick()}\n                          >\n                            Set Available\n                          </button>\n                        ) : (\n                          time\n                        )\n                      )}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          <button type=\"button\" className=\"btn btn-primary custom-button\" onClick={handleEdit}>\n            {isEditing ? 'Cancel Edit' : 'Edit Schedule'}\n          </button>\n        </div>\n      </div>\n\n      {/* Modal for displaying appointment details */}\n      {selectedAppointment && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={() => setSelectedAppointment(null)}>&times;</span>\n            <h2>Appointment Details</h2>\n            <p>Date: {selectedAppointment.datetime.slice(0, 3).join('/')}</p>\n            <p>Time: {selectedAppointment.datetime.slice(3).join(':')}</p>\n            <p>Patient Name: {selectedAppointment.patientName}</p>\n            <button className=\"btn btn-primary\">Join Meeting</button>\n            <button className=\"btn btn-secondary\">View Patient</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sCAAsC,CAAC,CAAC;AAC/C,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,SAAS,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;IAC1B,MAAMC,OAAO,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9B,MAAMC,QAAQ,GAAG,EAAE,CAAC,CAAC;IACrB,MAAMC,SAAS,GAAG,EAAE;IAEpB,KAAK,IAAIC,CAAC,GAAGJ,SAAS,EAAEI,CAAC,IAAIH,OAAO,EAAEG,CAAC,IAAIF,QAAQ,EAAE;MACnD,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,GAAG,EAAE,CAAC;MAChC,MAAMI,OAAO,GAAGJ,CAAC,GAAG,EAAE;MACtB,MAAMK,aAAa,GAAI,GAAEJ,KAAK,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,KAAM,IAAGG,OAAO,KAAK,CAAC,GAAG,IAAI,GAAGA,OAAQ,EAAC;MAC1FL,SAAS,CAACO,IAAI,CAACD,aAAa,CAAC;IAC/B;IAEA,OAAON,SAAS;EAClB,CAAC;;EAED;EACA,MAAMQ,aAAa,GAAG;IACpB,OAAO,EAAE,CACP,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACpB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACpB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EACnB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACpB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CACpB;IACD,cAAc,EAAE,CACd;MAAEC,EAAE,EAAE,CAAC;MAAEC,QAAQ,EAAE,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;MAAEC,WAAW,EAAE;IAAW,CAAC,EAC5D;MAAEF,EAAE,EAAE,CAAC;MAAEC,QAAQ,EAAE,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC;MAAEC,WAAW,EAAE;IAAmB,CAAC,EACtE;MAAEF,EAAE,EAAE,CAAC;MAAEC,QAAQ,EAAE,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC;MAAEC,WAAW,EAAE;IAAc,CAAC,EACjE;MAAEF,EAAE,EAAE,CAAC;MAAEC,QAAQ,EAAE,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;MAAEC,WAAW,EAAE;IAAW,CAAC;EAEhE,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACxB,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,KAAK;MACxD,MAAMC,IAAI,GAAG,IAAIP,IAAI,CAACD,KAAK,CAAC;MAC5BQ,IAAI,CAACC,OAAO,CAACD,IAAI,CAACE,OAAO,CAAC,CAAC,GAAGH,KAAK,CAAC;MACpC,OAAOC,IAAI,CAACG,kBAAkB,CAAC,OAAO,CAAC;IACzC,CAAC,CAAC;IAEF,MAAMxB,SAAS,GAAGJ,iBAAiB,CAAC,CAAC;IAErC,MAAM6B,QAAQ,GAAGV,SAAS,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEN,IAAI,KAAK;MAC/CM,GAAG,CAACN,IAAI,CAAC,GAAGrB,SAAS,CAAC0B,MAAM,CAAC,CAACE,IAAI,EAAEC,IAAI,KAAK;QAC3CD,IAAI,CAACC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;QACpB,OAAOD,IAAI;MACb,CAAC,EAAE,CAAC,CAAC,CAAC;MACN,OAAOD,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IAENnB,aAAa,CAACsB,KAAK,CAACC,OAAO,CAACC,IAAI,IAAI;MAClC,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,CAAC,GAAGL,IAAI;MAC7C,MAAMX,IAAI,GAAG,IAAIP,IAAI,CAACmB,IAAI,EAAEC,KAAK,GAAG,CAAC,EAAEC,GAAG,CAAC;MAC3C,MAAMG,aAAa,GAAGjB,IAAI,CAACG,kBAAkB,CAAC,OAAO,CAAC;MACtD,MAAMlB,aAAa,GAAI,GAAE8B,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,IAAK,IAAGC,MAAM,KAAK,CAAC,GAAG,IAAI,GAAGA,MAAO,EAAC;MACtF,IAAIZ,QAAQ,CAACa,aAAa,CAAC,IAAIb,QAAQ,CAACa,aAAa,CAAC,CAAChC,aAAa,CAAC,KAAKiC,SAAS,EAAE;QACnFd,QAAQ,CAACa,aAAa,CAAC,CAAChC,aAAa,CAAC,GAAG,IAAI,CAAC,CAAC;MACjD;IACF,CAAC,CAAC;IAEFE,aAAa,CAACgC,YAAY,CAACT,OAAO,CAACU,WAAW,IAAI;MAChD,MAAM,CAACR,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,CAAC,GAAGI,WAAW,CAAC/B,QAAQ;MAC7D,MAAMW,IAAI,GAAG,IAAIP,IAAI,CAACmB,IAAI,EAAEC,KAAK,GAAG,CAAC,EAAEC,GAAG,CAAC;MAC3C,MAAMG,aAAa,GAAGjB,IAAI,CAACG,kBAAkB,CAAC,OAAO,CAAC;MACtD,MAAMlB,aAAa,GAAI,GAAE8B,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,IAAK,IAAGC,MAAM,KAAK,CAAC,GAAG,IAAI,GAAGA,MAAO,EAAC;MACtF,IAAIZ,QAAQ,CAACa,aAAa,CAAC,IAAIb,QAAQ,CAACa,aAAa,CAAC,CAAChC,aAAa,CAAC,KAAKiC,SAAS,EAAE;QACnFd,QAAQ,CAACa,aAAa,CAAC,CAAChC,aAAa,CAAC,GAAG;UAAE,GAAGmC,WAAW;UAAEC,IAAI,EAAE;QAAc,CAAC,CAAC,CAAC;MACpF;IACF,CAAC,CAAC;IAEF,OAAOjB,QAAQ;EACjB,CAAC;;EAED;EACA,MAAM,CAACA,QAAQ,EAAEkB,WAAW,CAAC,GAAGvD,QAAQ,CAACwB,eAAe,CAAC,CAAC,CAAC;;EAE3D;EACA,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGzD,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAM,CAAC0D,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG3D,QAAQ,CAAC,IAAI,CAAC;;EAEpE;EACA,MAAM4D,UAAU,GAAGA,CAAA,KAAM;IACvBH,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMK,eAAe,GAAIR,WAAW,IAAK;IACvC,IAAI,CAACG,SAAS,IAAIH,WAAW,EAAE;MAC7BM,sBAAsB,CAACN,WAAW,CAAC;IACrC,CAAC,MAAM,IAAIG,SAAS,EAAE;MACpB;IAAA;EAEJ,CAAC;EAED,oBACEnD,OAAA;IAAKyD,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC1D,OAAA,CAACF,MAAM;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV9D,OAAA;MAAKyD,SAAS,EAAE,mBAAmB;MAAAC,QAAA,gBACjC1D,OAAA,CAACH,UAAU;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACd9D,OAAA;QAAKyD,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B1D,OAAA;UAAA0D,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7B9D,OAAA;UAAOyD,SAAS,EAAC,iCAAiC;UAAAC,QAAA,gBAChD1D,OAAA;YAAA0D,QAAA,eACE1D,OAAA;cAAA0D,QAAA,gBACE1D,OAAA;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACR3D,iBAAiB,CAAC,CAAC,CAAC4D,GAAG,CAAC3B,IAAI,iBAC3BpC,OAAA;gBAAA0D,QAAA,EAAgBtB;cAAI,GAAXA,IAAI;gBAAAuB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAC1B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACR9D,OAAA;YAAA0D,QAAA,EACGM,MAAM,CAACC,OAAO,CAACjC,QAAQ,CAAC,CAAC+B,GAAG,CAAC,CAAC,CAACnC,IAAI,EAAEsC,SAAS,CAAC,kBAC9ClE,OAAA;cAAA0D,QAAA,gBACE1D,OAAA;gBAAImE,KAAK,EAAC,KAAK;gBAAAT,QAAA,EAAE9B;cAAI;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EAC1BE,MAAM,CAACC,OAAO,CAACC,SAAS,CAAC,CAACH,GAAG,CAAC,CAAC,CAAC3B,IAAI,EAAEgC,YAAY,CAAC,kBAClDpE,OAAA;gBAEEyD,SAAS,EACPW,YAAY,KAAK,IAAI,GAAG,qCAAqC,GAC7DA,YAAY,IAAIA,YAAY,CAACnB,IAAI,KAAK,aAAa,GAAG,cAAc,GACpE,iBACD;gBAAAS,QAAA,EAEAU,YAAY,IAAIA,YAAY,CAACnB,IAAI,KAAK,aAAa,gBAClDjD,OAAA;kBACEyD,SAAS,EAAC,gBAAgB;kBAC1BY,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAACY,YAAY,CAAE;kBAAAV,QAAA,EAC9C;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,GAETX,SAAS,gBACPnD,OAAA;kBACEyD,SAAS,EAAC,mBAAmB;kBAC7BY,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAAC,CAAE;kBAAAE,QAAA,EAClC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,GAET1B;cAEH,GAzBK,GAAER,IAAK,IAAGQ,IAAK,EAAC;gBAAAuB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA0BpB,CACL,CAAC;YAAA,GA/BKlC,IAAI;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAgCT,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAER9D,OAAA;UAAQiD,IAAI,EAAC,QAAQ;UAACQ,SAAS,EAAC,+BAA+B;UAACY,OAAO,EAAEd,UAAW;UAAAG,QAAA,EACjFP,SAAS,GAAG,aAAa,GAAG;QAAe;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLT,mBAAmB,iBAClBrD,OAAA;MAAKyD,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpB1D,OAAA;QAAKyD,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B1D,OAAA;UAAMyD,SAAS,EAAC,OAAO;UAACY,OAAO,EAAEA,CAAA,KAAMf,sBAAsB,CAAC,IAAI,CAAE;UAAAI,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnF9D,OAAA;UAAA0D,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5B9D,OAAA;UAAA0D,QAAA,GAAG,QAAM,EAACL,mBAAmB,CAACpC,QAAQ,CAACqD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjE9D,OAAA;UAAA0D,QAAA,GAAG,QAAM,EAACL,mBAAmB,CAACpC,QAAQ,CAACqD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9D9D,OAAA;UAAA0D,QAAA,GAAG,gBAAc,EAACL,mBAAmB,CAACnC,WAAW;QAAA;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtD9D,OAAA;UAAQyD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzD9D,OAAA;UAAQyD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5D,EAAA,CAhLuBD,cAAc;AAAAuE,EAAA,GAAdvE,cAAc;AAAA,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}