{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/Ddashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport '../../css/Doctor/ddashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DoctorDashboard() {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n\n  // Function to generate dates for the next 7 days\n  // const getNextDates = () => {\n  //   const today = new Date();\n  //   const dates = [];\n\n  //   for (let i = 0; i < 7; i++) {\n  //     const nextDate = new Date(today);\n  //     nextDate.setDate(today.getDate() + i);\n  //     dates.push(nextDate.toISOString().split('T')[0]);\n  //   }\n\n  //   return dates;\n  // };\n\n  useEffect(() => {\n    // Fetch booked appointments from API\n    fetchAppointments();\n  }, []);\n  const fetchAppointments = () => {\n    // Retrieve token from local storage\n    const token = localStorage.getItem('token');\n\n    // Make API request to fetch appointments\n    fetch('http://localhost:8081/api/v1/doctor/list-appointments', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      const currentDateTime = new Date(); // Get current date and time\n      const currentTime = currentDateTime.getTime(); // Get current time in milliseconds\n\n      const newAppointments = [];\n\n      // Iterate through fetched appointments\n      data.forEach(appointment => {\n        const slot = new Date(appointment.slot[0], appointment.slot[1] - 1, appointment.slot[2], appointment.slot[3], appointment.slot[4]);\n        const slotTime = slot.getTime(); // Convert slot time to milliseconds\n        const slotYear = slot.getFullYear();\n        const slotMonth = slot.getMonth();\n        const slotDate = slot.getDate();\n        // If slot is on the same date as current date or it is within the next 7 days, move appointment to appointments\n        if (currentDateTime.getFullYear() === slotYear && currentDateTime.getMonth() === slotMonth && currentDateTime.getDate === slotDate || slotTime <= currentTime + 7 * 24 * 60 * 60 * 1000) {\n          newAppointments.push(appointment);\n        }\n      });\n\n      // Update state with new appointments\n      setAppointments(newAppointments);\n    }).catch(error => console.error('Error fetching appointments:', error));\n  };\n\n  // Dummy data for demonstration purposes\n  // const appointments = [\n  //   { id:1,date: getNextDates()[0], time: '09:00', patientName: 'John Doe' },\n  //   { id:2,date: getNextDates()[4], time: '09:00', patientName: 'somebody someone' },\n  //   { id:3,date: getNextDates()[1], time: '10:00', patientName: 'Alice Smith' },\n  //   { id:4,date: getNextDates()[3], time: '14:00', patientName: 'Bob Johnson' },\n  //   { id:5,date: getNextDates()[5], time: '09:00', patientName: 'John Doe' },\n  //   { id:6,date: getNextDates()[6], time: '19:00', patientName: 'somebody someone' },\n  //   { id:7,date: getNextDates()[6], time: '10:00', patientName: 'Alice Smith' },\n  //   { id:8,date: getNextDates()[2], time: '14:00', patientName: 'Bob Johnson' },\n  //   // Add more dummy appointment data as needed\n  // ];\n\n  // State to manage the modal visibility and appointment details\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n\n  // Function to handle opening the modal and setting selected appointment\n  const handleOpenModal = appointment => {\n    setSelectedAppointment(appointment);\n    setModalVisible(true);\n  };\n\n  // Function to handle closing the modal\n  const handleCloseModal = () => {\n    setModalVisible(false);\n  };\n\n  // Function to handle joining the meeting\n  const handleJoinMeeting = () => {\n    // Implement your logic for joining the meeting\n    alert('Join Meeting');\n  };\n\n  // Function to handle canceling the appointment\n  const handleCancelAppointment = () => {\n    // Implement your logic for canceling the appointment\n    alert('Cancel Appointment');\n  };\n\n  // Function to handle viewing patient details\n  const handleViewPatientDetails = () => {\n    // Implement your logic for viewing patient details\n    alert('View Patient Details');\n  };\n\n  // State for search input\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Filter appointments based on search term\n  const filteredAppointments = appointments.filter(appointment => appointment.patientName.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"appointments-list-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"This week's appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by patient name\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"appointments-list col\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table \",\n            style: {\n              border: 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  border: 'none'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: 'none'\n                  },\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: 'none'\n                  },\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: 'none'\n                  },\n                  children: \"Name of Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: 'none'\n                  },\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredAppointments.map((appointment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  border: 'none'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: 'none'\n                  },\n                  children: appointment.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: 'none'\n                  },\n                  children: appointment.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: 'none'\n                  },\n                  children: appointment.patientName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: 'none'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary btn-sm custom-button\",\n                    onClick: () => handleOpenModal(appointment),\n                    children: \"View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), selectedAppointment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal ${modalVisible ? 'show' : ''}`,\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      style: {\n        display: modalVisible ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-sm custom-box\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"Appointment Details - \", selectedAppointment.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              onClick: handleCloseModal,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", selectedAppointment.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Time: \", selectedAppointment.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Patient: \", selectedAppointment.patientName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success custom-button2\",\n              onClick: handleJoinMeeting,\n              children: \"Join Meeting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/details\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-info custom-button2\",\n                children: \"View Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 40\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              onClick: handleCancelAppointment,\n              children: \"Cancel Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorDashboard, \"aUk886PhBQlUw0lS11EnPfOz4gs=\");\n_c = DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","SideNavbar","Navbar","jsxDEV","_jsxDEV","DoctorDashboard","_s","appointments","setAppointments","fetchAppointments","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","json","data","console","log","currentDateTime","Date","currentTime","getTime","newAppointments","forEach","appointment","slot","slotTime","slotYear","getFullYear","slotMonth","getMonth","slotDate","getDate","push","catch","error","modalVisible","setModalVisible","selectedAppointment","setSelectedAppointment","handleOpenModal","handleCloseModal","handleJoinMeeting","alert","handleCancelAppointment","handleViewPatientDetails","searchTerm","setSearchTerm","filteredAppointments","filter","patientName","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","style","border","map","index","date","time","onClick","tabIndex","role","display","Link","to","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/Ddashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\r\nimport Navbar from \"../../components/Doctor/Navbar\";\r\nimport '../../css/Doctor/ddashboard.css';\r\n\r\nexport default function DoctorDashboard() {\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  // Function to generate dates for the next 7 days\r\n  // const getNextDates = () => {\r\n  //   const today = new Date();\r\n  //   const dates = [];\r\n\r\n  //   for (let i = 0; i < 7; i++) {\r\n  //     const nextDate = new Date(today);\r\n  //     nextDate.setDate(today.getDate() + i);\r\n  //     dates.push(nextDate.toISOString().split('T')[0]);\r\n  //   }\r\n\r\n  //   return dates;\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // Fetch booked appointments from API\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const fetchAppointments = () => {\r\n    // Retrieve token from local storage\r\n    const token = localStorage.getItem('token');\r\n\r\n    // Make API request to fetch appointments\r\n    fetch('http://localhost:8081/api/v1/doctor/list-appointments', {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        const currentDateTime = new Date(); // Get current date and time\r\n        const currentTime = currentDateTime.getTime(); // Get current time in milliseconds\r\n\r\n        const newAppointments = [];\r\n\r\n        // Iterate through fetched appointments\r\n        data.forEach((appointment) => {\r\n          const slot = new Date(\r\n            appointment.slot[0],\r\n            appointment.slot[1] - 1,\r\n            appointment.slot[2],\r\n            appointment.slot[3],\r\n            appointment.slot[4]\r\n          );\r\n          const slotTime = slot.getTime(); // Convert slot time to milliseconds\r\n          const slotYear = slot.getFullYear();\r\n          const slotMonth = slot.getMonth();\r\n          const slotDate = slot.getDate();\r\n          // If slot is on the same date as current date or it is within the next 7 days, move appointment to appointments\r\n          if ((currentDateTime.getFullYear() === slotYear && currentDateTime.getMonth() === slotMonth && currentDateTime.getDate === slotDate) || (slotTime <= currentTime +  7 * 24 * 60 * 60 * 1000)){\r\n            newAppointments.push(appointment);\r\n          } \r\n        });\r\n\r\n        // Update state with new appointments\r\n        setAppointments(newAppointments);\r\n      })\r\n      .catch((error) => console.error('Error fetching appointments:', error));\r\n  };\r\n\r\n  // Dummy data for demonstration purposes\r\n  // const appointments = [\r\n  //   { id:1,date: getNextDates()[0], time: '09:00', patientName: 'John Doe' },\r\n  //   { id:2,date: getNextDates()[4], time: '09:00', patientName: 'somebody someone' },\r\n  //   { id:3,date: getNextDates()[1], time: '10:00', patientName: 'Alice Smith' },\r\n  //   { id:4,date: getNextDates()[3], time: '14:00', patientName: 'Bob Johnson' },\r\n  //   { id:5,date: getNextDates()[5], time: '09:00', patientName: 'John Doe' },\r\n  //   { id:6,date: getNextDates()[6], time: '19:00', patientName: 'somebody someone' },\r\n  //   { id:7,date: getNextDates()[6], time: '10:00', patientName: 'Alice Smith' },\r\n  //   { id:8,date: getNextDates()[2], time: '14:00', patientName: 'Bob Johnson' },\r\n  //   // Add more dummy appointment data as needed\r\n  // ];\r\n\r\n  // State to manage the modal visibility and appointment details\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\r\n\r\n  // Function to handle opening the modal and setting selected appointment\r\n  const handleOpenModal = (appointment) => {\r\n    setSelectedAppointment(appointment);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  // Function to handle closing the modal\r\n  const handleCloseModal = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  // Function to handle joining the meeting\r\n  const handleJoinMeeting = () => {\r\n    // Implement your logic for joining the meeting\r\n    alert('Join Meeting');\r\n  };\r\n\r\n  // Function to handle canceling the appointment\r\n  const handleCancelAppointment = () => {\r\n    // Implement your logic for canceling the appointment\r\n    alert('Cancel Appointment');\r\n  };\r\n\r\n  // Function to handle viewing patient details\r\n  const handleViewPatientDetails = () => {\r\n    // Implement your logic for viewing patient details\r\n    alert('View Patient Details');\r\n  };\r\n\r\n\r\n\r\n\r\n  // State for search input\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Filter appointments based on search term\r\n  const filteredAppointments = appointments.filter(appointment =>\r\n    appointment.patientName.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Navbar />\r\n      <div className='dashboard-content'>\r\n        <SideNavbar />\r\n        <div className='main-content'>\r\n          <div className=\"appointments-list-header\">\r\n            <h2>This week's appointments</h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by patient name\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"appointments-list col\">\r\n            <table className=\"table \" style={{border: 'none'}}>\r\n              <thead>\r\n                <tr style={{border: 'none'}}>\r\n                  <th style={{border: 'none'}}>Date</th>\r\n                  <th style={{border: 'none'}}>Time</th>\r\n                  <th style={{border: 'none'}}>Name of Patient</th>\r\n                  <th style={{border: 'none'}}>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody  >\r\n                {filteredAppointments.map((appointment, index) => (\r\n                  <tr key={index} style={{border: 'none'}}>\r\n                    <td style={{border: 'none'}}>{appointment.date}</td>\r\n                    <td style={{border: 'none'}}>{appointment.time}</td>\r\n                    <td style={{border: 'none'}}>{appointment.patientName}</td>\r\n                    <td style={{border: 'none'}}>\r\n                      <button className=\"btn btn-primary btn-sm custom-button\" onClick={() => handleOpenModal(appointment)}>\r\n                        View\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {selectedAppointment && (\r\n        <div\r\n          className={`modal ${modalVisible ? 'show' : ''}`}\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          style={{ display: modalVisible ? 'block' : 'none' }}\r\n        >\r\n          <div className=\"modal-dialog modal-sm custom-box\"> {/* Add modal-sm for smaller size */}\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Appointment Details - {selectedAppointment.date}</h5>\r\n                <button type=\"button\" className=\"close\" onClick={handleCloseModal}>\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p>Date: {selectedAppointment.date}</p>\r\n                <p>Time: {selectedAppointment.time}</p>\r\n                <p>Patient: {selectedAppointment.patientName}</p>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-success custom-button2\" onClick={handleJoinMeeting}>\r\n                  Join Meeting\r\n                </button>\r\n                <Link to= \"/details\" > <button className=\"btn btn-info custom-button2\" >\r\n                  View Patient\r\n                </button> </Link>\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={handleCancelAppointment}>\r\n                  Cancel Appointment\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}