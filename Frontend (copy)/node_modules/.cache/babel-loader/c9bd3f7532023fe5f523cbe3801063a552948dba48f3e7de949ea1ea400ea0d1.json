{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/uploadschedule.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadSchedule() {\n  _s();\n  // Function to generate time slots with 45-minute intervals\n  const generateTimeSlots = () => {\n    const startTime = 9 * 60; // 9:00 AM in minutes\n    const endTime = 17 * 60 + 15; // 5:15 PM in minutes\n    const interval = 45; // 45 minutes interval\n    const timeSlots = [];\n    for (let i = startTime; i <= endTime; i += interval) {\n      const hours = Math.floor(i / 60);\n      const minutes = i % 60;\n      const formattedTime = `${hours < 10 ? '0' : ''}${hours}:${minutes === 0 ? '00' : minutes}`;\n      timeSlots.push(formattedTime);\n    }\n    return timeSlots;\n  };\n\n  // Dummy schedule data (replace with your actual data source)\n  const dummySchedule = {\n    \"slots\": [[2024, 4, 5, 11, 15], [2024, 4, 6, 15, 45], [2024, 4, 7, 15, 0], [2024, 4, 6, 15, 45], [2024, 4, 5, 15, 0]],\n    \"appointments\": [{\n      id: 1,\n      datetime: [2024, 4, 5, 9, 0],\n      patientName: 'John Doe',\n      meetingLink: 'https://example.com/meeting1'\n    }, {\n      id: 2,\n      datetime: [2024, 4, 6, 10, 30],\n      patientName: 'somebody someone',\n      meetingLink: 'https://example.com/meeting2'\n    }, {\n      id: 3,\n      datetime: [2024, 4, 7, 11, 15],\n      patientName: 'Alice Smith',\n      meetingLink: 'https://example.com/meeting3'\n    }, {\n      id: 5,\n      datetime: [2024, 4, 6, 9, 0],\n      patientName: 'John Doe',\n      meetingLink: 'https://example.com/meeting4'\n    }]\n  };\n  const initialSchedule = () => {\n    const today = new Date();\n    const next7Days = Array.from({\n      length: 7\n    }, (_, index) => {\n      const date = new Date(today);\n      date.setDate(date.getDate() + index);\n      return date.toLocaleDateString('en-US');\n    });\n    const timeSlots = generateTimeSlots();\n    const schedule = next7Days.reduce((acc, date) => {\n      acc[date] = timeSlots.reduce((acc2, time) => {\n        acc2[time] = false; // All slots initially unavailable\n        return acc2;\n      }, {});\n      return acc;\n    }, {});\n    dummySchedule.slots.forEach(slot => {\n      const [year, month, day, hour, minute] = slot;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = true; // Set slot to available\n      }\n    });\n    dummySchedule.appointments.forEach(appointment => {\n      const [year, month, day, hour, minute] = appointment.datetime;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = appointment; // Set appointment object\n      }\n    });\n    return schedule;\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState(initialSchedule());\n\n  // State for modal visibility and selected appointment\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n\n  // Function to toggle modal visibility\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  // Function to handle cell click (toggle availability or show modal for appointment)\n  const handleCellClick = (date, time) => {\n    const cellData = schedule[date][time];\n    if (isModalOpen || !cellData) return; // Do nothing if modal is already open or cell is empty\n    if (typeof cellData === 'object') {\n      setSelectedAppointment(cellData);\n      toggleModal();\n    }\n  };\n\n  // Function to render appointment cell content\n  const renderCellContent = (date, time) => {\n    const cellData = schedule[date][time];\n    if (cellData === true) return time; // Available slot\n    if (cellData === false) return ''; // Unavailable slot\n    if (typeof cellData === 'object') return 'Appointment'; // Appointment slot\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"This week's Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered custom-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), generateTimeSlots().map(time => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: time\n              }, time, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(schedule).map(([date, timeslots]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), Object.entries(timeslots).map(([time, availability]) => /*#__PURE__*/_jsxDEV(\"td\", {\n                className: availability === true ? 'table-success bg-success text-white' : availability === false ? 'table-secondary' : 'table-danger',\n                onClick: () => handleCellClick(date, time),\n                children: renderCellContent(date, time)\n              }, `${date}-${time}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this))]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `modal ${isModalOpen ? 'show' : ''}`,\n          tabIndex: \"-1\",\n          role: \"dialog\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-dialog modal-sm custom-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"modal-title\",\n                  children: [\"Appointment Details - \", selectedAppointment === null || selectedAppointment === void 0 ? void 0 : selectedAppointment.datetime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"close\",\n                  onClick: toggleModal,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    \"aria-hidden\": \"true\",\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Date: \", selectedAppointment === null || selectedAppointment === void 0 ? void 0 : selectedAppointment.datetime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Patient: \", selectedAppointment === null || selectedAppointment === void 0 ? void 0 : selectedAppointment.patientName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Meeting Link: \", selectedAppointment === null || selectedAppointment === void 0 ? void 0 : selectedAppointment.meetingLink]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-footer\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-success custom-button2\",\n                  onClick: () => window.open(selectedAppointment === null || selectedAppointment === void 0 ? void 0 : selectedAppointment.meetingLink, '_blank'),\n                  children: \"Join Meeting\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSchedule, \"69I0bfztzMiGO9NS4T70aGhpK74=\");\n_c = UploadSchedule;\nvar _c;\n$RefreshReg$(_c, \"UploadSchedule\");","map":{"version":3,"names":["React","useState","useEffect","SideNavbar","Navbar","jsxDEV","_jsxDEV","UploadSchedule","_s","generateTimeSlots","startTime","endTime","interval","timeSlots","i","hours","Math","floor","minutes","formattedTime","push","dummySchedule","id","datetime","patientName","meetingLink","initialSchedule","today","Date","next7Days","Array","from","length","_","index","date","setDate","getDate","toLocaleDateString","schedule","reduce","acc","acc2","time","slots","forEach","slot","year","month","day","hour","minute","formattedDate","undefined","appointments","appointment","setSchedule","isModalOpen","setIsModalOpen","selectedAppointment","setSelectedAppointment","toggleModal","handleCellClick","cellData","renderCellContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Object","entries","timeslots","scope","availability","onClick","tabIndex","role","type","window","open","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/uploadschedule.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\n\nexport default function UploadSchedule() {\n  // Function to generate time slots with 45-minute intervals\n  const generateTimeSlots = () => {\n    const startTime = 9 * 60; // 9:00 AM in minutes\n    const endTime = 17 * 60 + 15; // 5:15 PM in minutes\n    const interval = 45; // 45 minutes interval\n    const timeSlots = [];\n\n    for (let i = startTime; i <= endTime; i += interval) {\n      const hours = Math.floor(i / 60);\n      const minutes = i % 60;\n      const formattedTime = `${hours < 10 ? '0' : ''}${hours}:${minutes === 0 ? '00' : minutes}`;\n      timeSlots.push(formattedTime);\n    }\n\n    return timeSlots;\n  };\n\n  // Dummy schedule data (replace with your actual data source)\n  const dummySchedule = {\n    \"slots\": [\n      [2024, 4, 5, 11, 15],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 7, 15, 0],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 5, 15, 0]\n    ],\n    \"appointments\": [\n      { id: 1, datetime: [2024,4,5,9,0], patientName: 'John Doe', meetingLink: 'https://example.com/meeting1' },\n      { id: 2, datetime: [2024,4,6,10,30], patientName: 'somebody someone', meetingLink: 'https://example.com/meeting2' },\n      { id: 3, datetime: [2024,4,7,11,15], patientName: 'Alice Smith', meetingLink: 'https://example.com/meeting3' },\n      { id: 5, datetime: [2024,4,6,9,0], patientName: 'John Doe', meetingLink: 'https://example.com/meeting4' },\n    ]\n  };\n\n  const initialSchedule = () => {\n    const today = new Date();\n    const next7Days = Array.from({ length: 7 }, (_, index) => {\n      const date = new Date(today);\n      date.setDate(date.getDate() + index);\n      return date.toLocaleDateString('en-US');\n    });\n\n    const timeSlots = generateTimeSlots();\n\n    const schedule = next7Days.reduce((acc, date) => {\n      acc[date] = timeSlots.reduce((acc2, time) => {\n        acc2[time] = false; // All slots initially unavailable\n        return acc2;\n      }, {});\n      return acc;\n    }, {});\n\n    dummySchedule.slots.forEach(slot => {\n      const [year, month, day, hour, minute] = slot;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = true; // Set slot to available\n      }\n    });\n\n    dummySchedule.appointments.forEach(appointment => {\n      const [year, month, day, hour, minute] = appointment.datetime;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = appointment; // Set appointment object\n      }\n    });\n\n    return schedule;\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState(initialSchedule());\n\n  // State for modal visibility and selected appointment\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n\n  // Function to toggle modal visibility\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  // Function to handle cell click (toggle availability or show modal for appointment)\n  const handleCellClick = (date, time) => {\n    const cellData = schedule[date][time];\n    if (isModalOpen || !cellData) return; // Do nothing if modal is already open or cell is empty\n    if (typeof cellData === 'object') {\n      setSelectedAppointment(cellData);\n      toggleModal();\n    }\n  };\n\n  // Function to render appointment cell content\n  const renderCellContent = (date, time) => {\n    const cellData = schedule[date][time];\n    if (cellData === true) return time; // Available slot\n    if (cellData === false) return ''; // Unavailable slot\n    if (typeof cellData === 'object') return 'Appointment'; // Appointment slot\n  };\n\n  return (\n    <div className='dashboard-container'>\n      <Navbar />\n      <div className= 'dashboard-content'>\n        <SideNavbar />\n        <div className=\"main-content\">\n          <h2>This week's Schedule</h2>\n          <table className=\"table table-bordered custom-box\">\n            <thead>\n              <tr>\n                <th></th>\n                {generateTimeSlots().map(time => (\n                  <th key={time}>{time}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {Object.entries(schedule).map(([date, timeslots]) => (\n                <tr key={date}>\n                  <th scope=\"row\">{date}</th>\n                  {Object.entries(timeslots).map(([time, availability]) => (\n                    <td\n                      key={`${date}-${time}`}\n                      className={\n                        availability === true ? 'table-success bg-success text-white' :\n                        availability === false ? 'table-secondary' :\n                        'table-danger'\n                      }\n                      onClick={() => handleCellClick(date, time)}\n                    >\n                      {renderCellContent(date, time)}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          <div className={`modal ${isModalOpen ? 'show' : ''}`} tabIndex=\"-1\" role=\"dialog\">\n            <div className=\"modal-dialog modal-sm custom-box\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\">Appointment Details - {selectedAppointment?.datetime}</h5>\n                  <button type=\"button\" className=\"close\" onClick={toggleModal}>\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <p>Date: {selectedAppointment?.datetime}</p>\n                  <p>Patient: {selectedAppointment?.patientName}</p>\n                  <p>Meeting Link: {selectedAppointment?.meetingLink}</p>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-success custom-button2\" onClick={() => window.open(selectedAppointment?.meetingLink, '_blank')}>\n                    Join Meeting\n                  </button>\n                  {/* Add onClick handlers for other actions */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}