{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/teleconfront/src/Pages/uploadschedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FullCalendar from '../node_modules/@fullcalendar/react';\nimport dayGridPlugin from '../node_modules/@fullcalendar/daygrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadSchedule = () => {\n  _s();\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const handleDateClick = arg => {\n    // Handle date click event here\n    console.log('Date Clicked:', arg.date);\n  };\n  const handleEventClick = arg => {\n    // Handle event (slot) click event here\n    console.log('Event Clicked:', arg.event.start);\n  };\n  const handleSubmitSchedule = () => {\n    // Implement your logic for submitting the schedule\n    // You can access the selected slot using the selectedSlot state\n    alert('Schedule Submitted!');\n    setSelectedSlot(null); // Reset selected slot\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calendar Scheduler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      dateClick: handleDateClick,\n      eventClick: handleEventClick,\n      events: [\n        // Your events data here\n        // Example: { title: 'Meeting', date: '2024-02-15' }\n      ]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleSubmitSchedule,\n        children: \"Upload Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), selectedSlot && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Selected Slot Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", selectedSlot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadSchedule, \"Y6TO00m8GVyDZJbp/5oEMFrIagA=\");\n_c = UploadSchedule;\nexport default UploadSchedule;\nvar _c;\n$RefreshReg$(_c, \"UploadSchedule\");","map":{"version":3,"names":["React","useState","FullCalendar","dayGridPlugin","jsxDEV","_jsxDEV","UploadSchedule","_s","selectedSlot","setSelectedSlot","handleDateClick","arg","console","log","date","handleEventClick","event","start","handleSubmitSchedule","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","dateClick","eventClick","events","onClick","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/teleconfront/src/Pages/uploadschedule.js"],"sourcesContent":["import React, { useState } from 'react';\nimport FullCalendar from '../node_modules/@fullcalendar/react';\nimport dayGridPlugin from '../node_modules/@fullcalendar/daygrid';\n\nconst UploadSchedule = () => {\n  const [selectedSlot, setSelectedSlot] = useState(null);\n\n  const handleDateClick = (arg) => {\n    // Handle date click event here\n    console.log('Date Clicked:', arg.date);\n  };\n\n  const handleEventClick = (arg) => {\n    // Handle event (slot) click event here\n    console.log('Event Clicked:', arg.event.start);\n  };\n\n  const handleSubmitSchedule = () => {\n    // Implement your logic for submitting the schedule\n    // You can access the selected slot using the selectedSlot state\n    alert('Schedule Submitted!');\n    setSelectedSlot(null); // Reset selected slot\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <h2>Calendar Scheduler</h2>\n\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView=\"dayGridMonth\"\n        dateClick={handleDateClick}\n        eventClick={handleEventClick}\n        events={[\n          // Your events data here\n          // Example: { title: 'Meeting', date: '2024-02-15' }\n        ]}\n      />\n\n      {/* Submit button */}\n      <div className=\"text-center mt-3\">\n        <button className=\"btn btn-primary\" onClick={handleSubmitSchedule}>\n          Upload Schedule\n        </button>\n      </div>\n\n      {/* Details of selected slot */}\n      {selectedSlot && (\n        <div className=\"mt-3\">\n          <h4>Selected Slot Details</h4>\n          <p>Date: {selectedSlot}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UploadSchedule;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,OAAOC,aAAa,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMS,eAAe,GAAIC,GAAG,IAAK;IAC/B;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,GAAG,CAACG,IAAI,CAAC;EACxC,CAAC;EAED,MAAMC,gBAAgB,GAAIJ,GAAG,IAAK;IAChC;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,GAAG,CAACK,KAAK,CAACC,KAAK,CAAC;EAChD,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC;IACA;IACAC,KAAK,CAAC,qBAAqB,CAAC;IAC5BV,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACEJ,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3BpB,OAAA,CAACH,YAAY;MACXwB,OAAO,EAAE,CAACvB,aAAa,CAAE;MACzBwB,WAAW,EAAC,cAAc;MAC1BC,SAAS,EAAElB,eAAgB;MAC3BmB,UAAU,EAAEd,gBAAiB;MAC7Be,MAAM,EAAE;QACN;QACA;MAAA;IACA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGFpB,OAAA;MAAKe,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BhB,OAAA;QAAQe,SAAS,EAAC,iBAAiB;QAACW,OAAO,EAAEb,oBAAqB;QAAAG,QAAA,EAAC;MAEnE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLjB,YAAY,iBACXH,OAAA;MAAKe,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBhB,OAAA;QAAAgB,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BpB,OAAA;QAAAgB,QAAA,GAAG,QAAM,EAACb,YAAY;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnDID,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}