{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Patient/PreviousAppointments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import Axios\nimport './../../css/Patient/PreviousAppointments.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PreviousAppointments({\n  appointments\n}) {\n  _s();\n  // Filter appointments based on current time\n  const [filteredAppointments, setFilteredAppointments] = useState([]);\n  useEffect(() => {\n    const currentDateTime = new Date(); // Get current date and time\n    const currentTime = currentDateTime.getTime(); // Get current time in milliseconds\n\n    // Filter appointments to include only those that are in the past relative to current time\n    const filtered = appointments.filter(appointment => {\n      const slotTime = new Date(appointment.slot[0], appointment.slot[1] - 1, appointment.slot[2], appointment.slot[3], appointment.slot[4]).getTime(); // Convert slot time to milliseconds\n\n      return currentTime >= slotTime + 45 * 60 * 1000; // Check if current time is past appointment time + 45 minutes\n    });\n    setFilteredAppointments(filtered);\n  }, [appointments]);\n  const handleDownload = async appointment_id => {\n    try {\n      // Retrieve token from localStorage\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:8081/api/v1/patient/fetch-prescription/${appointment_id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        },\n        responseType: 'blob' // Ensure response type is blob to handle binary data\n      });\n      if (response.status === 200) {\n        // Create a Blob from the response data\n        const blob = new Blob([response.data], {\n          type: 'application/pdf'\n        });\n\n        // Create a URL for the Blob\n        const url = window.URL.createObjectURL(blob);\n\n        // Create a temporary link element\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'prescription.pdf'); // Set desired file name\n\n        // Programmatically click the link to trigger the download\n        document.body.appendChild(link);\n        link.click();\n\n        // Remove the temporary link element\n        document.body.removeChild(link);\n      } else {\n        console.error('Failed to fetch prescription:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching prescription:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"previous-appointments-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Previous Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"previous-appointments-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sl No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Doctor Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredAppointments.map((appointment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${appointment.slot[2]}/${appointment.slot[1]}/${appointment.slot[0]}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${appointment.doctor_id.first_name} ${appointment.doctor_id.last_name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bas-aps-but\",\n              onClick: () => handleDownload(appointment.appointment_id),\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(PreviousAppointments, \"9R0p1/dadGVkPyadY6JCdB4khYE=\");\n_c = PreviousAppointments;\nexport default PreviousAppointments;\nvar _c;\n$RefreshReg$(_c, \"PreviousAppointments\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PreviousAppointments","appointments","_s","filteredAppointments","setFilteredAppointments","currentDateTime","Date","currentTime","getTime","filtered","filter","appointment","slotTime","slot","handleDownload","appointment_id","token","localStorage","getItem","response","get","headers","responseType","status","blob","Blob","data","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","console","error","statusText","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","doctor_id","first_name","last_name","onClick","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Patient/PreviousAppointments.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // Import Axios\r\nimport './../../css/Patient/PreviousAppointments.css';\r\n\r\nfunction PreviousAppointments({ appointments }) {\r\n  // Filter appointments based on current time\r\n  const [filteredAppointments, setFilteredAppointments] = useState([]);\r\n  useEffect(() => {\r\n    const currentDateTime = new Date(); // Get current date and time\r\n    const currentTime = currentDateTime.getTime(); // Get current time in milliseconds\r\n\r\n    // Filter appointments to include only those that are in the past relative to current time\r\n    const filtered = appointments.filter(appointment => {\r\n      const slotTime = new Date(\r\n        appointment.slot[0],\r\n        appointment.slot[1] - 1,\r\n        appointment.slot[2],\r\n        appointment.slot[3],\r\n        appointment.slot[4]\r\n      ).getTime(); // Convert slot time to milliseconds\r\n\r\n      return currentTime >= slotTime + 45 * 60 * 1000; // Check if current time is past appointment time + 45 minutes\r\n    });\r\n\r\n    setFilteredAppointments(filtered);\r\n  }, [appointments]);\r\n\r\n  const handleDownload = async (appointment_id) => {\r\n    try {\r\n      // Retrieve token from localStorage\r\n      const token = localStorage.getItem('token');\r\n  \r\n      const response = await axios.get(\r\n        `http://localhost:8081/api/v1/patient/fetch-prescription/${appointment_id}`,\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'multipart/form-data'\r\n          },\r\n          responseType: 'blob' // Ensure response type is blob to handle binary data\r\n        }\r\n      );\r\n  \r\n      if (response.status === 200) {\r\n        // Create a Blob from the response data\r\n        const blob = new Blob([response.data], { type: 'application/pdf' });\r\n  \r\n        // Create a URL for the Blob\r\n        const url = window.URL.createObjectURL(blob);\r\n  \r\n        // Create a temporary link element\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', 'prescription.pdf'); // Set desired file name\r\n  \r\n        // Programmatically click the link to trigger the download\r\n        document.body.appendChild(link);\r\n        link.click();\r\n  \r\n        // Remove the temporary link element\r\n        document.body.removeChild(link);\r\n      } else {\r\n        console.error('Failed to fetch prescription:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching prescription:', error.message);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"previous-appointments-container\">\r\n      <h2>Previous Appointments</h2>\r\n      <table className=\"previous-appointments-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Sl No.</th>\r\n            <th>Date</th>\r\n            <th>Doctor Name</th>\r\n            <th>Action</th> {/* Add a new column for the action */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredAppointments.map((appointment, index) => (\r\n            <tr key={index}>\r\n              <td>{index + 1}</td>\r\n              <td>{`${appointment.slot[2]}/${appointment.slot[1]}/${appointment.slot[0]}`}</td>\r\n              <td>{`${appointment.doctor_id.first_name} ${appointment.doctor_id.last_name}`}</td>\r\n              <td>\r\n                <button className='bas-aps-but' onClick={() => handleDownload(appointment.appointment_id)}>Download</button>\r\n              </td> {/* Button within a table cell */}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreviousAppointments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}