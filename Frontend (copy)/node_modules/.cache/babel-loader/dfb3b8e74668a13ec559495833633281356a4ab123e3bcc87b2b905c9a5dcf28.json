{"ast":null,"code":"import { getRandom, getRangeValue } from \"@tsparticles/engine\";\nimport { Wobble } from \"./Options/Classes/Wobble.js\";\nconst double = 2,\n  doublePI = Math.PI * double,\n  maxAngle = 360,\n  moveSpeedFactor = 10,\n  defaultDistance = 0;\nexport class WobbleUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  async init(particle) {\n    const wobbleOpt = particle.options.wobble;\n    if (wobbleOpt?.enable) {\n      particle.wobble = {\n        angle: getRandom() * doublePI,\n        angleSpeed: getRangeValue(wobbleOpt.speed.angle) / maxAngle,\n        moveSpeed: getRangeValue(wobbleOpt.speed.move) / moveSpeedFactor\n      };\n    } else {\n      particle.wobble = {\n        angle: 0,\n        angleSpeed: 0,\n        moveSpeed: 0\n      };\n    }\n    particle.retina.wobbleDistance = getRangeValue(wobbleOpt?.distance ?? defaultDistance) * this.container.retina.pixelRatio;\n    await Promise.resolve();\n  }\n  isEnabled(particle) {\n    return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;\n  }\n  loadOptions(options, ...sources) {\n    if (!options.wobble) {\n      options.wobble = new Wobble();\n    }\n    for (const source of sources) {\n      options.wobble.load(source?.wobble);\n    }\n  }\n  async update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    const {\n      updateWobble\n    } = await import(\"./Utils.js\");\n    updateWobble(particle, delta);\n  }\n}","map":{"version":3,"names":["getRandom","getRangeValue","Wobble","double","doublePI","Math","PI","maxAngle","moveSpeedFactor","defaultDistance","WobbleUpdater","constructor","container","init","particle","wobbleOpt","options","wobble","enable","angle","angleSpeed","speed","moveSpeed","move","retina","wobbleDistance","distance","pixelRatio","Promise","resolve","isEnabled","destroyed","spawning","loadOptions","sources","source","load","update","delta","updateWobble"],"sources":["/home/aksh2002/Desktop/Teleconsulting/node_modules/@tsparticles/updater-wobble/browser/WobbleUpdater.js"],"sourcesContent":["import { getRandom, getRangeValue, } from \"@tsparticles/engine\";\nimport { Wobble } from \"./Options/Classes/Wobble.js\";\nconst double = 2, doublePI = Math.PI * double, maxAngle = 360, moveSpeedFactor = 10, defaultDistance = 0;\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    async init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt?.enable) {\n            particle.wobble = {\n                angle: getRandom() * doublePI,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / maxAngle,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / moveSpeedFactor,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance =\n            getRangeValue(wobbleOpt?.distance ?? defaultDistance) * this.container.retina.pixelRatio;\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source?.wobble);\n        }\n    }\n    async update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const { updateWobble } = await import(\"./Utils.js\");\n        updateWobble(particle, delta);\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,aAAa,QAAS,qBAAqB;AAC/D,SAASC,MAAM,QAAQ,6BAA6B;AACpD,MAAMC,MAAM,GAAG,CAAC;EAAEC,QAAQ,GAAGC,IAAI,CAACC,EAAE,GAAGH,MAAM;EAAEI,QAAQ,GAAG,GAAG;EAAEC,eAAe,GAAG,EAAE;EAAEC,eAAe,GAAG,CAAC;AACxG,OAAO,MAAMC,aAAa,CAAC;EACvBC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC9B;EACA,MAAMC,IAAIA,CAACC,QAAQ,EAAE;IACjB,MAAMC,SAAS,GAAGD,QAAQ,CAACE,OAAO,CAACC,MAAM;IACzC,IAAIF,SAAS,EAAEG,MAAM,EAAE;MACnBJ,QAAQ,CAACG,MAAM,GAAG;QACdE,KAAK,EAAEnB,SAAS,CAAC,CAAC,GAAGI,QAAQ;QAC7BgB,UAAU,EAAEnB,aAAa,CAACc,SAAS,CAACM,KAAK,CAACF,KAAK,CAAC,GAAGZ,QAAQ;QAC3De,SAAS,EAAErB,aAAa,CAACc,SAAS,CAACM,KAAK,CAACE,IAAI,CAAC,GAAGf;MACrD,CAAC;IACL,CAAC,MACI;MACDM,QAAQ,CAACG,MAAM,GAAG;QACdE,KAAK,EAAE,CAAC;QACRC,UAAU,EAAE,CAAC;QACbE,SAAS,EAAE;MACf,CAAC;IACL;IACAR,QAAQ,CAACU,MAAM,CAACC,cAAc,GAC1BxB,aAAa,CAACc,SAAS,EAAEW,QAAQ,IAAIjB,eAAe,CAAC,GAAG,IAAI,CAACG,SAAS,CAACY,MAAM,CAACG,UAAU;IAC5F,MAAMC,OAAO,CAACC,OAAO,CAAC,CAAC;EAC3B;EACAC,SAASA,CAAChB,QAAQ,EAAE;IAChB,OAAO,CAACA,QAAQ,CAACiB,SAAS,IAAI,CAACjB,QAAQ,CAACkB,QAAQ,IAAI,CAAC,CAAClB,QAAQ,CAACE,OAAO,CAACC,MAAM,EAAEC,MAAM;EACzF;EACAe,WAAWA,CAACjB,OAAO,EAAE,GAAGkB,OAAO,EAAE;IAC7B,IAAI,CAAClB,OAAO,CAACC,MAAM,EAAE;MACjBD,OAAO,CAACC,MAAM,GAAG,IAAIf,MAAM,CAAC,CAAC;IACjC;IACA,KAAK,MAAMiC,MAAM,IAAID,OAAO,EAAE;MAC1BlB,OAAO,CAACC,MAAM,CAACmB,IAAI,CAACD,MAAM,EAAElB,MAAM,CAAC;IACvC;EACJ;EACA,MAAMoB,MAAMA,CAACvB,QAAQ,EAAEwB,KAAK,EAAE;IAC1B,IAAI,CAAC,IAAI,CAACR,SAAS,CAAChB,QAAQ,CAAC,EAAE;MAC3B;IACJ;IACA,MAAM;MAAEyB;IAAa,CAAC,GAAG,MAAM,MAAM,CAAC,YAAY,CAAC;IACnDA,YAAY,CAACzB,QAAQ,EAAEwB,KAAK,CAAC;EACjC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}