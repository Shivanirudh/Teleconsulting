{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Patient/DoctorList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './../../css/Patient/DoctorList.css';\nimport SearchBar from './../../components/Patient/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DoctorList() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedHospital, setSelectedHospital] = useState(null);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [isBookingMode, setIsBookingMode] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [lockedSlots, setLockedSlots] = useState([]);\n  const hospitals = [{\n    id: 1,\n    name: 'Hospital A',\n    doctors: [{\n      id: 1,\n      name: 'Dr. John Doe',\n      specialty: 'Cardiologist',\n      schedule: [{\n        date: '2024-04-01',\n        availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available']\n      }, {\n        date: '2024-04-02',\n        availability: ['booked', 'busy', 'available', 'busy', 'available', 'busy', 'busy', 'available', 'booked', 'booked', 'booked', 'booked']\n      }, {\n        date: '2024-04-03',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'available']\n      }, {\n        date: '2024-04-04',\n        availability: ['available', 'available', 'busy', 'busy', 'busy', 'available', 'available', 'booked', 'available', 'busy', 'available', 'available']\n      }, {\n        date: '2024-04-05',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'busy', 'busy', 'available', 'booked', 'booked', 'busy', 'booked']\n      }, {\n        date: '2024-04-06',\n        availability: ['available', 'busy', 'booked', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'available']\n      }, {\n        date: '2024-04-07',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'booked']\n      }]\n    }, {\n      id: 2,\n      name: 'Dr. Jane Smith',\n      specialty: 'Dermatologist',\n      schedule: [{\n        date: '2024-04-01',\n        availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available']\n      }, {\n        date: '2024-04-02',\n        availability: ['booked', 'busy', 'available', 'busy', 'available', 'busy', 'busy', 'available', 'booked', 'booked', 'booked', 'booked']\n      }, {\n        date: '2024-04-03',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'available']\n      }, {\n        date: '2024-04-04',\n        availability: ['available', 'available', 'busy', 'busy', 'busy', 'available', 'available', 'booked', 'available', 'busy', 'available', 'available']\n      }, {\n        date: '2024-04-05',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'busy', 'busy', 'available', 'booked', 'booked', 'busy', 'booked']\n      }, {\n        date: '2024-04-06',\n        availability: ['available', 'busy', 'booked', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'available']\n      }, {\n        date: '2024-04-07',\n        availability: ['busy', 'booked', 'booked', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'booked']\n      }]\n    }]\n  }, {\n    id: 2,\n    name: 'Hospital B',\n    doctors: [{\n      id: 3,\n      name: 'Dr. Michael Brown',\n      specialty: 'Pediatrician',\n      schedule: [{\n        date: '2024-04-01',\n        availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available']\n      }, {\n        date: '2024-04-02',\n        availability: ['booked', 'busy', 'available', 'busy', 'available', 'busy', 'busy', 'available', 'booked', 'booked', 'booked', 'booked']\n      }, {\n        date: '2024-04-03',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'available']\n      }, {\n        date: '2024-04-04',\n        availability: ['available', 'available', 'busy', 'busy', 'busy', 'available', 'available', 'booked', 'available', 'busy', 'available', 'available']\n      }, {\n        date: '2024-04-05',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'busy', 'busy', 'available', 'booked', 'booked', 'busy', 'booked']\n      }, {\n        date: '2024-04-06',\n        availability: ['available', 'busy', 'booked', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'available']\n      }, {\n        date: '2024-04-07',\n        availability: ['busy', 'booked', 'available', 'busy', 'available', 'available', 'busy', 'booked', 'available', 'available', 'busy', 'booked']\n      }]\n    }\n    // Add more doctors for Hospital B if needed\n    ]\n  }\n  // Add more hospitals if needed\n  ];\n  const filteredHospitals = hospitals.filter(hospital => hospital.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  const handleViewDoctors = hospitalId => {\n    setSelectedHospital(hospitalId);\n    setSelectedDoctor(null);\n  };\n  const handleViewSchedule = doctorId => {\n    setSelectedDoctor(doctorId);\n    setIsBookingMode(false);\n  };\n  const handleCellClick = (date, index) => {\n    if (isBookingMode) {\n      const selectedHospitalIndex = selectedHospital - 1; // Adjust index for hospital\n      const selectedDoctorIndex = selectedDoctor - 1; // Adjust index for doctor\n\n      // Check if the selected hospital and doctor exist\n      if (selectedHospitalIndex >= 0 && selectedDoctorIndex >= 0 && hospitals[selectedHospitalIndex].doctors[selectedDoctorIndex]) {\n        const schedule = hospitals[selectedHospitalIndex].doctors[selectedDoctorIndex].schedule;\n\n        // Check if the schedule exists for the selected date\n        if (schedule) {\n          var _schedule$find;\n          const isGreen = ((_schedule$find = schedule.find(day => day.date === date)) === null || _schedule$find === void 0 ? void 0 : _schedule$find.availability[index]) === 'available';\n          if (!lockedSlots.includes(`${date}_${index}`) && isGreen) {\n            setSelectedSlot({\n              date,\n              index\n            });\n          }\n        }\n      }\n    }\n  };\n  const handleLockSlot = () => {\n    if (selectedSlot) {\n      const slotKey = `${selectedSlot.date}_${selectedSlot.index}`;\n      setLockedSlots([...lockedSlots, slotKey]);\n      setSelectedSlot(null);\n    }\n  };\n  const handleToggleBookingMode = () => {\n    setIsBookingMode(!isBookingMode);\n    setSelectedSlot(null);\n  };\n  const renderAvailability = (availability, date) => {\n    return availability.map((slot, index) => {\n      let className = '';\n      switch (slot) {\n        case 'available':\n          className = 'available-new';\n          break;\n        case 'booked':\n          className = 'booked-new';\n          break;\n        case 'busy':\n          className = 'busy-new';\n          break;\n        default:\n          className = '';\n      }\n      const slotKey = `${date}_${index}`;\n      const isLocked = lockedSlots.includes(slotKey);\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: isBookingMode && slot === 'available' && !isLocked ? 'available-new clickable' : className,\n        onClick: () => handleCellClick(date, index),\n        children: [isBookingMode && slot === 'available' && !isLocked && selectedSlot && selectedSlot.date === date && selectedSlot.index === index && 'Selected', isLocked && 'Locked']\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const isDoctorBusy = doctor => {\n    return doctor.schedule.some(day => day.availability.includes('busy'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-list-container-new\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Available Hospitals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredHospitals.map((hospital, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: hospital.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), selectedHospital === hospital.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Doctors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: hospital.doctors.map((doctor, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: doctor.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: doctor.specialty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 23\n              }, this), selectedDoctor === doctor.id && /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"availability-table-new\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '150px'\n                      },\n                      children: \"Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 31\n                    }, this), Array.from({\n                      length: 12\n                    }, (_, i) => i + 8).map(hour => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: [hour, \":00 - \", hour + 1, \":00\"]\n                    }, hour, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 33\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: doctor.schedule.map((day, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: day.date\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 33\n                    }, this), renderAvailability(day.availability, day.date)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 25\n              }, this), selectedDoctor !== doctor.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: isDoctorBusy(doctor) ? 'doc-list-wala-button-new busy-new' : 'doc-list-wala-button-new',\n                onClick: () => handleViewSchedule(doctor.id),\n                children: \"View Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this), selectedDoctor && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"doc-list-wala-button-new\",\n            onClick: handleToggleBookingMode,\n            children: isBookingMode ? 'Cancel Booking' : 'Book Appointment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this), selectedSlot && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"doc-list-wala-button-new\",\n            onClick: handleLockSlot,\n            children: \"Lock Slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), selectedHospital !== hospital.id && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"doc-list-wala-button-new\",\n          onClick: () => handleViewDoctors(hospital.id),\n          children: \"View Doctors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorList, \"WGov8T+/BAHs9GDWkGgzqtZdWY8=\");\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useState","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorList","_s","searchTerm","setSearchTerm","selectedHospital","setSelectedHospital","selectedDoctor","setSelectedDoctor","isBookingMode","setIsBookingMode","selectedSlot","setSelectedSlot","lockedSlots","setLockedSlots","hospitals","id","name","doctors","specialty","schedule","date","availability","filteredHospitals","filter","hospital","toLowerCase","includes","handleViewDoctors","hospitalId","handleViewSchedule","doctorId","handleCellClick","index","selectedHospitalIndex","selectedDoctorIndex","_schedule$find","isGreen","find","day","handleLockSlot","slotKey","handleToggleBookingMode","renderAvailability","map","slot","className","isLocked","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","isDoctorBusy","doctor","some","onSearch","style","textAlign","idx","width","Array","from","length","_","i","hour","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Patient/DoctorList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './../../css/Patient/DoctorList.css';\r\nimport SearchBar from './../../components/Patient/SearchBar';\r\n\r\nfunction DoctorList() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedHospital, setSelectedHospital] = useState(null);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n  const [isBookingMode, setIsBookingMode] = useState(false);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [lockedSlots, setLockedSlots] = useState([]);\r\n\r\n  const hospitals = [\r\n    {\r\n      id: 1,\r\n      name: 'Hospital A',\r\n      doctors: [\r\n        {\r\n          id: 1,\r\n          name: 'Dr. John Doe',\r\n          specialty: 'Cardiologist',\r\n          schedule: [\r\n            { date: '2024-04-01', availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available'] },\r\n            { date: '2024-04-02', availability: ['booked','busy','available','busy','available','busy','busy','available','booked','booked','booked','booked'] },\r\n            { date: '2024-04-03', availability: ['busy','booked','available','busy','available','available','busy','booked','available','available','busy','available'] },\r\n            { date: '2024-04-04', availability: ['available','available','busy','busy','busy','available','available','booked','available','busy','available','available'] },\r\n            { date: '2024-04-05', availability: ['busy','booked','available','busy','available','busy','busy','available','booked','booked','busy','booked'] },\r\n            { date: '2024-04-06', availability: ['available','busy','booked','busy','available','available','busy','booked','available','available','busy','available'] },\r\n            { date: '2024-04-07', availability: ['busy','booked','available','busy','available','available','busy','booked','available','available','busy','booked'] }\r\n          ]\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Dr. Jane Smith',\r\n          specialty: 'Dermatologist',\r\n          schedule: [\r\n            { date: '2024-04-01', availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available'] },\r\n            { date: '2024-04-02', availability: ['booked','busy','available','busy','available','busy','busy','available','booked','booked','booked','booked'] },\r\n            { date: '2024-04-03', availability: ['busy','booked','available','busy','available','available','busy','booked','available','available','busy','available'] },\r\n            { date: '2024-04-04', availability: ['available','available','busy','busy','busy','available','available','booked','available','busy','available','available'] },\r\n            { date: '2024-04-05', availability: ['busy','booked','available','busy','available','busy','busy','available','booked','booked','busy','booked'] },\r\n            { date: '2024-04-06', availability: ['available','busy','booked','busy','available','available','busy','booked','available','available','busy','available'] },\r\n            { date: '2024-04-07', availability: ['busy','booked','booked','busy','available','available','busy','booked','available','available','busy','booked'] }\r\n          ]\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Hospital B',\r\n      doctors: [\r\n        {\r\n          id: 3,\r\n          name: 'Dr. Michael Brown',\r\n          specialty: 'Pediatrician',\r\n          schedule: [\r\n            { date: '2024-04-01', availability: ['busy', 'busy', 'booked', 'busy', 'busy', 'busy', 'booked', 'available', 'available', 'booked', 'available', 'available'] },\r\n            { date: '2024-04-02', availability: ['booked','busy','available','busy','available','busy','busy','available','booked','booked','booked','booked'] },\r\n            { date: '2024-04-03', availability: ['busy','booked','available','busy','available','available','busy','booked','available','available','busy','available'] },\r\n            { date: '2024-04-04', availability: ['available','available','busy','busy','busy','available','available','booked','available','busy','available','available'] },\r\n            { date: '2024-04-05', availability: ['busy','booked','available','busy','available','busy','busy','available','booked','booked','busy','booked'] },\r\n            { date: '2024-04-06', availability: ['available','busy','booked','busy','available','available','busy','booked','available','available','busy','available'] },\r\n            { date: '2024-04-07', availability: ['busy','booked','available','busy','available','available','busy','booked','available','available','busy','booked'] }\r\n          ]\r\n        },\r\n        // Add more doctors for Hospital B if needed\r\n      ]\r\n    },\r\n    // Add more hospitals if needed\r\n  ];\r\n\r\n  const filteredHospitals = hospitals.filter((hospital) =>\r\n    hospital.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleViewDoctors = (hospitalId) => {\r\n    setSelectedHospital(hospitalId);\r\n    setSelectedDoctor(null);\r\n  };\r\n\r\n  const handleViewSchedule = (doctorId) => {\r\n    setSelectedDoctor(doctorId);\r\n    setIsBookingMode(false);\r\n  };\r\n\r\n  const handleCellClick = (date, index) => {\r\n    if (isBookingMode) {\r\n      const selectedHospitalIndex = selectedHospital - 1; // Adjust index for hospital\r\n      const selectedDoctorIndex = selectedDoctor - 1; // Adjust index for doctor\r\n  \r\n      // Check if the selected hospital and doctor exist\r\n      if (selectedHospitalIndex >= 0 && selectedDoctorIndex >= 0 && hospitals[selectedHospitalIndex].doctors[selectedDoctorIndex]) {\r\n        const schedule = hospitals[selectedHospitalIndex].doctors[selectedDoctorIndex].schedule;\r\n        \r\n        // Check if the schedule exists for the selected date\r\n        if (schedule) {\r\n          const isGreen = schedule.find((day) => day.date === date)?.availability[index] === 'available';\r\n  \r\n          if (!lockedSlots.includes(`${date}_${index}`) && isGreen) {\r\n            setSelectedSlot({ date, index });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  \r\n  \r\n  const handleLockSlot = () => {\r\n    if (selectedSlot) {\r\n      const slotKey = `${selectedSlot.date}_${selectedSlot.index}`;\r\n      setLockedSlots([...lockedSlots, slotKey]);\r\n      setSelectedSlot(null);\r\n    }\r\n  };\r\n\r\n  const handleToggleBookingMode = () => {\r\n    setIsBookingMode(!isBookingMode);\r\n    setSelectedSlot(null);\r\n  };\r\n\r\n  const renderAvailability = (availability, date) => {\r\n    return availability.map((slot, index) => {\r\n      let className = '';\r\n      switch (slot) {\r\n        case 'available':\r\n          className = 'available-new';\r\n          break;\r\n        case 'booked':\r\n          className = 'booked-new';\r\n          break;\r\n        case 'busy':\r\n          className = 'busy-new';\r\n          break;\r\n        default:\r\n          className = '';\r\n      }\r\n      const slotKey = `${date}_${index}`;\r\n      const isLocked = lockedSlots.includes(slotKey);\r\n      return (\r\n        <td\r\n          key={index}\r\n          className={isBookingMode && slot === 'available' && !isLocked ? 'available-new clickable' : className}\r\n          onClick={() => handleCellClick(date, index)}\r\n        >\r\n          {isBookingMode && slot === 'available' && !isLocked && selectedSlot && selectedSlot.date === date && selectedSlot.index === index && 'Selected'}\r\n          {isLocked && 'Locked'}\r\n        </td>\r\n      );\r\n    });\r\n  };\r\n\r\n  const isDoctorBusy = (doctor) => {\r\n    return doctor.schedule.some(day => day.availability.includes('busy'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"doctor-list-container-new\">\r\n      <SearchBar onSearch={setSearchTerm} />\r\n      <h2 style={{textAlign: 'center'}}>Available Hospitals</h2>\r\n      <ul>\r\n        {filteredHospitals.map((hospital, index) => (\r\n          <li key={index}>\r\n            <h3>{hospital.name}</h3>\r\n            {selectedHospital === hospital.id && (\r\n              <>\r\n                <h4>Doctors:</h4>\r\n                <ul>\r\n                  {hospital.doctors.map((doctor, idx) => (\r\n                    <li key={idx}>\r\n                      <h5>{doctor.name}</h5>\r\n                      <p>{doctor.specialty}</p>\r\n                      {selectedDoctor === doctor.id && (\r\n                        <table className=\"availability-table-new\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th style={{ width: '150px' }}>Date</th> \r\n                              {Array.from({ length: 12 }, (_, i) => i + 8).map((hour) => (\r\n                                <th key={hour}>{hour}:00 - {hour + 1}:00</th>\r\n                              ))}\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {doctor.schedule.map((day, idx) => (\r\n                              <tr key={idx}>\r\n                                <td>{day.date}</td>\r\n                                {renderAvailability(day.availability, day.date)}\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n                      )}\r\n                      {selectedDoctor !== doctor.id && (\r\n                        <button className={isDoctorBusy(doctor) ? 'doc-list-wala-button-new busy-new' : 'doc-list-wala-button-new'} onClick={() => handleViewSchedule(doctor.id)}>\r\n                          View Schedule\r\n                        </button>\r\n                      )}\r\n                      <br />\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                {selectedDoctor && (\r\n                  <button className=\"doc-list-wala-button-new\" onClick={handleToggleBookingMode}>\r\n                    {isBookingMode ? 'Cancel Booking' : 'Book Appointment'}\r\n                  </button>\r\n                )}\r\n                {selectedSlot && (\r\n                  <button className=\"doc-list-wala-button-new\" onClick={handleLockSlot}>\r\n                    Lock Slot\r\n                  </button>\r\n                )}\r\n              </>\r\n            )}\r\n            {selectedHospital !== hospital.id && (\r\n              <button className=\"doc-list-wala-button-new\" onClick={() => handleViewDoctors(hospital.id)}>\r\n                View Doctors\r\n              </button>\r\n            )}\r\n            <br />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}