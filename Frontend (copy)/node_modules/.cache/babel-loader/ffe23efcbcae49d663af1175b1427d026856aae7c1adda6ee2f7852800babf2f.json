{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/Ddashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadSchedule() {\n  _s();\n  // Function to generate time slots with 45-minute intervals\n  const generateTimeSlots = () => {\n    const startTime = 9 * 60; // 9:00 AM in minutes\n    const endTime = 17 * 60 + 15; // 5:15 PM in minutes\n    const interval = 45; // 45 minutes interval\n    const timeSlots = [];\n    for (let i = startTime; i <= endTime; i += interval) {\n      const hours = Math.floor(i / 60);\n      const minutes = i % 60;\n      const formattedTime = `${hours < 10 ? '0' : ''}${hours}:${minutes === 0 ? '00' : minutes}`;\n      timeSlots.push(formattedTime);\n    }\n    return timeSlots;\n  };\n\n  // Dummy schedule data (replace with your actual data source)\n  const dummySchedule = {\n    \"slots\": [[2024, 4, 5, 11, 15], [2024, 4, 6, 15, 45], [2024, 4, 7, 15, 0], [2024, 4, 6, 15, 45], [2024, 4, 5, 15, 0]],\n    \"appointments\": [{\n      id: 1,\n      datetime: [2024, 4, 5, 9, 0],\n      patientName: 'John Doe'\n    }, {\n      id: 2,\n      datetime: [2024, 4, 6, 10, 30],\n      patientName: 'somebody someone'\n    }, {\n      id: 3,\n      datetime: [2024, 4, 7, 11, 15],\n      patientName: 'Alice Smith'\n    }, {\n      id: 5,\n      datetime: [2024, 4, 6, 9, 0],\n      patientName: 'John Doe'\n    }]\n  };\n  const initialSchedule = () => {\n    const today = new Date();\n    const next7Days = Array.from({\n      length: 7\n    }, (_, index) => {\n      const date = new Date(today);\n      date.setDate(date.getDate() + index);\n      return date.toLocaleDateString('en-US');\n    });\n    const timeSlots = generateTimeSlots();\n    const schedule = next7Days.reduce((acc, date) => {\n      acc[date] = timeSlots.reduce((acc2, time) => {\n        acc2[time] = false; // All slots initially unavailable\n        return acc2;\n      }, {});\n      return acc;\n    }, {});\n    dummySchedule.slots.forEach(slot => {\n      const [year, month, day, hour, minute] = slot;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = true; // Set slot to available\n      }\n    });\n    dummySchedule.appointments.forEach(appointment => {\n      const [year, month, day, hour, minute] = appointment.datetime;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = {\n          type: 'appointment',\n          data: appointment\n        }; // Set appointment slot\n      }\n    });\n    return schedule;\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState(initialSchedule());\n\n  // State for modal visibility and selected appointment\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n\n  // Function to toggle modal visibility and set selected appointment\n  const handleOpenModal = appointment => {\n    setSelectedAppointment(appointment);\n    setIsModalOpen(true);\n  };\n\n  // Function to close modal\n  const handleCloseModal = () => {\n    setSelectedAppointment(null);\n    setIsModalOpen(false);\n  };\n\n  // Function to handle joining the meeting\n  const handleJoinMeeting = () => {\n    alert(`Joining meeting for appointment with ${selectedAppointment.data.patientName}`);\n  };\n\n  // Function to handle viewing patient details\n  const handleViewPatientDetails = () => {\n    alert(`Viewing details for patient ${selectedAppointment.data.patientName}`);\n  };\n\n  // Function to handle canceling the appointment\n  const handleCancelAppointment = () => {\n    const confirmed = window.confirm('Are you sure you want to cancel this appointment?');\n    if (confirmed) {\n      // Logic to cancel the appointment\n      const date = selectedAppointment.data.datetime.slice(0, 3).join('/');\n      const time = `${selectedAppointment.data.datetime[3]}:${selectedAppointment.data.datetime[4]}`;\n      const appointmentIndex = dummySchedule.appointments.findIndex(appointment => appointment.datetime.join('/') === date && appointment.datetime[3] === selectedAppointment.data.datetime[3]);\n      if (appointmentIndex !== -1) {\n        dummySchedule.appointments.splice(appointmentIndex, 1);\n        setSchedule(initialSchedule()); // Refresh schedule after cancellation\n        handleCloseModal();\n      }\n    }\n  };\n\n  // Function to handle cell click (toggle availability or open modal)\n  const handleCellClick = (date, time) => {\n    if (!isEditing && schedule[date][time] && schedule[date][time].type === 'appointment') {\n      handleOpenModal(schedule[date][time]);\n    } else if (isEditing) {\n      setSchedule(prevSchedule => ({\n        ...prevSchedule,\n        [date]: {\n          ...prevSchedule[date],\n          [time]: !prevSchedule[date][time]\n        }\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"This week's Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered custom-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), generateTimeSlots().map(time => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: time\n              }, time, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(schedule).map(([date, timeslots]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), Object.entries(timeslots).map(([time, availability]) => /*#__PURE__*/_jsxDEV(\"td\", {\n                className: availability === true ? 'table-success bg-success text-white' : availability && availability.type === 'appointment' ? 'table-danger clickable' : 'table-secondary',\n                onClick: () => handleCellClick(date, time),\n                children: isEditing ? '' : availability && availability.type === 'appointment' ? 'Appointment' : time\n              }, `${date}-${time}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this))]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), selectedAppointment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      style: {\n        display: isModalOpen ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-sm custom-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"Appointment Details - \", selectedAppointment.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              onClick: handleCloseModal,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", selectedAppointment.data.datetime.join('/')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Time: \", selectedAppointment.data.datetime[3], \":\", selectedAppointment.data.datetime[4]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Patient: \", selectedAppointment.data.patientName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success custom-button2\",\n              onClick: handleJoinMeeting,\n              children: \"Join Meeting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-info custom-button2\",\n              onClick: handleViewPatientDetails,\n              children: \"View Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              onClick: handleCancelAppointment,\n              children: \"Cancel Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSchedule, \"69I0bfztzMiGO9NS4T70aGhpK74=\");\n_c = UploadSchedule;\nvar _c;\n$RefreshReg$(_c, \"UploadSchedule\");","map":{"version":3,"names":["React","useState","useEffect","SideNavbar","Navbar","jsxDEV","_jsxDEV","UploadSchedule","_s","generateTimeSlots","startTime","endTime","interval","timeSlots","i","hours","Math","floor","minutes","formattedTime","push","dummySchedule","id","datetime","patientName","initialSchedule","today","Date","next7Days","Array","from","length","_","index","date","setDate","getDate","toLocaleDateString","schedule","reduce","acc","acc2","time","slots","forEach","slot","year","month","day","hour","minute","formattedDate","undefined","appointments","appointment","type","data","setSchedule","isModalOpen","setIsModalOpen","selectedAppointment","setSelectedAppointment","handleOpenModal","handleCloseModal","handleJoinMeeting","alert","handleViewPatientDetails","handleCancelAppointment","confirmed","window","confirm","slice","join","appointmentIndex","findIndex","splice","handleCellClick","isEditing","prevSchedule","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Object","entries","timeslots","scope","availability","onClick","style","display","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/Ddashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\n\nexport default function UploadSchedule() {\n  // Function to generate time slots with 45-minute intervals\n  const generateTimeSlots = () => {\n    const startTime = 9 * 60; // 9:00 AM in minutes\n    const endTime = 17 * 60 + 15; // 5:15 PM in minutes\n    const interval = 45; // 45 minutes interval\n    const timeSlots = [];\n\n    for (let i = startTime; i <= endTime; i += interval) {\n      const hours = Math.floor(i / 60);\n      const minutes = i % 60;\n      const formattedTime = `${hours < 10 ? '0' : ''}${hours}:${minutes === 0 ? '00' : minutes}`;\n      timeSlots.push(formattedTime);\n    }\n\n    return timeSlots;\n  };\n\n  // Dummy schedule data (replace with your actual data source)\n  const dummySchedule = {\n    \"slots\": [\n      [2024, 4, 5, 11, 15],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 7, 15, 0],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 5, 15, 0]\n    ],\n    \"appointments\": [\n      { id: 1, datetime: [2024,4,5,9,0], patientName: 'John Doe' },\n      { id: 2, datetime: [2024,4,6,10,30], patientName: 'somebody someone' },\n      { id: 3, datetime: [2024,4,7,11,15], patientName: 'Alice Smith' },\n      { id: 5, datetime: [2024,4,6,9,0], patientName: 'John Doe' },\n    ]\n  };\n\n  const initialSchedule = () => {\n    const today = new Date();\n    const next7Days = Array.from({ length: 7 }, (_, index) => {\n      const date = new Date(today);\n      date.setDate(date.getDate() + index);\n      return date.toLocaleDateString('en-US');\n    });\n\n    const timeSlots = generateTimeSlots();\n\n    const schedule = next7Days.reduce((acc, date) => {\n      acc[date] = timeSlots.reduce((acc2, time) => {\n        acc2[time] = false; // All slots initially unavailable\n        return acc2;\n      }, {});\n      return acc;\n    }, {});\n\n    dummySchedule.slots.forEach(slot => {\n      const [year, month, day, hour, minute] = slot;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = true; // Set slot to available\n      }\n    });\n\n    dummySchedule.appointments.forEach(appointment => {\n      const [year, month, day, hour, minute] = appointment.datetime;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = { type: 'appointment', data: appointment }; // Set appointment slot\n      }\n    });\n\n    return schedule;\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState(initialSchedule());\n\n  // State for modal visibility and selected appointment\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n\n  // Function to toggle modal visibility and set selected appointment\n  const handleOpenModal = (appointment) => {\n    setSelectedAppointment(appointment);\n    setIsModalOpen(true);\n  };\n\n  // Function to close modal\n  const handleCloseModal = () => {\n    setSelectedAppointment(null);\n    setIsModalOpen(false);\n  };\n\n  // Function to handle joining the meeting\n  const handleJoinMeeting = () => {\n    alert(`Joining meeting for appointment with ${selectedAppointment.data.patientName}`);\n  };\n\n  // Function to handle viewing patient details\n  const handleViewPatientDetails = () => {\n    alert(`Viewing details for patient ${selectedAppointment.data.patientName}`);\n  };\n\n  // Function to handle canceling the appointment\n  const handleCancelAppointment = () => {\n    const confirmed = window.confirm('Are you sure you want to cancel this appointment?');\n    if (confirmed) {\n      // Logic to cancel the appointment\n      const date = selectedAppointment.data.datetime.slice(0, 3).join('/');\n      const time = `${selectedAppointment.data.datetime[3]}:${selectedAppointment.data.datetime[4]}`;\n      const appointmentIndex = dummySchedule.appointments.findIndex(appointment =>\n        appointment.datetime.join('/') === date && appointment.datetime[3] === selectedAppointment.data.datetime[3]\n      );\n      if (appointmentIndex !== -1) {\n        dummySchedule.appointments.splice(appointmentIndex, 1);\n        setSchedule(initialSchedule()); // Refresh schedule after cancellation\n        handleCloseModal();\n      }\n    }\n  };\n\n  // Function to handle cell click (toggle availability or open modal)\n  const handleCellClick = (date, time) => {\n    if (!isEditing && schedule[date][time] && schedule[date][time].type === 'appointment') {\n      handleOpenModal(schedule[date][time]);\n    } else if (isEditing) {\n      setSchedule((prevSchedule) => ({\n        ...prevSchedule,\n        [date]: {\n          ...prevSchedule[date],\n          [time]: !prevSchedule[date][time],\n        },\n      }));\n    }\n  };\n\n  return (\n    <div className='dashboard-container'>\n      <Navbar />\n      <div className= 'dashboard-content'>\n        <SideNavbar />\n        <div className=\"main-content\">\n          <h2>This week's Schedule</h2>\n          <table className=\"table table-bordered custom-box\">\n            <thead>\n              <tr>\n                <th></th>\n                {generateTimeSlots().map(time => (\n                  <th key={time}>{time}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {Object.entries(schedule).map(([date, timeslots]) => (\n                <tr key={date}>\n                  <th scope=\"row\">{date}</th>\n                  {Object.entries(timeslots).map(([time, availability]) => (\n                    <td\n                      key={`${date}-${time}`}\n                      className={\n                        availability === true ? 'table-success bg-success text-white' :\n                        availability && availability.type === 'appointment' ? 'table-danger clickable' :\n                        'table-secondary'\n                      }\n                      onClick={() => handleCellClick(date, time)}\n                    >\n                      {isEditing ? '' : availability && availability.type === 'appointment' ? 'Appointment' : time}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      {selectedAppointment && (\n        <div className=\"modal\" style={{ display: isModalOpen ? 'block' : 'none' }}>\n          <div className=\"modal-dialog modal-sm custom-box\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Appointment Details - {selectedAppointment.date}</h5>\n                <button type=\"button\" className=\"close\" onClick={handleCloseModal}>\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <p>Date: {selectedAppointment.data.datetime.join('/')}</p>\n                <p>Time: {selectedAppointment.data.datetime[3]}:{selectedAppointment.data.datetime[4]}</p>\n                <p>Patient: {selectedAppointment.data.patientName}</p>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-success custom-button2\" onClick={handleJoinMeeting}>\n                  Join Meeting\n                </button>\n                <button type=\"button\" className=\"btn btn-info custom-button2\" onClick={handleViewPatientDetails}>\n                  View Patient\n                </button>\n                <button type=\"button\" className=\"btn btn-danger\" onClick={handleCancelAppointment}>\n                  Cancel Appointment\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}