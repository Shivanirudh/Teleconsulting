{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/Appointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport '../../css/Patient/Dashboard.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PreviousAppointments() {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  // Dummy data for demonstration purposes\n  // const appointmentData = [\n  //   { id: 1, date: '2022-02-10', time: '10:00 AM', patientName: 'John Doe' },\n  //   { id: 2, date: '2022-02-11', time: '02:30 PM', patientName: 'Jane Smith' },\n  //   // Add more appointment data as needed\n  // ];\n\n  useEffect(() => {\n    // Fetch booked appointments from API\n    fetchAppointments();\n  }, []);\n  const fetchAppointments = () => {\n    // Retrieve token from local storage\n    const token = localStorage.getItem('token');\n\n    // Make API request to fetch appointments\n    fetch('http://localhost:8081/api/v1/doctor/list-appointments', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      const currentDateTime = new Date(); // Get current date and time\n      const currentTime = currentDateTime.getTime(); // Get current time in milliseconds\n\n      const newAppointments = [];\n\n      // Iterate through fetched appointments\n      data.forEach(appointment => {\n        const slot = new Date(appointment.slot[0], appointment.slot[1] - 1, appointment.slot[2], appointment.slot[3], appointment.slot[4]);\n        const slotTime = slot.getTime(); // Convert slot time to milliseconds\n        // If current time is greater than or equal to slot time + 45 minutes, move appointment to appointments\n        if (currentTime >= slotTime + 45 * 60 * 1000) {\n          newAppointments.push(appointment);\n        }\n      });\n      console.log(newAppointments);\n      // Update state with new appointments\n      setAppointments(newAppointments);\n    }).catch(error => console.error('Error fetching appointments:', error));\n  };\n  // State for search query\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchByDate, setSearchByDate] = useState(false);\n\n  // Filter appointments based on search query\n  const filteredAppointments = appointments.filter(appointment => searchByDate ? appointment.date.toLowerCase().includes(searchQuery.toLowerCase()) : appointment.patientName.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  // Function to handle viewing appointment details\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Previous Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 custom-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: searchByDate ? \"Search by date (YYYY-MM-DD)\" : \"Search by patient name\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              checked: searchByDate,\n              onChange: () => setSearchByDate(!searchByDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 11\n            }, this), \"Search by date\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group custom-box\",\n          children: filteredAppointments.map(appointment => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Date: \", appointment.date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Time: \", appointment.time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Patient: \", appointment.patientName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/details\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary custom-button\",\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this)\n          }, appointment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(PreviousAppointments, \"xY9+Swc4IJDcd/7CqLj9NRFQWJQ=\");\n_c = PreviousAppointments;\nvar _c;\n$RefreshReg$(_c, \"PreviousAppointments\");","map":{"version":3,"names":["React","useState","useEffect","SideNavbar","Navbar","Link","jsxDEV","_jsxDEV","PreviousAppointments","_s","appointments","setAppointments","fetchAppointments","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","json","data","console","log","currentDateTime","Date","currentTime","getTime","newAppointments","forEach","appointment","slot","slotTime","push","catch","error","searchQuery","setSearchQuery","searchByDate","setSearchByDate","filteredAppointments","filter","date","toLowerCase","includes","patientName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","checked","map","time","to","id","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/Appointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\r\nimport Navbar from \"../../components/Doctor/Navbar\";\r\nimport '../../css/Patient/Dashboard.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function PreviousAppointments() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  // Dummy data for demonstration purposes\r\n  // const appointmentData = [\r\n  //   { id: 1, date: '2022-02-10', time: '10:00 AM', patientName: 'John Doe' },\r\n  //   { id: 2, date: '2022-02-11', time: '02:30 PM', patientName: 'Jane Smith' },\r\n  //   // Add more appointment data as needed\r\n  // ];\r\n\r\n  useEffect(() => {\r\n    // Fetch booked appointments from API\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const fetchAppointments = () => {\r\n    // Retrieve token from local storage\r\n    const token = localStorage.getItem('token');\r\n\r\n    // Make API request to fetch appointments\r\n    fetch('http://localhost:8081/api/v1/doctor/list-appointments', {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        const currentDateTime = new Date(); // Get current date and time\r\n        const currentTime = currentDateTime.getTime(); // Get current time in milliseconds\r\n\r\n        const newAppointments = [];\r\n\r\n        // Iterate through fetched appointments\r\n        data.forEach((appointment) => {\r\n          const slot = new Date(\r\n            appointment.slot[0],\r\n            appointment.slot[1] - 1,\r\n            appointment.slot[2],\r\n            appointment.slot[3],\r\n            appointment.slot[4]\r\n          );\r\n          const slotTime = slot.getTime(); // Convert slot time to milliseconds\r\n          // If current time is greater than or equal to slot time + 45 minutes, move appointment to appointments\r\n          if (currentTime >= slotTime + 45 * 60 * 1000) {\r\n            newAppointments.push(appointment);\r\n          } \r\n        });\r\n        console.log(newAppointments);\r\n        // Update state with new appointments\r\n        setAppointments(newAppointments);\r\n      })\r\n      .catch((error) => console.error('Error fetching appointments:', error));\r\n  };\r\n  // State for search query\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchByDate, setSearchByDate] = useState(false);\r\n\r\n  // Filter appointments based on search query\r\n  const filteredAppointments = appointments.filter(appointment =>\r\n    (searchByDate ? appointment.date.toLowerCase().includes(searchQuery.toLowerCase()) : appointment.patientName.toLowerCase().includes(searchQuery.toLowerCase()))\r\n  );\r\n\r\n  // Function to handle viewing appointment details\r\n  \r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Navbar/>\r\n    <div className=\"dashboard-content\">\r\n      <SideNavbar/>\r\n    <div className=\"main-content\">\r\n    \r\n      <h2>Previous Appointments</h2>\r\n\r\n      {/* Search bar */}\r\n      <div className=\"mb-3 custom-box\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder={searchByDate ? \"Search by date (YYYY-MM-DD)\" : \"Search by patient name\"}\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n        />\r\n        <label className=\"form-check-label\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            checked={searchByDate}\r\n            onChange={() => setSearchByDate(!searchByDate)}\r\n          />\r\n          Search by date\r\n        </label>\r\n      </div>\r\n\r\n      {/* List of appointments */}\r\n      <ul className=\"list-group custom-box\">\r\n        {filteredAppointments.map(appointment => (\r\n          <li key={appointment.id} className=\"list-group-item\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <div>\r\n                <p>Date: {appointment.date}</p>\r\n                <p>Time: {appointment.time}</p>\r\n                <p>Patient: {appointment.patientName}</p>\r\n              </div>\r\n             <Link to=\"/details\"> <button className=\"btn btn-primary custom-button\" >\r\n                View Details\r\n              </button></Link>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}