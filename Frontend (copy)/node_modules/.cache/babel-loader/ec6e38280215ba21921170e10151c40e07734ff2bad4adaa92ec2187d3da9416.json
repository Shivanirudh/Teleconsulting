{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/Ddashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadSchedule() {\n  _s();\n  // Function to generate time slots with 45-minute intervals\n  const generateTimeSlots = () => {\n    const startTime = 9 * 60; // 9:00 AM in minutes\n    const endTime = 17 * 60 + 15; // 5:15 PM in minutes\n    const interval = 45; // 45 minutes interval\n    const timeSlots = [];\n    for (let i = startTime; i <= endTime; i += interval) {\n      const hours = Math.floor(i / 60);\n      const minutes = i % 60;\n      const formattedTime = `${hours < 10 ? '0' : ''}${hours}:${minutes === 0 ? '00' : minutes}`;\n      timeSlots.push(formattedTime);\n    }\n    return timeSlots;\n  };\n\n  // Dummy schedule data (replace with your actual data source)\n  const dummySchedule = {\n    \"slots\": [[2024, 4, 5, 11, 15], [2024, 4, 6, 15, 45], [2024, 4, 7, 15, 0], [2024, 4, 6, 15, 45], [2024, 4, 5, 15, 0]],\n    \"appointments\": [{\n      id: 1,\n      date: '2024-04-05',\n      time: '09:00 AM',\n      patientName: 'John Doe',\n      status: 'confirmed'\n    }, {\n      id: 2,\n      date: '2024-04-06',\n      time: '10:30 AM',\n      patientName: 'Somebody Someone',\n      status: 'confirmed'\n    }, {\n      id: 3,\n      date: '2024-04-07',\n      time: '11:15 AM',\n      patientName: 'Alice Smith',\n      status: 'confirmed'\n    }, {\n      id: 5,\n      date: '2024-04-06',\n      time: '09:00 AM',\n      patientName: 'John Doe',\n      status: 'confirmed'\n    }]\n  };\n  const initialSchedule = () => {\n    const today = new Date();\n    const next7Days = Array.from({\n      length: 7\n    }, (_, index) => {\n      const date = new Date(today);\n      date.setDate(date.getDate() + index);\n      return date.toLocaleDateString('en-US');\n    });\n    const timeSlots = generateTimeSlots();\n    const schedule = next7Days.reduce((acc, date) => {\n      acc[date] = timeSlots.reduce((acc2, time) => {\n        acc2[time] = false; // All slots initially unavailable\n        return acc2;\n      }, {});\n      return acc;\n    }, {});\n    dummySchedule.slots.forEach(slot => {\n      const [year, month, day, hour, minute] = slot;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = true; // Set slot to available\n      }\n    });\n    dummySchedule.appointments.forEach(appointment => {\n      const {\n        date,\n        time,\n        patientName\n      } = appointment;\n      const formattedDate = new Date(date).toLocaleDateString('en-US');\n      const formattedTime = time;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = {\n          ...appointment,\n          type: 'appointment'\n        }; // Set appointment slot\n      }\n    });\n    return schedule;\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState(initialSchedule());\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n\n  // State for selected appointment\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability or show warning for appointment)\n  const handleCellClick = (date, time) => {\n    if (isEditing) {\n      if (schedule[date][time] === 'appointment') {\n        const confirmed = window.confirm('You are about to cancel an appointment. Are you sure?');\n        if (confirmed) {\n          setSchedule(prevSchedule => ({\n            ...prevSchedule,\n            [date]: {\n              ...prevSchedule[date],\n              [time]: false\n            }\n          }));\n        }\n      } else {\n        setSchedule(prevSchedule => ({\n          ...prevSchedule,\n          [date]: {\n            ...prevSchedule[date],\n            [time]: !prevSchedule[date][time]\n          }\n        }));\n      }\n    } else {\n      const cellData = schedule[date][time];\n      if (cellData && cellData.type === 'appointment') {\n        setSelectedAppointment(cellData);\n      }\n    }\n  };\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setSelectedAppointment(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"This week's Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered custom-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), generateTimeSlots().map(time => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: time\n              }, time, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(schedule).map(([date, timeslots]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), Object.entries(timeslots).map(([time, cellData]) => /*#__PURE__*/_jsxDEV(\"td\", {\n                className: cellData === true ? 'table-success bg-success text-white' : cellData && cellData.type === 'appointment' ? 'table-danger' : 'table-secondary',\n                onClick: () => handleCellClick(date, time),\n                children: !isEditing && cellData && cellData.type === 'appointment' && cellData.patientName\n              }, `${date}-${time}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this))]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary custom-button\",\n          onClick: handleEdit,\n          children: isEditing ? 'Cancel Edit' : 'Edit Schedule'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), selectedAppointment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show\",\n      style: {\n        display: 'block'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-sm custom-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"Appointment Details - \", selectedAppointment.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              onClick: handleCloseModal,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", selectedAppointment.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Time: \", selectedAppointment.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Patient: \", selectedAppointment.patientName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success custom-button2\",\n              onClick: handleJoinMeeting,\n              children: \"Join Meeting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-info custom-button2\",\n              onClick: handleViewPatientDetails,\n              children: \"View Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              onClick: handleCancelAppointment,\n              children: \"Cancel Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSchedule, \"T8z5vB/hFtjT0/kmcxABOGwB8TE=\");\n_c = UploadSchedule;\nvar _c;\n$RefreshReg$(_c, \"UploadSchedule\");","map":{"version":3,"names":["React","useState","useEffect","SideNavbar","Navbar","jsxDEV","_jsxDEV","UploadSchedule","_s","generateTimeSlots","startTime","endTime","interval","timeSlots","i","hours","Math","floor","minutes","formattedTime","push","dummySchedule","id","date","time","patientName","status","initialSchedule","today","Date","next7Days","Array","from","length","_","index","setDate","getDate","toLocaleDateString","schedule","reduce","acc","acc2","slots","forEach","slot","year","month","day","hour","minute","formattedDate","undefined","appointments","appointment","type","setSchedule","isEditing","setIsEditing","selectedAppointment","setSelectedAppointment","handleEdit","handleCellClick","confirmed","window","confirm","prevSchedule","cellData","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Object","entries","timeslots","scope","onClick","style","display","handleJoinMeeting","handleViewPatientDetails","handleCancelAppointment","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Doctor/Ddashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport SideNavbar from \"../../components/Doctor/sidenavbar\";\nimport Navbar from \"../../components/Doctor/Navbar\";\nimport \"../../css/Doctor/ddashboard.css\";\n\nexport default function UploadSchedule() {\n  // Function to generate time slots with 45-minute intervals\n  const generateTimeSlots = () => {\n    const startTime = 9 * 60; // 9:00 AM in minutes\n    const endTime = 17 * 60 + 15; // 5:15 PM in minutes\n    const interval = 45; // 45 minutes interval\n    const timeSlots = [];\n\n    for (let i = startTime; i <= endTime; i += interval) {\n      const hours = Math.floor(i / 60);\n      const minutes = i % 60;\n      const formattedTime = `${hours < 10 ? '0' : ''}${hours}:${minutes === 0 ? '00' : minutes}`;\n      timeSlots.push(formattedTime);\n    }\n\n    return timeSlots;\n  };\n\n  // Dummy schedule data (replace with your actual data source)\n  const dummySchedule = {\n    \"slots\": [\n      [2024, 4, 5, 11, 15],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 7, 15, 0],\n      [2024, 4, 6, 15, 45],\n      [2024, 4, 5, 15, 0]\n    ],\n    \"appointments\": [\n      { id: 1, date: '2024-04-05', time: '09:00 AM', patientName: 'John Doe', status: 'confirmed' },\n      { id: 2, date: '2024-04-06', time: '10:30 AM', patientName: 'Somebody Someone', status: 'confirmed' },\n      { id: 3, date: '2024-04-07', time: '11:15 AM', patientName: 'Alice Smith', status: 'confirmed' },\n      { id: 5, date: '2024-04-06', time: '09:00 AM', patientName: 'John Doe', status: 'confirmed' },\n    ]\n  };\n\n  const initialSchedule = () => {\n    const today = new Date();\n    const next7Days = Array.from({ length: 7 }, (_, index) => {\n      const date = new Date(today);\n      date.setDate(date.getDate() + index);\n      return date.toLocaleDateString('en-US');\n    });\n\n    const timeSlots = generateTimeSlots();\n\n    const schedule = next7Days.reduce((acc, date) => {\n      acc[date] = timeSlots.reduce((acc2, time) => {\n        acc2[time] = false; // All slots initially unavailable\n        return acc2;\n      }, {});\n      return acc;\n    }, {});\n\n    dummySchedule.slots.forEach(slot => {\n      const [year, month, day, hour, minute] = slot;\n      const date = new Date(year, month - 1, day);\n      const formattedDate = date.toLocaleDateString('en-US');\n      const formattedTime = `${hour < 10 ? '0' : ''}${hour}:${minute === 0 ? '00' : minute}`;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = true; // Set slot to available\n      }\n    });\n\n    dummySchedule.appointments.forEach(appointment => {\n      const { date, time, patientName } = appointment;\n      const formattedDate = new Date(date).toLocaleDateString('en-US');\n      const formattedTime = time;\n      if (schedule[formattedDate] && schedule[formattedDate][formattedTime] !== undefined) {\n        schedule[formattedDate][formattedTime] = { ...appointment, type: 'appointment' }; // Set appointment slot\n      }\n    });\n\n    return schedule;\n  };\n\n  // State for schedule data\n  const [schedule, setSchedule] = useState(initialSchedule());\n\n  // State for editing mode\n  const [isEditing, setIsEditing] = useState(false);\n\n  // State for selected appointment\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n\n  // Function to toggle editing mode\n  const handleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Function to handle cell click (toggle availability or show warning for appointment)\n  const handleCellClick = (date, time) => {\n    if (isEditing) {\n      if (schedule[date][time] === 'appointment') {\n        const confirmed = window.confirm('You are about to cancel an appointment. Are you sure?');\n        if (confirmed) {\n          setSchedule((prevSchedule) => ({\n            ...prevSchedule,\n            [date]: {\n              ...prevSchedule[date],\n              [time]: false,\n            },\n          }));\n        }\n      } else {\n        setSchedule((prevSchedule) => ({\n          ...prevSchedule,\n          [date]: {\n            ...prevSchedule[date],\n            [time]: !prevSchedule[date][time],\n          },\n        }));\n      }\n    } else {\n      const cellData = schedule[date][time];\n      if (cellData && cellData.type === 'appointment') {\n        setSelectedAppointment(cellData);\n      }\n    }\n  };\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setSelectedAppointment(null);\n  };\n\n  return (\n    <div className='dashboard-container'>\n      <Navbar />\n      <div className= 'dashboard-content'>\n        <SideNavbar />\n        <div className=\"main-content\">\n          <h2>This week's Schedule</h2>\n          <table className=\"table table-bordered custom-box\">\n            <thead>\n              <tr>\n                <th></th>\n                {generateTimeSlots().map(time => (\n                  <th key={time}>{time}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {Object.entries(schedule).map(([date, timeslots]) => (\n                <tr key={date}>\n                  <th scope=\"row\">{date}</th>\n                  {Object.entries(timeslots).map(([time, cellData]) => (\n                    <td\n                      key={`${date}-${time}`}\n                      className={\n                        cellData === true ? 'table-success bg-success text-white' :\n                        cellData && cellData.type === 'appointment' ? 'table-danger' :\n                        'table-secondary'\n                      }\n                      onClick={() => handleCellClick(date, time)}\n                    >\n                      {!isEditing && cellData && cellData.type === 'appointment' && cellData.patientName}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          <button type=\"button\" className=\"btn btn-primary custom-button\" onClick={handleEdit}>\n            {isEditing ? 'Cancel Edit' : 'Edit Schedule'}\n          </button>\n        </div>\n      </div>\n      {/* Modal for appointment details */}\n      {selectedAppointment && (\n        <div className=\"modal fade show\" style={{ display: 'block' }}>\n          <div className=\"modal-dialog modal-sm custom-box\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Appointment Details - {selectedAppointment.date}</h5>\n                <button type=\"button\" className=\"close\" onClick={handleCloseModal}>\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <p>Date: {selectedAppointment.date}</p>\n                <p>Time: {selectedAppointment.time}</p>\n                <p>Patient: {selectedAppointment.patientName}</p>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-success custom-button2\" onClick={handleJoinMeeting}>\n                  Join Meeting\n                </button>\n                <button type=\"button\" className=\"btn btn-info custom-button2\" onClick={handleViewPatientDetails}>\n                  View Patient\n                </button>\n                <button type=\"button\" className=\"btn btn-danger\" onClick={handleCancelAppointment}>\n                  Cancel Appointment\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}