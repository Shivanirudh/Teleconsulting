{"ast":null,"code":"var _jsxFileName = \"/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Patient/BookedAppointments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './../../css/Patient/BookedAppointments.css';\nimport './../../css/Patient/PreviousAppointments.css'; // Import CSS for PreviousAppointments\n\n// Import PreviousAppointments component\nimport PreviousAppointments from './PreviousAppointments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookedAppointments() {\n  _s();\n  const [bookedAppointments, setBookedAppointments] = useState([]);\n  const [previousAppointments, setPreviousAppointments] = useState([]);\n  const [activeTab, setActiveTab] = useState('booked'); // 'booked' by default\n\n  useEffect(() => {\n    // Fetch booked appointments from API\n    fetchBookedAppointments();\n  }, []);\n\n  // Function to fetch booked appointments from API\n  const fetchBookedAppointments = () => {\n    // Retrieve token from local storage\n    const token = localStorage.getItem('token');\n\n    // Make API request to fetch appointments\n    fetch('http://localhost:8081/api/v1/patient/list-appointments', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      const currentDateTime = new Date(); // Get current date and time\n      const currentTime = currentDateTime.getTime(); // Get current time in milliseconds\n\n      const newBookedAppointments = [];\n      const newPreviousAppointments = [];\n\n      // Iterate through fetched appointments\n      data.forEach(appointment => {\n        const slotTime = new Date(appointment.slot[0], appointment.slot[1] - 1, appointment.slot[2], appointment.slot[3], appointment.slot[4]).getTime(); // Convert slot time to milliseconds\n\n        // If current time is greater than or equal to slot time + 45 minutes, move appointment to previous appointments\n        if (currentTime >= slotTime + 45 * 60 * 1000) {\n          newPreviousAppointments.push(appointment);\n        } else {\n          newBookedAppointments.push(appointment);\n        }\n      });\n\n      // Update state with new appointments\n      setBookedAppointments(newBookedAppointments);\n      setPreviousAppointments(newPreviousAppointments);\n    }).catch(error => console.error('Error fetching appointments:', error));\n  };\n\n  // Function to handle tab change\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n  };\n  const handleGoToMeeting = appointmentId => {\n    // Logic to navigate to the meeting for the given appointment ID\n    console.log('Navigating to meeting for appointment ID:', appointmentId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booked-appointments-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabChange('booked'),\n        className: activeTab === 'booked' ? 'active' : '',\n        children: \"Booked Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabChange('previous'),\n        className: activeTab === 'previous' ? 'active' : '',\n        children: \"Previous Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), activeTab === 'booked' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Booked Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"booked-appointments-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Doctor Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: bookedAppointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [appointment.doctor_id.first_name, \" \", appointment.doctor_id.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [appointment.slot[2], \"/\", appointment.slot[1], \"/\", appointment.slot[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [appointment.slot[3], \":\", appointment.slot[4]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bas-aps-but\",\n                onClick: () => handleGoToMeeting(appointment.appointmentId),\n                children: \"Go to Meeting\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)]\n          }, appointment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PreviousAppointments, {\n      appointments: previousAppointments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(BookedAppointments, \"xbs2GMWgJspoB/93hL2bhzWWW1E=\");\n_c = BookedAppointments;\nexport default BookedAppointments;\nvar _c;\n$RefreshReg$(_c, \"BookedAppointments\");","map":{"version":3,"names":["React","useState","useEffect","PreviousAppointments","jsxDEV","_jsxDEV","BookedAppointments","_s","bookedAppointments","setBookedAppointments","previousAppointments","setPreviousAppointments","activeTab","setActiveTab","fetchBookedAppointments","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","json","data","currentDateTime","Date","currentTime","getTime","newBookedAppointments","newPreviousAppointments","forEach","appointment","slotTime","slot","push","catch","error","console","handleTabChange","tab","handleGoToMeeting","appointmentId","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","doctor_id","first_name","last_name","id","appointments","_c","$RefreshReg$"],"sources":["/home/aksh2002/Desktop/Teleconsulting/Frontend (copy)/src/pages/Patient/BookedAppointments.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './../../css/Patient/BookedAppointments.css';\r\nimport './../../css/Patient/PreviousAppointments.css'; // Import CSS for PreviousAppointments\r\n\r\n// Import PreviousAppointments component\r\nimport PreviousAppointments from './PreviousAppointments';\r\n\r\nfunction BookedAppointments() {\r\n  const [bookedAppointments, setBookedAppointments] = useState([]);\r\n  const [previousAppointments, setPreviousAppointments] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('booked'); // 'booked' by default\r\n\r\n  useEffect(() => {\r\n    // Fetch booked appointments from API\r\n    fetchBookedAppointments();\r\n  }, []);\r\n\r\n  // Function to fetch booked appointments from API\r\n  const fetchBookedAppointments = () => {\r\n    // Retrieve token from local storage\r\n    const token = localStorage.getItem('token');\r\n\r\n    // Make API request to fetch appointments\r\n    fetch('http://localhost:8081/api/v1/patient/list-appointments', {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const currentDateTime = new Date(); // Get current date and time\r\n        const currentTime = currentDateTime.getTime(); // Get current time in milliseconds\r\n\r\n        const newBookedAppointments = [];\r\n        const newPreviousAppointments = [];\r\n\r\n        // Iterate through fetched appointments\r\n        data.forEach((appointment) => {\r\n          const slotTime = new Date(\r\n            appointment.slot[0],\r\n            appointment.slot[1] - 1,\r\n            appointment.slot[2],\r\n            appointment.slot[3],\r\n            appointment.slot[4]\r\n          ).getTime(); // Convert slot time to milliseconds\r\n\r\n          // If current time is greater than or equal to slot time + 45 minutes, move appointment to previous appointments\r\n          if (currentTime >= slotTime + 45 * 60 * 1000) {\r\n            newPreviousAppointments.push(appointment);\r\n          } else {\r\n            newBookedAppointments.push(appointment);\r\n          }\r\n        });\r\n\r\n        // Update state with new appointments\r\n        setBookedAppointments(newBookedAppointments);\r\n        setPreviousAppointments(newPreviousAppointments);\r\n      })\r\n      .catch((error) => console.error('Error fetching appointments:', error));\r\n  };\r\n\r\n  // Function to handle tab change\r\n  const handleTabChange = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  const handleGoToMeeting = (appointmentId) => {\r\n    // Logic to navigate to the meeting for the given appointment ID\r\n    console.log('Navigating to meeting for appointment ID:', appointmentId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"booked-appointments-container\">\r\n      <div className=\"tab-buttons\">\r\n        <button onClick={() => handleTabChange('booked')} className={activeTab === 'booked' ? 'active' : ''}>\r\n          Booked Appointments\r\n        </button>\r\n        <button onClick={() => handleTabChange('previous')} className={activeTab === 'previous' ? 'active' : ''}>\r\n          Previous Appointments\r\n        </button>\r\n      </div>\r\n\r\n      {activeTab === 'booked' ? (\r\n        <div>\r\n          <h2>Booked Appointments</h2>\r\n          <table className=\"booked-appointments-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Doctor Name</th>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {bookedAppointments.map((appointment) => (\r\n                <tr key={appointment.id}>\r\n                  <td>{appointment.doctor_id.first_name} {appointment.doctor_id.last_name}</td>\r\n                  <td>{appointment.slot[2]}/{appointment.slot[1]}/{appointment.slot[0]}</td>\r\n                  <td>{appointment.slot[3]}:{appointment.slot[4]}</td>\r\n                  <td>\r\n                    <button className='bas-aps-but' onClick={() => handleGoToMeeting(appointment.appointmentId)}>Go to Meeting</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <PreviousAppointments appointments={previousAppointments} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookedAppointments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}